"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.V9Dialog = void 0;
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var react_1 = require("@fluentui/react");
var react_components_1 = require("@fluentui/react-components");
var MODAL_DISMISS_DELAY = parseFloat(react_1.AnimationVariables.durationValue2) * 1000;
var V9Dialog = function (props) {
    var isOpen = props.isOpen, onDismissed = props.onDismissed, onDismiss = props.onDismiss, isBlocking = props.isBlocking, popupProps = props.popupProps;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    var onOpenChange = function (ev, data) {
        if (data.open === false) {
            onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(ev);
        }
    };
    React.useEffect(function () {
        var timeoutId;
        if (!isOpen) {
            timeoutId = setTimeout(function () {
                onDismissed === null || onDismissed === void 0 ? void 0 : onDismissed();
            }, MODAL_DISMISS_DELAY);
        }
        return function () {
            if (timeoutId) {
                clearTimeout(timeoutId);
            }
        };
    }, [isOpen, onDismissed]);
    return (
    // eslint-disable-next-line react/jsx-no-bind
    React.createElement(react_components_1.Dialog, { open: isOpen, onOpenChange: onOpenChange, modalType: isBlocking ? 'alert' : 'modal' },
        React.createElement(react_components_1.DialogSurface, tslib_1.__assign({}, popupProps), props.children)));
};
exports.V9Dialog = V9Dialog;
//# sourceMappingURL=V9DialogWrapper.js.map