{"version":3,"file":"react-controls.cjs.production.min.js","sources":["../src/constants/EBreakPoints.ts","../src/constants/EMessageTypes.ts","../src/utils/timeZoneUtils/useDateFnsLocales.ts","../src/components/calendarControl/ECalendarViews.ts","../src/utils/useComponentsUtils.ts","../src/utils/useImageUtils.ts","../src/components/Card/useCardStyles.tsx","../src/components/Card/Card.tsx","../src/components/Carousel/useCarouselButton.tsx","../src/components/Carousel/useCarouselStyles.ts","../src/components/Carousel/useCarouselStylesMain.tsx","../src/components/Carousel/Carousel.tsx","../src/components/Center/useCenterStyles.tsx","../src/components/Grid/useGridStyles.tsx","../src/components/Grid/Grid.tsx","../src/components/Layout/useLayoutStyles.tsx","../src/components/Layout/Layout.tsx","../src/components/RenderLabel/useRenderLabelStylesStyles.ts","../src/components/RenderLabel/RenderLabel.tsx","../src/components/RenderSpninner/RenderSpinner.tsx","../src/components/Space/useSpaceStyles.tsx","../src/components/Stack/useStackStyles.tsx","../src/components/Stack/Stack.tsx","../src/components/customControlBar/CustomControlBar.tsx","../src/components/dataGrid/SkeletonLoading.tsx","../src/components/dataGrid/useDataGridStyles.tsx","../src/components/genericOverFlowMenu/GenericOverFlowMenu.tsx","../src/components/renderDialog/RenderDialog.tsx","../src/components/renderHeader/useRenderHeaderStyles.ts","../src/components/showMessage/useShowMessageStyles.ts","../src/components/breadcrumb/useBreadcrumStyles.ts","../src/components/breadcrumb/OverflowMenu.tsx","../src/components/calendarControl/EventDetailsPopover.tsx","../src/components/calendarControl/useCalendarStyles.ts","../src/components/calendarControl/useUtils.ts","../src/components/calendarControl/RenderEventToDayOfMonth.tsx","../src/components/calendarControl/Day.tsx","../src/components/calendarControl/useWeekViewStyles.ts","../src/components/calendarControl/EventPopoverCard.tsx","../src/components/calendarControl/EventRender.tsx","../src/components/calendarControl/useCalendar.ts","../src/components/calendarControl/DayView.tsx","../src/components/calendarControl/useDayViewStyles.ts","../src/components/calendarControl/SelectCalendarView.tsx","../src/components/selectDay/SelectDay.tsx","../src/components/selectMonth/CalendarMonth.tsx","../src/components/selectMonth/SelectMonth.tsx","../src/components/selectWeek/SelectWeek.tsx","../src/components/calendarControl/Toolbar.tsx","../src/components/calendarControl/WeekView.tsx","../src/components/calendarControl/CalendarControl.tsx","../src/components/AspectRatio/AspectRatio.tsx","../src/components/breadcrumb/Breadcrumb.tsx","../src/components/Center/Center.tsx","../src/components/dataGrid/DataGrid.tsx","../src/components/dropDownField/DropDownField.tsx","../src/components/Layout/LayoutItem.tsx","../src/components/renderHeader/RenderHeader.tsx","../src/components/shareDialog/ShareDialog.tsx","../src/components/showMessage/ShowMessage.tsx","../src/components/Space/SPace.tsx","../src/components/Stack/StackItem.tsx","../src/components/AspectRatio/useAspectRatioStyles.tsx","../src/utils/timeZoneUtils/useTimeZoneHelper.ts"],"sourcesContent":["export enum EBreakPoints { \n    XXXLarge = 1900,\n    ExtraExtraLarge = 1400,\n    ExtraLarge = 1200,\n    Large = 992,\n    Medium = 768,\n    Small = 576,\n    ExtraSmall = 320\n\n }\n\n","export enum EMessageType {\n    INFO = 'info',\n    ERROR = 'error',\n    SUCCESS = 'success',\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport {\n  bg,\n  ca,\n  cs,\n  da,\n  de,\n  el,\n  enCA,\n  enGB,\n  enUS,\n  es,\n  et,\n  fi,\n  fr,\n  gl,\n  hr,\n  hu,\n  it,\n  ja,\n  lt,\n  lv,\n  nb,\n  nl,\n  nlBE,\n  pl,\n  pt,\n  ro,\n  ru,\n  sk,\n  sl,\n  sr,\n  sv,\n  tr,\n  vi,\n  zhCN,\n  zhTW,\n} from 'date-fns/locale';\n\nexport const useDateFnsLocales = () => {\n  const localeMapping: { [key: string]: Locale } = {\n    \n    \"en-CA\": enCA,\n    \"en-GB\": enGB,\n    \n    \n    \"en-US\": enUS,\n    \"bg-BG\": bg,\n    \"de-DE\": de,\n    \"es-ES\": es,\n    \"fi-FI\": fi,\n    \"fr-FR\": fr,\n    \"hr-HR\": hr,\n    \"hu-HU\": hu,\n    \"it-IT\": it,\n    \"lt-LT\": lt,\n    \"lv-LV\": lv,\n    \"nl-NL\": nl,\n    \"pl-PL\": pl,\n    \"pt-PT\": pt,\n    \"ro-RO\": ro,\n    \"ru-RU\": ru,\n    \"sl-SI\": sl,\n    \"sk-SK\": sk,\n    \"sr-SR\": sr,\n    \"tr-TR\": tr,\n    \n    \"nl-BE\": nlBE,\n    \"zh-TW\": zhTW,\n    \"zh-CN\": zhCN,\n    \"ca-ES\": ca,\n    \"cs-CZ\": cs,\n    \"da-DK\": da,\n    \"de-CH\": de,\n    \"el-GR\": el,\n    \"es-ES_tradnl\": es,\n    \"es-AR\": es,\n    \"et-EE\": et,\n     \n    \"gl-ES\": gl,\n    \"ja-JP\": ja,\n    \"nb-NO\": nb,\n    \"sv-FI\": sv,\n    \"sv-SE\": sv,\n    \"vi-VN\": vi,\n    \n  };\n\n  const getLocaleFromCultureName = (cultureName: string): Locale|null|undefined => {\n    if (!!cultureName) {\n      const locale: Locale = localeMapping[cultureName];\n      if (!!locale) {\n        return locale;\n      } else {\n        console.error(`[LocaleHelper.getLocaleFromCultureName()] => Cannot find module for locale: ${cultureName}`);\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return { getLocaleFromCultureName };\n};\n","export enum ECalendarViews {\n    Day = \"day\",\n    Week = \"week\",\n    Month = \"month\",\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\n\nimport {\n THorizontalSpacing,\n TPading,\n TVerticalSpacing,\n} from '../types';\n\nimport { EBreakPoints } from '../constants';\nimport {\n  IBaseProps,\n} from '../components/baseComponentProps/IBaseProps';\nimport {\n  tokens,\n} from '@fluentui/react-components';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\ninterface IUseUtils {\n  getCacheKey: (key: string, uniqueId: string) => string;\n  validateUrl: (url: string) => boolean;\n  trimBeginDoubleSlash: (value: string) => string;\n \n  isValidGUID: (str: string) => boolean;\n  getPageNameFromUrl: (url: string) => string;\n  getSPSiteAbsoluteUrl: (absolutefileUrl: string) => string;\n  getFileServerRelativeUrlFromAbsoluteUrl: (absoluteFileUrl: string) => string;\n  encodeRestUrl: (query: string) => string;\n  getSpacing: <T>(value: string | T, containerWidth: number, type: \"vertical\" | \"horizontal\" | \"padding\") => string;\n  getCurrentDevice: (containerWidth: number) => string;\n  getBaseStyles: (baseProps: IBaseProps, containerWidth: number, containerHeight: number) => React.CSSProperties;\n  getLayoutBreakPoint: <T>(value: string | T, containerWidth: number) => string;\n}\n\nexport const useComponentUtils = (): IUseUtils => {\n  const getCacheKey = React.useCallback((key: string, uniqueId: string) => {\n    return `${key}${uniqueId}`;\n  }, []);\n\n  const validateUrl = React.useCallback((url: string): boolean => {\n    if (!url) {\n      return false;\n    }\n    try {\n      const urlValid = new URL(url);\n      return !!urlValid;\n    } catch (e) {\n      return false;\n    }\n  }, []);\n\n  const trimBeginDoubleSlash = (value: string) => {\n    if (value.charAt(0) === \"/\" && value.charAt(1) === \"/\") {\n      return value.substring(1, value.length);\n    }\n    return value;\n  };\n\n \n\n  const isValidGUID = React.useCallback((str: string): boolean => {\n    const regex = new RegExp(/^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$/);\n    if (!str) {\n      return false;\n    }\n\n    if (regex.test(str) === true) {\n      return true;\n    } else {\n      return false;\n    }\n  }, []);\n\n  const getPageNameFromUrl = React.useCallback((url: string): string => {\n    if (!url) {\n      return \"\";\n    }\n    const urlParts = url.split(\"/\");\n    return urlParts[urlParts.length - 1];\n  }, []);\n\n  const getSPSiteAbsoluteUrl = React.useCallback((absolutefileUrl: string): string => {\n    const hostname = window.location.hostname;\n    const rootSiteUrl = `https://${hostname}`;\n    if (\n      absolutefileUrl.indexOf(`${rootSiteUrl}/sites/`) > -1 ||\n      absolutefileUrl.indexOf(`${rootSiteUrl}/teams/`) > -1\n    ) {\n      const fileServerRelativeUrl = absolutefileUrl.split(hostname)[1];\n      // Split server relative URL by '/' to obtain web name\n      const webName = fileServerRelativeUrl.split(\"/\")[2];\n\n      let webAbsoluteUrl = `https://${hostname}/sites/${webName}`;\n      if (absolutefileUrl.indexOf(`${rootSiteUrl}/teams/`) > -1) {\n        webAbsoluteUrl = `https://${hostname}/teams/${webName}`;\n      }\n      return webAbsoluteUrl;\n    }\n    return rootSiteUrl;\n  }, []);\n\n  const getFileServerRelativeUrlFromAbsoluteUrl = React.useCallback((absoluteFileUrl: string): string => {\n    let fileServerRelativeUrl = absoluteFileUrl.split(window.location.hostname)[1];\n    fileServerRelativeUrl = trimBeginDoubleSlash(fileServerRelativeUrl);\n    return fileServerRelativeUrl;\n  }, []);\n\n  const encodeRestUrl = React.useCallback((query: string) => {\n    return encodeURIComponent(query.replace(/[%]/g, \"%25\"))\n      .replace(/[']/g, \"%27%27\")\n      .replace(/[&]/g, \"%26\")\n      .replace(/[#]/g, \"%23\")\n      .replace(/[?]/g, \"%3F\")\n      .replace(/[/]/g, \"%2F\")\n      .replace(/[+]/g, \"%2B\");\n  }, []);\n\n  const checkValueBreakPoint = React.useCallback(<T>(value: string | T): boolean => {\n    if (value === null || value === undefined) { return false}\n    return (\n      Object.prototype.hasOwnProperty.call(value, \"extraSmall\") ||\n      Object.prototype.hasOwnProperty.call(value, \"small\") ||\n      Object.prototype.hasOwnProperty.call(value, \"medium\") ||\n      Object.prototype.hasOwnProperty.call(value, \"large\") ||\n      Object.prototype.hasOwnProperty.call(value, \"extraLarge\")\n    );\n  }, []);\n\n  const getProperty = React.useCallback(<T, K extends keyof T>(obj: T, key: K): T[K] => {\n    return obj[key.toString().toLowerCase() as K];\n  }, []);\n\n  const getCurrentDevice = React.useCallback((containerWidth: number): string => {\n    if (containerWidth >= EBreakPoints.XXXLarge) return 'XXXLarge';\n    if (containerWidth >= EBreakPoints.ExtraExtraLarge) return 'ExtraExtraLarge';\n  if (containerWidth >= EBreakPoints.ExtraLarge) return 'ExtraLarge';\n  if (containerWidth >= Number(EBreakPoints.Large)) return 'Large';\n  if (containerWidth >= Number(EBreakPoints.Medium)) return 'Medium';\n  if (containerWidth >= Number(EBreakPoints.Small)) return 'Small';\n  return 'ExtraSmall';\n  }, []);\n\n  const getSpacingBreakPoint = React.useCallback(\n    <T>(value: string | T, containerWidth: number): string => {\n      const device = getCurrentDevice(containerWidth);\n      const breakPoints: Record<string, string> = {\n        ExtraSmall: \"xs\",\n        Small: \"s\",\n        Medium: \"m\",\n        Large: \"l\",\n        ExtraLarge: \"xl\",\n        ExtraExtraLarge: \"xxl\",\n      };\n\n      let newValue = value;\n      if (checkValueBreakPoint<T>(value as string | T)) {\n        newValue =\n          (getProperty<T, keyof T >(value as T, (device as keyof T) ?? \"Medium\")  as unknown as  string) || breakPoints[device];\n      }\n      return newValue as string;\n    },\n    [getCurrentDevice, checkValueBreakPoint, getProperty]\n  );\n\n  // \"none\" | \"xxs\" | \"xs\" | \"sNudge\" | \"s\" | \"mNudge\" | \"m\" | \"l\" | \"xl\" | \"xxl\" | \"xxxl\"\n  const getSpacing = React.useCallback(\n    <T>(value: string | T, containerWidth: number, type: \"vertical\" | \"horizontal\" | \"padding\"): string => {\n      if (!value) return \"none\";\n  \n      // Check if value is in pixel format like '20px' or percentage format like '20%'\n      if (typeof value === \"string\" && (/^\\d+px$/.test(value) || /^\\d+%$/.test(value))) {\n        return value; // Return the same value for all sides\n      }\n  \n      const newType = type;\n      const spacingTokens: Record<string, string> = {\n        padding: \"spacingHorizontal\",\n        vertical: \"spacingVertical\",\n        horizontal: \"spacingHorizontal\",\n      };\n  \n      const newValue = getSpacingBreakPoint<T>(value, containerWidth);\n  \n      switch (newValue) {\n        case \"none\":\n          return tokens[`${spacingTokens[newType]}None` as keyof typeof tokens];\n        case \"xxs\":\n          return tokens[`${spacingTokens[newType]}XXS` as keyof typeof tokens];\n        case \"xs\":\n          return tokens[`${spacingTokens[newType]}XS` as keyof typeof tokens];\n        case \"sNudge\":\n          return tokens[`${spacingTokens[newType]}SNudge` as keyof typeof tokens];\n        case \"s\":\n          return tokens[`${spacingTokens[newType]}S` as keyof typeof tokens];\n        case \"mNudge\":\n          return tokens[`${spacingTokens[newType]}MNudge` as keyof typeof tokens];\n        case \"m\":\n          return tokens[`${spacingTokens[newType]}M` as keyof typeof tokens];\n        case \"l\":\n          return tokens[`${spacingTokens[newType]}L` as keyof typeof tokens];\n        case \"xl\":\n          return tokens[`${spacingTokens[newType]}XL` as keyof typeof tokens];\n        case \"xxl\":\n          return tokens[`${spacingTokens[newType]}XXL` as keyof typeof tokens];\n        case \"xxxl\":\n          return tokens[`${spacingTokens[newType]}XXXL` as keyof typeof tokens];\n        default:\n          return tokens[`${spacingTokens[newType]}M` as keyof typeof tokens];\n      }\n    },\n    [getSpacingBreakPoint]\n  );\n\n  const getBaseStyles = React.useCallback((baseProps:IBaseProps, containerWidth: number, _containerHeight: number): React.CSSProperties => {\n    const {\n      verticalSpacing,\n      horizontalSpacing,\n      paddingLeft,\n      paddingRight,\n      paddingBottom,\n      background,\n      width,\n      maxWidth,\n      height,\n      maxHeight,\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom,\n      paddingTop,\n      padding,\n      margin,\n      styles,\n    } = baseProps;\n    \n\n    let wpaddingTop = getSpacing<TPading>(paddingTop as string, containerWidth, \"padding\");\n    let wpaddingLeft = getSpacing<TPading>(paddingLeft as string, containerWidth, \"padding\");\n    let wpaddingRight = getSpacing<TPading>(paddingRight as string, containerWidth, \"padding\");\n    let wpaddingBottom = getSpacing<TPading>(paddingBottom as string, containerWidth, \"padding\");\n    const wpadding = getSpacing<TPading>(padding as string, containerWidth, \"padding\");\n\n    let wmarginLeft = getSpacing<TPading>(marginLeft as string, containerWidth, \"padding\");\n    let wmarginRight = getSpacing<TPading>(marginRight as string, containerWidth, \"padding\");\n    let wmarginTop = getSpacing<TPading>(marginTop as string, containerWidth, \"padding\");\n    let wmarginBottom = getSpacing<TPading>(marginBottom as string, containerWidth, \"padding\");\n\n    const wmargin = getSpacing<TPading>(margin as string, containerWidth, \"padding\");\n\n    if (wpadding) {\n      wpaddingTop =   wpaddingTop === 'none' ? wpadding : wpaddingTop;\n      wpaddingLeft = wpaddingLeft  === 'none' ? wpadding : wpaddingLeft;\n      wpaddingRight = wpaddingRight === 'none' ? wpadding : wpaddingRight;\n      wpaddingBottom = wpaddingBottom  === 'none' ? wpadding : wpaddingBottom;\n    }\n\n    if (wmargin) {\n      wmarginLeft = wmarginLeft  === 'none' ? wmargin : wmarginLeft;\n      wmarginRight = wmarginRight  === 'none' ? wmargin : wmarginRight;\n      wmarginTop = wmarginTop === 'none' ? wmargin : wmarginTop;  \n      wmarginBottom = wmarginBottom  === 'none' ? wmargin : wmarginBottom;\n    }\n\n    const wgapRow =  getSpacing<TVerticalSpacing>(verticalSpacing as string, containerWidth, \"vertical\");\n    const wgapCol = getSpacing<THorizontalSpacing>(horizontalSpacing as string, containerWidth, \"horizontal\");\n\n    const wgap = `${wgapRow} ${wgapCol}`;\n    return {\n      ...styles,\n      gap: wgap,\n      paddingTop: wpaddingTop,\n      paddingLeft: wpaddingLeft,\n      paddingRight: wpaddingRight,\n      paddingBottom: wpaddingBottom,\n      marginLeft: wmarginLeft,\n      marginRight: wmarginRight,\n      marginTop: wmarginTop,\n      marginBottom: wmarginBottom,\n      background: background,\n      width: width ?? undefined,\n      height: height ?? undefined,\n      maxWidth: maxWidth ?? undefined,\n      maxHeight: maxHeight ?? undefined,\n      overflow: \"auto\",\n       \n    };\n  }, [getSpacing]);\n\n\n  const getLayoutBreakPoint = React.useCallback(\n    <T>(value: string | T, containerWidth: number): string => {\n      const device = getCurrentDevice(containerWidth);\n      let newValue = value;\n      if (checkValueBreakPoint<T>(value as string | T)) {\n        newValue =\n          (getProperty<T, keyof T>(value as T, (device as keyof T) ?? \"Medium\")  as unknown as string) ||  \"\";\n      }\n      return newValue as string;\n    },\n    [getCurrentDevice, checkValueBreakPoint, getProperty]\n  );\n\n  return {\n    getCacheKey,\n    validateUrl,\n    trimBeginDoubleSlash,\n    isValidGUID,\n    getPageNameFromUrl,\n    getSPSiteAbsoluteUrl,\n    getFileServerRelativeUrlFromAbsoluteUrl,\n    encodeRestUrl,\n    getSpacing,\n    getCurrentDevice,\n    getBaseStyles,\n    getLayoutBreakPoint,\n  };\n}; // ... }\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useCallback } from 'react';\n\nconst DEBUG = process.env.NODE_ENV !== 'production';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { isEmpty } from 'lodash';\n\nconst DATA_IMAGE = \"data:image/\";\n\nexport const useImageUtils = () => {\n \n\n  const base64FromSVGUrl = useCallback(async (url: string): Promise<string> => {\n    const svg = await fetch(url).then((response) => response.text());\n    const svg64 = btoa(svg);\n    const b64Start = \"data:image/svg+xml;base64,\";\n    const image64 = b64Start + svg64;\n    return image64;\n  }, []);\n\n  const getImageBase64 = useCallback(async (pictureUrl: string, customWidth?: number, customHeight?: number): Promise<\n    string\n  > => {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.crossOrigin = \"anonymous\";\n      image.addEventListener(\"load\", () => {\n        const tempCanvas = document.createElement(\"canvas\");\n        tempCanvas.width = customWidth ?? image.width;\n        tempCanvas.height = customHeight ?? image.height;\n        tempCanvas?.getContext(\"2d\")?.drawImage(image, 0, 0, customWidth ?? image.width, customHeight ?? image.height);\n        let base64Str;\n        try {\n          base64Str = tempCanvas.toDataURL(\"image/png\", 1);\n          resolve(base64Str);\n        } catch (err) {\n          if (DEBUG) {\n            console.error(`[ImageService.getBase64Image]: Err='${(err as Error).message}'`);\n          }\n          reject(err);\n        }\n      });\n      image.addEventListener(\"error\", (err) => {\n        if (DEBUG) {\n          console.error(`[ImageService.getBase64Image]: Image load error='${err.message}'`);\n        }\n        reject(err);\n      });\n      image.src = pictureUrl;\n    });\n  }, []);\n\n  const isBase64Image = useCallback((data: string) => {\n    return !isEmpty(data) && data.indexOf(DATA_IMAGE) >= 0;\n  }, []);\n\n  const getBase64ImageFromDOMImg = useCallback((imgElementId: string): string | undefined => {\n    try {\n      const imgElement = document.getElementById(imgElementId) as any;\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = imgElement.width;\n      canvas.height = imgElement.height;\n      const ctx = canvas.getContext(\"2d\");\n      ctx?.drawImage(imgElement, 0, 0);\n      const dataURL = canvas.toDataURL(\"image/png\");\n\n      return dataURL;\n    } catch (err) {\n      if (DEBUG) {\n        console.error(`[getBase64ImageFromDOMImg]: Err='${(err as Error).message}'`);\n      }\n      return undefined;\n    }\n  }, []);\n\n  return {\n    getBase64ImageFromDOMImg,\n    isBase64Image,\n    getImageBase64,\n    base64FromSVGUrl,\n  };\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\nimport { ICardProps } from './ICardProps';\nimport { useComponentUtils } from '../../utils';\n\nexport const useCardStyles = (props: ICardProps) => {\n  const { styles } = props;\n  const { getBaseStyles } = useComponentUtils();\n\n  const cardStyles = React.useCallback(\n    (containerWidth: number, containerHeight: number): React.CSSProperties => {\n      const baseStyles = getBaseStyles(props, containerWidth, containerHeight);\n      return {\n        ...baseStyles,\n        ...styles,\n       \n      };\n    },\n    [getBaseStyles, props, styles]\n  );\n\n  const bodyCardDefaultStyles: React.CSSProperties = React.useMemo(() => {\n    return {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"start\",\n      alignItems: \"stretch\",\n      overflow: \"unset\",\n    };\n  }, []);\n\n  return { cardStyles, bodyCardDefaultStyles };\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\nimport {\n  Card as CarFUI,\n  CardFooter,\n  CardHeader,\n  CardPreview,\n  mergeClasses,\n} from '@fluentui/react-components';\n\nimport { ICardProps } from './ICardProps';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useCardStyles } from './useCardStyles';\n\nexport const Card = (props: React.PropsWithChildren<ICardProps>) => {\n  const {\n    className,\n    cardBody,\n    cardBodyClassName,\n    cardHeader,\n    cardHeaderClassName,\n    cardHeaderImage,\n    cardHeaderAction,\n    cardHeaderDescription,\n    cardFooterAction,\n    cardFooterClassName,\n    cardFooterContent,\n    cardPreviewImage,\n    cardPreviewLogo,\n    cardPreviewPosition = \"top\",\n  } = props;\n  const { cardStyles, bodyCardDefaultStyles } = useCardStyles(props);\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n\n  React.useEffect(() => {\n    let resizeObserver: ResizeObserver;\n    if (ref.current) {\n      // observer to detect changes in the size of the container\n      resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const { width, height } = entry.contentRect;\n          setWidth(width);\n          setHeight(height);\n        }\n      });\n      resizeObserver.observe(ref.current);\n    }\n    return () => {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, []);\n  return (\n    <>\n      <div ref={ref}>\n        <CarFUI className={className} style={cardStyles(width, height)} {...props}>\n          {cardPreviewImage && cardPreviewPosition === \"top\" && (\n            <CardPreview logo={cardPreviewLogo}>{cardPreviewImage} </CardPreview>\n          )}\n          {cardHeader && (\n            <CardHeader\n              className={cardHeaderClassName}\n              image={cardHeaderImage}\n              header={cardHeader}\n              description={cardHeaderDescription}\n              action={cardHeaderAction}\n            />\n          )}\n          {cardPreviewImage && cardPreviewPosition === \"afterHeader\" && (\n            <CardPreview logo={cardPreviewLogo}>{cardPreviewImage} </CardPreview>\n          )}\n          {cardBody && (\n            <div className={mergeClasses(cardBodyClassName)} style={bodyCardDefaultStyles}>\n              {cardBody}\n            </div>\n          )}\n          {cardPreviewImage && cardPreviewPosition === \"bottom\" && (\n            <CardPreview logo={cardPreviewLogo}>{cardPreviewImage} </CardPreview>\n          )}\n          {cardFooterContent && (\n            <CardFooter action={cardFooterAction} className={cardFooterClassName}>\n              {cardFooterContent}\n            </CardFooter>\n          )}\n        </CarFUI>\n      </div>\n    </>\n  );\n};\n","import {\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { EmblaCarouselType } from 'embla-carousel';\n\ntype UsePrevNextButtonsType = {\n    prevBtnDisabled: boolean\n    nextBtnDisabled: boolean\n    onPrevButtonClick: () => void\n    onNextButtonClick: () => void\n  }\n  \n  export const usePrevNextButtons = (\n    emblaApi: EmblaCarouselType | undefined\n  ): UsePrevNextButtonsType => {\n    const [prevBtnDisabled, setPrevBtnDisabled] = useState(true)\n    const [nextBtnDisabled, setNextBtnDisabled] = useState(true)\n  \n    const onPrevButtonClick = useCallback(() => {\n      if (!emblaApi) return\n      emblaApi.scrollPrev()\n    }, [emblaApi])\n  \n    const onNextButtonClick = useCallback(() => {\n      if (!emblaApi) return\n      emblaApi.scrollNext()\n    }, [emblaApi])\n  \n    const onSelect = useCallback((emblaApi: EmblaCarouselType) => {\n      setPrevBtnDisabled(!emblaApi.canScrollPrev())\n      setNextBtnDisabled(!emblaApi.canScrollNext())\n    }, [])\n  \n    useEffect(() => {\n      if (!emblaApi) return\n  \n      onSelect(emblaApi)\n      emblaApi.on('reInit', onSelect)\n      emblaApi.on('select', onSelect)\n    }, [emblaApi, onSelect])\n  \n    return {\n      prevBtnDisabled,\n      nextBtnDisabled,\n      onPrevButtonClick,\n      onNextButtonClick\n    }\n  }\n  \n   \n  \n  \n   \n  \n  ","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\nimport * as React from 'react';\n\n import { css } from '@emotion/css';\n\nimport { tokens } from '@fluentui/react-components';\n\n \nimport { ICarouselProps } from './ICarouselProps';\nimport { useComponentUtils } from '../../utils';\n\nexport const useCarouselStyles = (_props: ICarouselProps, containerWidth: number, ) => {\n  const { getCurrentDevice } = useComponentUtils();\n\n  const slideSizeBasedOnWidth = React.useCallback(() => {\n    const deviceSize = getCurrentDevice(containerWidth);\n    let slideSize = \"95%\";\n    switch (deviceSize) {\n      case \"Medium\":\n        slideSize = \"45%\";\n        break;\n      case \"Large\":\n        slideSize = \"calc(95% / 4)\";\n        break;\n      case \"ExtraLarge\":\n        slideSize = \"calc(95% / 5)\";\n        break;\n      default:\n        slideSize = \"95%\";\n        break;\n    }\n    return slideSize;\n  }, [containerWidth, getCurrentDevice]);\n\n  const getSlideSpacing = React.useCallback(() => {\n    const deviceSize = getCurrentDevice(containerWidth);\n\n    let slideSpacing =  tokens.spacingVerticalM;\n\n    switch (deviceSize) {\n      case \"Medium\":\n        slideSpacing =  tokens.spacingVerticalM;\n        break;\n      case \"Large\":\n        slideSpacing =  tokens.spacingVerticalL;\n        break;\n        case \"ExtraLarge\":\n        slideSpacing =  tokens.spacingVerticalXL;\n        break;\n      default:\n        slideSpacing =  tokens.spacingVerticalM;\n        break;\n    }\n    return slideSpacing;\n  }, [containerWidth, getCurrentDevice]);\n\n  const enableControls = css({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"stretch\",\n    gap: 10,\n    padding: 5,\n  });\n\n  const embla__viewport = css({\n    overflow: \"hidden\",\n    paddingTop: \"10px\",\n    paddingBottom: \"20px\",\n  });\n\n  const embla__container = css({\n    backfaceVisibility: \"hidden\",\n    display: \"flex\",\n    touchAction: \"pan-y\",\n    \n  });\n\n  const embla = css({\n    \".embla\": {},\n  });\n\n  const embla__slide = css({\n    minWidth: 0,\n    flex: `0 0 ${slideSizeBasedOnWidth()}`,\n    paddingLeft: `${getSlideSpacing()}`,\n  });\n\nconst embla__buttons = css({\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n    gap: 0,\n    alignItems: \"center\",\n});\n\n\n  return { enableControls, embla__viewport, embla__container, embla, embla__slide, embla__buttons };\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\n \nimport { ICarouselProps } from './ICarouselProps';\nimport { useComponentUtils } from '../../utils';\n\nexport const useCarouselStylesMain = (props: ICarouselProps) => {\n  const { styles } = props;\n\n  const { getBaseStyles } = useComponentUtils();\n  const carouselStyles = React.useCallback(\n    (containerWidth: number, containerHeight: number): React.CSSProperties => {\n      const baseStyles = getBaseStyles(props, containerWidth, containerHeight);\n      return {\n        ...baseStyles,\n        ...styles,\n      };\n    },\n    [getBaseStyles, props, styles]\n  );\n\n  return { carouselStyles };\n};\n ","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport useEmblaCarousel from 'embla-carousel-react';\n\nimport {\n  Button,\n  makeStyles,\n  mergeClasses,\n  Subtitle2,\n} from '@fluentui/react-components';\nimport {\n  ChevronLeftRegular,\n  ChevronRightRegular,\n} from '@fluentui/react-icons';\n\nimport { ICarouselProps } from './ICarouselProps';\nimport { usePrevNextButtons } from './useCarouselButton';\nimport { useCarouselStyles } from './useCarouselStyles';\nimport { useCarouselStylesMain } from './useCarouselStylesMain';\n\nconst useStyle = makeStyles({\n  titleStyles:{\n    display: \"-webkit-box\",\n     overflow : \"hidden\",\n    textOverflow: \"ellipsis\",\n    \"-webkit-line-clamp\": \"1\",\n    \"-webkit-box-orient\": \"vertical\",\n    textAlign: \"start\",\n    height: \"25px\",\n  }\n})\n\nexport const Carousel  = (\n  props: React.PropsWithChildren<ICarouselProps>\n) => {\n  const { className, items, title } = props;\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n  const { carouselStyles } = useCarouselStylesMain(props);\n  const [emblaRef, emblaApi] = useEmblaCarousel();\nconst styles = useStyle();\n  const {\n    enableControls,\n    embla__slide,\n    embla__container,\n    embla__viewport,\n    embla__buttons,\n    \n  } = useCarouselStyles(props, width );\n  const { prevBtnDisabled, nextBtnDisabled, onPrevButtonClick, onNextButtonClick } = usePrevNextButtons(emblaApi);\n\n  React.useEffect(() => {\n    let resizeObserver: ResizeObserver;\n    if (ref.current) {\n      // observer to detect changes in the size of the container\n\n      resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const { width, height } = entry.contentRect;\n          setWidth(width);\n          setHeight(height);\n        }\n      });\n      setWidth(ref.current.clientWidth);\n      setHeight(ref.current.clientHeight);\n      resizeObserver.observe(ref.current);\n    }\n    return () => {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, []);\n\n  return (\n    <>\n      <div\n        id=\"-carousel\"\n        className={mergeClasses(className, \"embla\")}\n        style={{ ...carouselStyles(width, height) }}\n        ref={ref}\n      >\n        <div className={enableControls}>\n          <Subtitle2\n            className={styles.titleStyles}\n            \n          >\n            {title}\n          </Subtitle2>\n\n          <div className={embla__buttons}>\n            <Button\n              onClick={onPrevButtonClick}\n              disabled={prevBtnDisabled}\n              appearance=\"subtle\"\n              icon={<ChevronLeftRegular />}\n            />\n            <Button\n              onClick={onNextButtonClick}\n              disabled={nextBtnDisabled}\n              appearance=\"subtle\"\n              icon={<ChevronRightRegular />}\n            />\n          </div>\n        </div>\n\n        <div className={embla__viewport} ref={emblaRef}>\n          <div className={embla__container}>\n            {items.map((item, index) => (\n              <div className={embla__slide} key={index}>\n                {item}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\n import { css } from '@emotion/css';\n \nimport { ICenterProps } from './ICenterProps';\nimport { useComponentUtils } from '../../utils';\n\nexport const useCenterStyles = (props: ICenterProps) => {\n  const { styles } = props;\n\n  const { getBaseStyles } = useComponentUtils();\n  const centerStyles = React.useCallback(\n    (containerWidth: number, containerHeight: number): React.CSSProperties => {\n       \n      const baseStyles = getBaseStyles(props, containerWidth, containerHeight);\n      return {\n        ...baseStyles,\n        ...styles,\n         overflow: \"hidden\",\n        display: \"flex\",\n       \n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n       \n      };\n    },\n    [getBaseStyles, props, styles]\n  );\n\n  const childrenStyles = css({\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  });\n\n  return { centerStyles, childrenStyles };\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\nimport { THorizontalSpacing, TVerticalSpacing } from '../../types';\n\nimport { IGridProps } from './IGridProps';\nimport { useComponentUtils } from '../../utils';\n\nexport const useGridStyles = (props: IGridProps) => {\n  const { cols, verticalSpacing, horizontalSpacing, styles, gridItemAutoFlow, minItemWidth } = props;\n  const { getSpacing, getCurrentDevice, getBaseStyles } = useComponentUtils();\n\n  const gridStyles = React.useCallback(\n    (containerWidth: number, containerHeight: number): React.CSSProperties => {\n      const baseStyles = getBaseStyles(props, containerWidth, containerHeight);\n      const wgapRow = getSpacing<TVerticalSpacing>(verticalSpacing as string, containerWidth, \"vertical\");\n      const wgapCol = getSpacing<THorizontalSpacing>(horizontalSpacing as string, containerWidth, \"horizontal\");\n      const wgap = `${wgapRow} ${wgapCol}`;\n      const device = getCurrentDevice(containerWidth);\n      let gridTemplateColumns = `repeat(auto-${gridItemAutoFlow ?? \"fill\"}, minmax(${minItemWidth ?? 250}px, 1fr))`;\n      if (cols && cols > 0) {\n        let numberCols = cols ?? 0;\n        switch (device) {\n          case \"ExtraSmall\":\n            numberCols = Math.min(cols, 1);\n            break;\n          case \"Small\":\n            numberCols = Math.min(cols, 2);\n            break;\n          case \"Medium\":\n            numberCols = Math.min(cols, 3);\n            break;\n          case \"Large\":\n            numberCols = Math.min(cols, 4);\n            break;\n          case \"ExtraLarge\":\n            numberCols = Math.min(cols, 4);\n            break;\n          case \"ExtraExtraLarge\":\n            numberCols = Math.min(cols, 5);\n            break;\n          case \"XXXLarge\":\n            numberCols = Math.min(cols, 6);\n            break;\n          default:\n            numberCols = 0;\n        }\n        gridTemplateColumns = `repeat(${numberCols},  minmax(auto, 1fr))`;\n      }\n\n      return {\n        ...baseStyles,\n        display: \"grid\",\n        gridTemplateColumns: gridTemplateColumns,\n        gap: wgap,\n        \n        \n        overflow: \"hidden\",\n       \n        ...styles,\n      };\n    },\n    [getBaseStyles, props, getSpacing, verticalSpacing, horizontalSpacing, getCurrentDevice, cols, styles, gridItemAutoFlow, minItemWidth]\n  );\n\n  return { gridStyles };\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\nimport { IGridProps } from './IGridProps';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useGridStyles } from './useGridStyles';\n\nexport const Grid  = (\n  props: React.PropsWithChildren<IGridProps>\n) => {\n  const { children, className } = props;\n  const { gridStyles } = useGridStyles(props);\n  const ref = React.useRef<HTMLDivElement>(null);\n  \n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n\n  React.useEffect(() => {\n    let resizeObserver: ResizeObserver;\n    if (ref.current) {\n      // observer to detect changes in the size of the container \n        resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const { width, height } = entry.contentRect;\n          setWidth(width);\n          setHeight(height);\n        }\n      });\n      resizeObserver.observe(ref.current);\n    }\n    return () => {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    }\n  }, []);\n  return (\n    <>\n      <div className={className} style={gridStyles(width, height)} ref={ref}>\n        {children}\n      </div>\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from \"react\";\n\nimport { ILayoutConfig, ILayoutProps } from \"./ILayoutProps\";\n\nimport { css } from \"@emotion/css\";\nimport { useComponentUtils } from \"../../utils\";\n\nexport const useLayoutStyles = (props: ILayoutProps & { layoutConfig?: ILayoutConfig }) => {\n  const { maxWith,  } = props;\n  const { getBaseStyles } = useComponentUtils();\n\n  const rootStyles = React.useCallback(\n    (LayoutWidth: number, LayoutHeight: number): React.CSSProperties => ({\n      ...getBaseStyles(props, LayoutWidth, LayoutHeight),\n      maxWidth: maxWith,\n    }),\n    [getBaseStyles, maxWith, props]\n  );\n\n  const layoutGridStyles = css({\n    display: \"grid\",\n    overflow: \"hidden\",\n  });\n\n  return {\n    rootStyles,\n    layoutGridStyles,\n  };\n};","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from \"react\";\n\nimport { ILayoutConfig, ILayoutProps } from \"./ILayoutProps\";\n\nimport { ResizeObserver } from \"@juggle/resize-observer\";\nimport { mergeClasses } from \"@fluentui/react-components\";\nimport { useLayoutStyles } from \"./useLayoutStyles\";\n\n// Default layout configuration\nconst defaultLayoutConfig: ILayoutConfig = {\n  areas: [\"header header header\", \"sidebar content sidebar\", \"footer footer footer\"],\n  columns: \"1fr 3fr 1fr\",\n  rows: \"auto 1fr auto\",\n};\n\nexport const Layout = (props: React.PropsWithChildren<ILayoutProps & { layoutConfig?: ILayoutConfig }>) => {\n  const { className, children, layoutConfig = defaultLayoutConfig } = props;\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n\n  const { rootStyles, layoutGridStyles } = useLayoutStyles({ ...props, layoutConfig });\n\n  const useDebounce = (fn: Function, delay: number) => {\n    let timer: NodeJS.Timeout;\n    return React.useCallback((...args: any[]) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => fn(...args), delay);\n    }, [fn, delay]);\n  };\n\n  const handleResize = useDebounce((width: number, height: number) => {\n    setWidth(width);\n    setHeight(height);\n  }, 200);\n\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    const observer = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        const { width, height } = entry.contentRect;\n        handleResize(width, height);\n      }\n    });\n    observer.observe(ref.current);\n\n    return () => observer.disconnect();\n  }, [handleResize]);\n\n  return (\n    <div\n      id=\"-Layout\"\n      className={mergeClasses(className, layoutGridStyles)}\n      style={{\n        ...rootStyles(width, height),\n        gridTemplateAreas: layoutConfig.areas.join(\" \"),\n        gridTemplateColumns: layoutConfig.columns,\n        gridTemplateRows: layoutConfig.rows,\n      }}\n      ref={ref}\n    >\n      {React.Children.map(children, (child, index) => {\n        if (React.isValidElement(child)) {\n          const childElement = child as React.ReactElement;\n          return (\n            <div\n              key={index}\n              style={{\n                gridArea: childElement.props?.area ?? `area-${index}`, // Fallback to dynamic area\n              }}\n            >\n              {child}\n            </div>\n          );\n        }\n        return child;\n      })}\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  makeStyles,\n  shorthands,\n} from '@fluentui/react-components';\n\nexport const useRenderLabelStyles = makeStyles({\n\n  labelContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    ...shorthands.gap(\"6px\"),\n  },\n  iconStyles: {\n    width: \"26px\",\n  },\n  item: {\n    paddingLeft: \"15px\",\n  },\n  \n\n});\n","import * as React from 'react';\n\nimport {\n  Caption1,\n  tokens,\n} from '@fluentui/react-components';\nimport { Icon } from '@iconify/react';\n\nimport { useRenderLabelStyles } from './useRenderLabelStylesStyles';\n\nexport interface IRenderLabelProps {\n  label: string; icon?: string | JSX.Element; isRequired?: boolean\n}\n\nexport const RenderLabel: React.FunctionComponent<IRenderLabelProps> = (props: React.PropsWithChildren<IRenderLabelProps>) => {\n  const { label, icon, isRequired } = props;\n  const styles = useRenderLabelStyles();\n  return (\n    <>\n      <div className={styles.labelContainer}>\n        {icon && React.isValidElement(icon) ? (\n          icon\n        ) : (\n          <Icon\n            icon={icon as string}\n            className={styles.iconStyles}\n            width={\"20px\"}\n            height={\"20px\"}\n            color={tokens.colorBrandForeground1}\n          />\n        )}\n        <Caption1 style={{ color: tokens.colorBrandForeground1 }}>{label}</Caption1>\n        <Caption1 style={{ color: tokens.colorPaletteRedForeground1 }}>{isRequired ? \" *\" : \"\"}</Caption1>\n      </div>\n    </>\n  );\n};\n\nexport default RenderLabel;\n","import * as React from 'react';\n\nimport {\n  makeStyles,\n  mergeClasses,\n  Spinner,\n} from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n    height: \"100%\",\n    width: \"100%\",\n  },\n  spinner: {\n    width: \"100px\",\n    height: \"100px\",\n  },\n});\n\nexport interface IRenderSpinnerProps {\n  size: \"medium\" | \"small\" | \"extra-tiny\" | \"tiny\" | \"extra-small\" | \"large\" | \"extra-large\" | \"huge\";\n  label?: string;\n  labelPosition?: \"above\" | \"below\" | \"before\" | \"after\";\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const RenderSpinner: React.FunctionComponent<IRenderSpinnerProps> = (\n  props: React.PropsWithChildren<IRenderSpinnerProps>\n) => {\n  const { size, label, labelPosition, style, className } = props;\n\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <Spinner\n        style={style}\n        className={mergeClasses(styles.spinner, className)}\n        size={size}\n        label={label}\n        labelPosition={labelPosition}\n      />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\n\n \n \nimport { ISpaceProps } from './ISpaceProps';\nimport { useComponentUtils } from '../../utils';\nimport { THorizontalSpacing, TVerticalSpacing } from '../../types';\n\nexport const useSpaceStyles = (props: ISpaceProps) => {\n  const { verticalSpacing, horizontalSpacing } = props;\n  const { getSpacing } = useComponentUtils();\n  const spaceStyles = React.useCallback(\n    (containerWidth: number): React.CSSProperties => {\n      if (!containerWidth ) return {};\n      \n\n       \n      if (horizontalSpacing) {\n        const width = getSpacing<THorizontalSpacing>(horizontalSpacing as string, containerWidth, \"horizontal\");\n        return {\n         width: width,\n        };\n      }\n      if (verticalSpacing) {\n        const height = getSpacing<TVerticalSpacing>(verticalSpacing as string, containerWidth, \"vertical\");\n        return {\n          height: height,\n        };\n      }\n      return {};\n    },\n    [getSpacing, horizontalSpacing, verticalSpacing]\n  );\n\n  return { spaceStyles };\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\n\nimport { IStackProps } from './IStackProps';\nimport { useComponentUtils } from '../../utils';\n\nexport const useStackStyles = (props: IStackProps) => {\n  const { horizontal, horizontalAlign, verticalAlign, verticalFill, wrap, columnGap, RowGap } = props;\n  const { getBaseStyles } = useComponentUtils();\n\n  const stackStyles = React.useCallback(\n    (containerWidth: number, containerHeight: number): React.CSSProperties => {\n      const alignValue =  verticalAlign || \"start\";\n      const justifyValue = horizontal ? horizontalAlign : \"start\";\n\n      const wflexFlow: React.CSSProperties | undefined = horizontal\n        ? { flexFlow: wrap ? \"row wrap\" : \"row nowrap\", height: \"100%\" }\n        : { height: \"100%\", maxHeight: \"100%\" };\n\n      const baseStyles = getBaseStyles(props, containerWidth, containerHeight);\n\n      return {\n        columnGap: columnGap,\n        rowGap: RowGap,\n        display: \"flex\",\n        flexDirection: horizontal ? \"row\" : \"column\",\n        alignItems: alignValue,\n        justifyContent: justifyValue,\n        ...wflexFlow,\n        height: verticalFill ? \"100%\" : baseStyles.height,\n        ...baseStyles,\n        ...props.styles,\n      };\n    },\n    [getBaseStyles, horizontal, horizontalAlign, props, verticalAlign, verticalFill, wrap]\n  );\n\n  return { stackStyles };\n};\n\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\nimport { IStackProps } from './IStackProps';\nimport { useStackStyles } from './useStackStyles';\nimport { ResizeObserver } from '@juggle/resize-observer';\nexport const Stack  = (\n  props: React.PropsWithChildren<IStackProps>\n) => {\n  const { children, className,  } = props;\n  const { stackStyles } = useStackStyles(props);\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n\n\n  React.useEffect(() => {\n    let resizeObserver: ResizeObserver;\n    if (ref.current) {\n      // observer to detect changes in the size of the container\n        resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const { width, height } = entry.contentRect;\n          setWidth(width);\n          setHeight(height);\n        }\n      });\n      resizeObserver.observe(ref.current);\n    }\n    return () => {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    }\n  }, []);\n  return (\n    <>\n      <div className={className} style={stackStyles(width, height)} ref={ref}>\n        {children}\n      </div>\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\n\nimport {\n  FluentProvider,\n  IdPrefixProvider,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  MenuPopover,\n  MenuTrigger,\n  Overflow,\n  OverflowItem,\n  Theme,\n  mergeClasses,\n  useIsOverflowItemVisible,\n  useOverflowMenu,\n} from '@fluentui/react-components';\nimport {\n  MoreHorizontalFilled,\n  MoreHorizontalRegular,\n  bundleIcon,\n} from '@fluentui/react-icons';\n\nimport { css } from '@emotion/css';\n\n// Styles\nconst useStyles = () => {\n  return {\n    container: css({\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      minWidth: 0,\n      overflow: \"hidden\",\n      gap: 10,\n      marginBottom: 20,\n      width: \"100%\",\n    }),\n    text1LineStyle: css({\n      display: \"-webkit-box\",\n      WebkitLineClamp: 1,\n      WebkitBoxOrient: \"vertical\",\n      overflow: \"hidden\",\n      textAlign: \"start\",\n      textOverflow: \"ellipsis\",\n      wordBreak: \"break-word\",\n    }),\n    button: css({\n      cursor: \"pointer\",\n      minWidth: 107,\n    }),\n  };\n};\n\n// Interfaces\nexport interface IControlItem {\n  id: string;\n  name: string;\n  icon?: JSX.Element | string;\n}\n\nexport interface ICustomControlBarProps {\n  items: IControlItem[];\n  selectedItemId: string | undefined;\n  onSelectedItem: (itemId: string) => void;\n  renderControl: (item: IControlItem, isSelected: boolean, onClick: () => void) => JSX.Element;\n  theme: Theme; // Add theme property\n}\n\n// CustomControlBar Component\nexport const CustomControlBar: React.FunctionComponent<ICustomControlBarProps> = ({\n  items,\n  selectedItemId,\n  onSelectedItem,\n  renderControl,\n  theme,\n}) => {\n  const styles = useStyles();\n  const onItemSelect = React.useCallback(\n    (itemId: string) => {\n      if (onSelectedItem) {\n        onSelectedItem(itemId);\n      }\n    },\n    [onSelectedItem]\n  );\n\n  return (\n    <Overflow>\n      <FluentProvider theme={theme}>\n        {\" \"}\n        {/* Apply theme */}\n        <div className={mergeClasses(styles.container)}>\n          {items.map((item) => {\n            const isSelected = item.id === selectedItemId;\n            return (\n              <OverflowItem key={item.id} id={item.id} priority={isSelected ? 2 : 1}>\n                {renderControl(item, isSelected, () => onItemSelect(item.id))}\n              </OverflowItem>\n            );\n          })}\n          <OverflowMenu items={items} onSelectedItem={onItemSelect} theme={theme} /> {/* Pass theme to OverflowMenu */}\n        </div>\n      </FluentProvider>\n    </Overflow>\n  );\n};\n\n// Overflow Menu and Overflow Menu Item Components\nconst OverflowMenuItem: React.FunctionComponent<{ item: IControlItem; onSelectedItem: (itemId: string) => void }> = ({\n  item,\n  onSelectedItem,\n}) => {\n  const isVisible = useIsOverflowItemVisible(item.id);\n  if (isVisible) {\n    return null;\n  }\n\n  return (\n    <MenuItem key={item.id} icon={item.icon} onClick={() => onSelectedItem(item.id)}>\n      <div>{item.name}</div>\n    </MenuItem>\n  );\n};\n\nconst OverflowMenu: React.FC<{ items: IControlItem[]; onSelectedItem: (itemId: string) => void; theme: Theme }> = ({\n  items,\n  onSelectedItem,\n  theme,\n}) => {\n  const { ref, overflowCount, isOverflowing } = useOverflowMenu<HTMLButtonElement>();\n  const MoreHorizontal = React.useMemo(() => bundleIcon(MoreHorizontalFilled, MoreHorizontalRegular), []);\n\n  if (!isOverflowing) {\n    return null;\n  }\n\n  return (\n    <IdPrefixProvider value=\"menu-over-\">\n      <FluentProvider theme={theme}>\n      \n        <Menu>\n          <MenuTrigger disableButtonEnhancement>\n            <MenuButton\n              appearance=\"transparent\"\n              ref={ref}\n              icon={<MoreHorizontal />}\n              aria-label={`${overflowCount} more options`}\n              role=\"button\"\n            />\n          </MenuTrigger>\n          <MenuPopover>\n            <MenuList>\n              {items.map((item) => (\n                <OverflowMenuItem key={item.id} item={item} onSelectedItem={onSelectedItem} />\n              ))}\n            </MenuList>\n          </MenuPopover>\n        </Menu>\n      </FluentProvider>\n    </IdPrefixProvider>\n  );\n};\n","// SkeletonLoading.tsx\nimport * as React from 'react';\n\nimport {\n  Skeleton,\n  SkeletonItem,\n} from '@fluentui/react-components';\n\nimport { Grid } from '../Grid';\n\nexport const SkeletonLoading: React.FC = () => {\n  return (\n    <Skeleton>\n     <Grid cols={1} padding={\"m\"} verticalSpacing={\"m\"} horizontalSpacing={\"m\"}> \n        <SkeletonItem size={40} />\n        <SkeletonItem size={40} />\n        <SkeletonItem size={40} />\n        <SkeletonItem size={40} />\n        <SkeletonItem size={40} />\n        <SkeletonItem size={40} />\n        <SkeletonItem size={40} />\n        <SkeletonItem size={40} />\n        <SkeletonItem size={40} />  \n    </Grid>\n    </Skeleton>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\nimport { css } from '@emotion/css';\n\n \nimport { IDataGridProps } from './IDataGridProps';\nimport { useComponentUtils } from '../../utils';\n\nexport const useDataGridStyles = <T,>(props: IDataGridProps<T>) => {\n  const { styles } = props;\n  const { getBaseStyles } = useComponentUtils();\n\n  const dataGridStyles = React.useCallback(\n    (containerWidth: number, containerHeight: number) => {\n      const baseStyles = getBaseStyles(props, containerWidth, containerHeight);\n      return {\n        datagridStyles: css({\n          ...baseStyles,\n          ...styles,\n         \n        }),\n        rowSelection: css({\n          \":hover\": {\n            cursor: \"pointer\",\n          }\n        }),\n      };\n    },\n    [getBaseStyles, props, styles]\n  );\n\n\n\n  return { dataGridStyles };\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\n\nimport {\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  MenuPopover,\n  MenuTrigger,\n  useIsOverflowItemVisible,\n  useOverflowMenu,\n} from '@fluentui/react-components';\n\n// Generic type for item\ninterface GenericOverFlowMenuProps<T> {\n  items: T[];\n  renderItem: (item: T) => React.ReactNode;\n  keyExtractor: (item: T) => string;\n}\n\nconst OverflowMenuItem = ({ id, children }: { id: string; children: React.ReactNode }) => {\n  const isVisible = useIsOverflowItemVisible(id);\n\n  if (isVisible) {\n    return null;\n  }\n\n  return <MenuItem>{children}</MenuItem>;\n};\n\nexport const GenericOverFlowMenu = <T extends { id: string }>({\n  items,\n  renderItem,\n  keyExtractor,\n}: GenericOverFlowMenuProps<T>) => {\n  const { ref, overflowCount, isOverflowing } = useOverflowMenu<HTMLButtonElement>();\n\n  if (!isOverflowing) {\n    return null;\n  }\n\n  return (\n    <Menu>\n      <MenuTrigger disableButtonEnhancement>\n        <MenuButton ref={ref}>+{overflowCount} items</MenuButton>\n      </MenuTrigger>\n      <MenuPopover>\n        <MenuList>\n          {items.map((item) => (\n            <OverflowMenuItem key={keyExtractor(item)} id={keyExtractor(item)}>\n              {renderItem(item)}\n            </OverflowMenuItem>\n          ))}\n        </MenuList>\n      </MenuPopover>\n    </Menu>\n  );\n};\n","import * as React from 'react';\n\nimport {\n  Dialog,\n  DialogActions,\n  DialogBody,\n  DialogContent,\n  DialogSurface,\n  DialogTitle,\n  makeStyles,\n  mergeClasses,\n} from '@fluentui/react-components';\n\nexport interface IRenderDialogProps {\n  isOpen: boolean;\n  dialogTitle?: string | React.ReactNode;\n  dialogActions?: JSX.Element;\n  onDismiss?: (open?: boolean) => void;\n  minWidth?: number | string;\n  maxWidth?: number | string;\n  className?: string;\n  minHeight?: number | string;\n  maxHeight?: number | string;\n  children: React.ReactNode;\n}\n\nconst DEFAULT_MIN_WIDTH = 200;\n\nconst DEFAULT_MIN_HEIGHT = 200;\n\nconst useStyles = makeStyles({\n  dialog: {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    maxHeight: \"600px\",\n    padding: 0,\n  },\n  dialogBody: {\n    height: \"calc(100% - 200px)\",\n  },\n});\n\nexport const RenderDialog: React.FunctionComponent<IRenderDialogProps> = (\n  props: React.PropsWithChildren<IRenderDialogProps>\n) => {\n  const { isOpen, dialogTitle, dialogActions, children, maxWidth, className, minHeight, minWidth, maxHeight } = props;\n  const styles = useStyles();\n  if (!isOpen) return <></>;\n  return (\n    <Dialog open={isOpen} modalType=\"modal\">\n      <DialogSurface\n        className={mergeClasses(styles.dialog, className)}\n        style={{\n          maxWidth: maxWidth,\n          minWidth: minWidth ?? DEFAULT_MIN_WIDTH,\n          minHeight: minHeight ?? DEFAULT_MIN_HEIGHT,\n          height: \"fit-content\",\n          maxHeight: maxHeight ?? \"\",\n        }}\n      >\n        <DialogTitle>{dialogTitle}</DialogTitle>\n        <DialogBody className={styles.dialogBody}>\n          <DialogContent>{children}</DialogContent>\n        </DialogBody>\n        <DialogActions fluid position=\"end\">\n          {dialogActions}\n        </DialogActions>\n      </DialogSurface>\n    </Dialog>\n  );\n};\n","import {\n  makeStyles,\n  shorthands,\n  tokens,\n} from '@fluentui/react-components';\n\nexport const useRenderHeaderStyles = makeStyles({\n  closeButton: {\n    marginLeft: \"auto\",\n    position: \"absolute\",\n    top: \"10px\",\n    right: \"10px\",\n    zIndex: 99999,\n  },\n\n  divider: {\n    width: \"100%\",\n    height: \"1px\",\n    backgroundColor: tokens.colorNeutralStroke1,\n    marginTop: \"6px\",\n  },\n\n  renderHeaderContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n\n    width: \"100%\",\n  },\n  renderHeaderHeader: {\n   \n\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    ...shorthands.padding(\"10px\"),\n    gap: \"20px\",\n  },\n  renderHeaderFooter: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    ...shorthands.padding(\"20px\"),\n    gap: \"20px\",\n  },\n  renderHeaderBody: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    ...shorthands.padding(\"20px\"),\n    gap: \"20px\",\n  },\n  renderHeaderTitleContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n  },\n  renderHeaderTitle: {\n    display: \"-webkit-box\",\n    \"-webkit-line-clamp\": \"1\",\n    \"-webkit-box-orient\": \"vertical\",\n\n    textAlign: \"start\",\n    textOverflow: \"ellipsis\",\n    paddingTop: \"10px\",\n    wordBreak: \"break-word\",\n  },\n  renderHeaderDescription: {\n    display: \"-webkit-box\",\n    \"-webkit-line-clamp\": \"4\",\n    \"-webkit-box-orient\": \"vertical\",\n\n    textAlign: \"start\",\n    textOverflow: \"ellipsis\",\n    wordBreak: \"break-word\",\n  },\n  dialogTitleAndDescriptionContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    paddingLeft: \"10px\",\n    paddingRight: \"20px\",\n  },\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  makeStyles,\n  shorthands,\n  tokens,\n} from '@fluentui/react-components';\n\nexport const useShowMessageStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    ...shorthands.padding(\"10px\"),\n    gap: '10px',\n  } as any,\n  iconClass: {\n    width: \"32px\",\n    height: \"32px\",\n  } as any,\n  errorContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n   gap: '10px',\n    ...shorthands.padding(\"10px\"),\n    backgroundColor: tokens.colorStatusDangerBackground1,\n  } as any,\n  errorIcon: {\n    height: \"100%\",\n  } as any,\n});\n","import { IBreadcrumbItem } from './IBreadcrumItem';\nimport { css } from '@emotion/css';\nimport { tokens } from '@fluentui/react-components';\n\nexport const useBreadcrumStyles = () => {\n  const styles = {\n    container: css({\n      display: 'flex',\n      alignItems: 'center',\n      alignContent: 'center',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      padding: '8px',\n      backgroundColor: 'transparent'\n    }),\n    breadcrumbItem: css({\n      minWidth: 'fit-content',\n      padding: 0,\n      margin: '0px',\n    }),\n    separator: css({\n      marginRight: '8px',\n    }),\n  };\n  const getStyles = (\n    props: IBreadcrumbItem,\n    size: 'small' | 'medium' | 'large' | 'current'\n  ) => {\n    const { icon } = props;\n    switch (size) {\n      case 'small':\n        return css({\n          fontSize: '12px',\n          padding: '4px',\n          paddingLeft: icon ? '0px' : '4px',\n        });\n      case 'medium':\n        return css({\n          fontSize: '14px',\n          padding: '6px',\n          paddingLeft: icon ? '0px' : '6px',\n        });\n      case 'large':\n        return css({\n          fontSize: '16px',\n          padding: '8px',\n          paddingLeft: icon ? '0px' : '8px',\n        });\n      case 'current':\n        return css({\n          fontWeight: tokens.fontWeightBold,\n          cursor: 'default',\n          display: '-webkit-box',\n          '-webkit-line-clamp': '1',\n          '-webkit-box-orient': 'vertical',\n          overflow: 'hidden',\n          textAlign: 'start',\n          textOverflow: 'ellipsis',\n          wordBreak: 'break-word',\n          fontFamily: tokens.fontFamilyBase,\n        });\n\n      default:\n        return css({\n          fontSize: '14px',\n          padding: '6px',\n          paddingLeft: icon ? '0px' : '6px',\n        });\n    }\n  };\n  return { styles, getStyles };\n};\n","import {\n    Button,\n    Card,\n    FluentProvider,\n    Text,\n    Theme,\n} from \"@fluentui/react-components\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { IBreadcrumbItem } from \"./IBreadcrumItem\";\nimport { MoreHorizontalRegular } from \"@fluentui/react-icons\";\nimport { createPortal } from \"react-dom\";\nimport { useBreadcrumStyles } from \"./useBreadcrumStyles\";\n\ninterface OverflowMenuProps {\n    items:  IBreadcrumbItem[];\n    theme?: Theme; // Fluent UI theme\n    size?: 'small' | 'medium' | 'large'; // Add size property\n  }\n  \n  export const OverflowMenu: React.FC<OverflowMenuProps> = ({ items, theme , size=\"medium\"}) => {\n    const [showDropdown, setShowDropdown] = useState(false);\n    const buttonRef = useRef<HTMLButtonElement>(null);\n    const dropdownRef = useRef<HTMLDivElement>(null);\n    const [dropdownStyles, setDropdownStyles] = useState<React.CSSProperties>({\n      top: 0,\n      left: 0,\n      position: \"absolute\",\n    });\n\n    const { getStyles} = useBreadcrumStyles();\n  \n    const handleButtonClick = () => {\n      if (buttonRef.current) {\n        const buttonRect = buttonRef.current.getBoundingClientRect();\n        const viewportWidth = window.innerWidth;\n        const viewportHeight = window.innerHeight;\n  \n        const dropdownWidth = dropdownRef.current?.offsetWidth || 200; // Fallback to 200px width\n        const dropdownHeight = dropdownRef.current?.offsetHeight || 100; // Fallback to 100px height\n  \n        let top = buttonRect.bottom + window.scrollY;\n        let left = buttonRect.left + window.scrollX;\n  \n        // Adjust for right edge\n        if (left + dropdownWidth > viewportWidth) {\n          left = viewportWidth - dropdownWidth - 10; // Add some padding from the edge\n        }\n  \n        // Adjust for bottom edge\n        if (top + dropdownHeight > viewportHeight) {\n          top = buttonRect.top + window.scrollY - dropdownHeight; // Show above the button\n        }\n  \n        setDropdownStyles({\n          top,\n          left,\n          position: \"absolute\",\n        });\n  \n        setShowDropdown((prev) => !prev);\n      }\n    };\n  \n    useEffect(() => {\n      const handleOutsideClick = (event: MouseEvent) => {\n        if (\n          !buttonRef.current?.contains(event.target as Node) &&\n          !dropdownRef.current?.contains(event.target as Node) &&\n          showDropdown\n        ) {\n          setShowDropdown(false);\n        }\n      };\n  \n      document.addEventListener(\"mousedown\", handleOutsideClick);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleOutsideClick);\n      };\n    }, [showDropdown]);\n  \n    return (\n      <>\n        <Button\n          ref={buttonRef}\n          icon={<MoreHorizontalRegular />}\n          appearance=\"transparent\"\n          onClick={handleButtonClick}\n        />\n        {showDropdown &&\n          createPortal(\n            <FluentProvider theme={theme}>\n              <Card\n                ref={dropdownRef}\n                style={{\n                  ...dropdownStyles,\n                  zIndex: 1000, // Ensure it's above other elements\n                  padding: \"8px\",\n                  minWidth: \"150px\",\n                }}\n              >\n                {items.map((item, index) => (\n                  <Button\n                  icon={item.icon ? item.icon : null}\n                    key={`overflow-${index}`}\n                    appearance=\"transparent\"\n                    onClick={() => {\n                      item.onClick?.();\n                      setShowDropdown(false);\n                    }}\n                  >\n                   <Text className={getStyles(item, size)}>{item.label}</Text>\n                  </Button>\n                ))}\n              </Card>\n            </FluentProvider>,\n            document.body // Append to the body using React Portal\n          )}\n      </>\n    );\n  };\n  \n  export default OverflowMenu;","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from \"react\";\n\nimport {\n  Badge,\n  Body1,\n  Button,\n  Divider,\n  Subtitle1,\n} from \"@fluentui/react-components\";\nimport { format, parseISO } from \"date-fns\";\n\nimport { Card } from \"../Card\";\nimport { IEvent } from \"./IEvents\";\nimport { RenderLabel } from \"../RenderLabel\";\nimport { Stack } from \"../Stack\";\nimport { css } from \"@emotion/css\";\n\nexport interface IEventDetailsPopoverProps {\n  event: IEvent;\n\n}\n\nconst useStyles = (_props?: IEvent) => {\n  const styles = {\n    banner: css({\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      alignItems: \"center\",\n      padding: `5px 10px 0px 10px`,\n    }),\n    fieldContainer: css({\n      paddingLeft: 32,\n    }),\n  };\n  return { styles };\n};\n\nconst RenderProperty: React.FC<{\n  fieldLabel: string;\n  fieldValue: string;\n  icon: JSX.Element | string;\n}> = ({ fieldLabel, fieldValue, icon }) => {\n  const { styles } = useStyles();\n  return (\n    <Stack>\n      <RenderLabel label={fieldLabel} icon={icon} />\n      <div className={styles.fieldContainer}>\n        <Body1>{fieldValue} </Body1>\n      </div>\n    </Stack>\n  );\n};\n\nexport const EventDetailsPopover: React.FunctionComponent<\n  IEventDetailsPopoverProps\n> = (props: React.PropsWithChildren<IEventDetailsPopoverProps>) => {\n  const { event,  } = props;\n  const { title, start, end, location, category } = event;\n\n  const { styles } = useStyles(event);\n  const formatedStartDate = format(parseISO(start), \"PPp\");\n  const formatedEndDate = format(parseISO(end), \"PPp\");\n\n  return (\n    <>\n      <Card\n        appearance=\"subtle\"\n        padding=\"m\"\n        paddingTop={\"s\"}\n        width=\"250px\"\n        cardBody={\n          <Stack RowGap={10}>\n            <div className={styles.banner}>\n              <Subtitle1>{title}</Subtitle1>\n            </div>\n            <Divider />\n            <Stack horizontal horizontalAlign=\"end\" width={\"100%\"}>\n              <Badge appearance=\"filled\">{category}</Badge>\n            </Stack>\n            <RenderProperty\n              fieldLabel=\"Start\"\n              fieldValue={formatedStartDate}\n              icon={\"mingcute:time-line\"}\n            />\n            <RenderProperty\n              fieldLabel=\"End\"\n              fieldValue={formatedEndDate}\n              icon={\"mingcute:time-line\"}\n            />\n            <RenderProperty\n              fieldLabel=\"Location\"\n              fieldValue={location as string}\n              icon={\"mingcute:location-line\"}\n            />\n          </Stack>\n        }\n        cardFooterContent={\n          <Stack horizontal horizontalAlign=\"end\" width=\"100%\" >\n            <Button appearance=\"subtle\" onClick={() => { console.log('click button')}}>\n              Details\n            </Button>\n          </Stack>\n        }\n      />\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\nimport { ICalendarControlProps } from \"./ICalendarControlProps\";\nimport { IDayProps } from \"./Day\";\nimport { css } from \"@emotion/css\";\nimport { tokens } from \"@fluentui/react-components\";\n\ninterface IStylesProps extends ICalendarControlProps, IDayProps {}\n\nexport const useCalendarStyles = (_props?: IStylesProps) => {\n  const styles = {\n    calendarWrapper: css({\n      padding: \"20px\",\n      paddingTop: \"10px\",\n      overflow: \"auto\",\n      flex: 1,\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(7, 1fr)\", // 7 columns for the days of the week\n      gridTemplateRows: \"auto\", // Automatically sizes the header row\n      gridAutoRows: \"minmax(100px, 1fr)\", // Ensures all rows have a minimum height of 100px and grow equally\n      gap: \"1px\", // Gap between cells\n      width: \"calc(100% - 40px)\", // Full width minus padding\n    }),\n    header: css({\n      display: \"flex\",\n      justifyContent: \"start\",\n      gap: \"10px\",\n      alignItems: \"center\",\n      padding: \"16px\",\n    }),\n    dayHeader: css({\n      textAlign: \"start\",\n      padding: \"8px\",\n      borderBottom: `1px solid ${tokens.colorNeutralStroke1}`,\n    }),\n    day: css({\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      border: `1px solid ${tokens.colorNeutralStroke1}`,\n      backgroundColor: tokens.colorNeutralBackground1,\n      position: \"relative\", // Ensure proper stacking context\n    }),\n    otherMonthDay: css({\n      color: tokens.colorNeutralStroke2,\n      backgroundColor: tokens.colorNeutralBackground2,\n    }),\n    cardDay: css({\n      height: \"100%\",\n      minHeight: 100,\n      borderRadius: 0,\n      overflow: \"hidden !important\",\n    }),\n    cardDayOnHover: css({\n      \":hover\": {\n        backgroundColor: tokens.colorNeutralBackground2,\n      },\n    }),\n\n    currentDay: css({\n      borderTop: `5px solid ${tokens.colorBrandBackground}`,\n    }),\n    currentDayLabel: css({\n      color: tokens.colorBrandBackground,\n      fontWeight: 600,\n    }),\n    eventCard: css({\n      /*  backgroundColor: tokens.colorNeutralBackground1, */\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"flex-start\",\n\n      zIndex: 1, // Ensure it appears above parent hover styles\n    }),\n    eventContainer: css({\n      display: \"flex\",\n      flexDirection: \"column\",\n      overflowY: \"auto\", // Ensures proper overflow handling\n      paddingTop: \"5px\",\n      paddingBottom: \"5px\",\n      paddingLeft: \"5px\",\n      paddingRight: \"5px\",\n      // Scrollbar styles\n      \"::-webkit-scrollbar\": {\n        width: \"5px\", // Width for vertical scrollbars\n        height: \"5px\", // Height for horizontal scrollbars\n      },\n      \"::-webkit-scrollbar-track\": {\n        background: tokens.colorNeutralBackground4, // Light gray for the track\n        borderRadius: \"10px\",\n      },\n      \"::-webkit-scrollbar-thumb\": {\n        background: tokens.colorBrandStroke2Hover, // Dark gray for the thumb\n        borderRadius: \"10px\",\n      },\n      \"::-webkit-scrollbar-thumb:hover\": {\n        background: tokens.colorNeutralStroke2, // Dark gray for the thumb\n      },\n    }),\n    eventCardWeekView: css({\n      backgroundColor: tokens.colorBrandBackground,\n      color: tokens.colorNeutralForegroundOnBrand,\n      borderRadius: \"4px\",\n      padding: \"4px\",\n      margin: \"2px\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n      height: \"100%\",\n    }),\n    popoverContent: css({\n      padding: 0,\n      borderTopWidth: 20,\n      borderTopStyle: \"solid\",\n    }),\n  };\n  const applyEventHouverColorClass = (\n    backgroundColor: string,\n    houverColor: string\n  ) => {\n    return css({\n      backgroundColor: backgroundColor ?? tokens.colorBrandBackground,\n      \":hover\": {\n        backgroundColor: houverColor ?? tokens.colorBrandBackgroundHover,\n      },\n    });\n  };\n\n  return { styles, applyEventHouverColorClass };\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from \"react\";\n\nimport { IEventColors } from \"./IEventColors\";\nimport { tokens } from \"@fluentui/react-components\";\n\nexport const useUtils = () => {\n  const getSpanSlots = React.useCallback((start: Date, end: Date) => {\n    const startDate = new Date(start);\n    const endDate = new Date(end);\n\n    // Calculate the start and end slots based on event times\n    const startHour = startDate.getHours();\n    const startMinute = startDate.getMinutes();\n    const startSlot = startHour * 2 + (startMinute >= 1 ? 1 : 0); // Adjust for 30-minute slots\n    const endHour = endDate.getHours();\n    const endMinute = endDate.getMinutes();\n    const endSlot = endHour * 2 + (endMinute >= 1 ? 2 : 0); // Adjust for 30-minute slots\n\n    const spanSlots = endSlot - startSlot;\n    return { spanSlots, startSlot, endSlot };\n  }, []);\n  const generateLightAndHoverColors = React.useCallback(\n    (\n      baseColor: string,\n      lightnessIncrease: number = 20, // Increase in lightness for light variant\n      hoverIncrease: number = 10 // Increase in lightness for hover variant\n    ): { lightColor: string; hoverColor: string } => {\n      // Function to convert hex to HSL\n      const hexToHsl = (hex: string): { h: number; s: number; l: number } => {\n        const r = parseInt(hex.slice(1, 3), 16) / 255;\n        const g = parseInt(hex.slice(3, 5), 16) / 255;\n        const b = parseInt(hex.slice(5, 7), 16) / 255;\n\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        const delta = max - min;\n\n        let h = 0;\n        let s = 0;\n        const l = (max + min) / 2;\n\n        if (delta !== 0) {\n          s = l > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n          switch (max) {\n            case r:\n              h = (g - b) / delta + (g < b ? 6 : 0);\n              break;\n            case g:\n              h = (b - r) / delta + 2;\n              break;\n            case b:\n              h = (r - g) / delta + 4;\n              break;\n          }\n          h /= 6;\n        }\n\n        return { h: h * 360, s: s * 100, l: l * 100 };\n      };\n\n      // Function to convert HSL to hex\n      const hslToHex = (h: number, s: number, l: number): string => {\n        const a = (s * Math.min(l, 100 - l)) / 100;\n        const f = (n: number): string => {\n          const k = (n + h / 30) % 12;\n          const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n          return Math.round(255 * color)\n            .toString(16)\n            .padStart(2, \"0\");\n        };\n        return `#${f(0)}${f(8)}${f(4)}`;\n      };\n\n      // Convert base color to HSL\n      const { h, s, l } = hexToHsl(baseColor);\n\n      // Generate light and hover colors by adjusting lightness\n      const lightColor = hslToHex(h, s, Math.min(l + lightnessIncrease, 100));\n      const hoverColor = hslToHex(h, s, Math.min(l + hoverIncrease, 100));\n\n      return { lightColor, hoverColor };\n    },\n    []\n  );\n\n  const getEventColors = React.useCallback((category: string): IEventColors => {\n    // Predefined color map\n    const colorMap: Record<string, IEventColors> = {\n      meeting: { backgroundColor: \"#D9E9FC\", hoverColor: \"#AAD4F5\" },\n      appointment: { backgroundColor: \"#FFF4CE\", hoverColor: \"#FFE2A1\" },\n      task: { backgroundColor: \"#DFF6DD\", hoverColor: \"#C6F0C6\" },\n      deadline: { backgroundColor: \"#FFE4E1\", hoverColor: \"#FFB6C1\" },\n      holiday: { backgroundColor: \"#F0FFF0\", hoverColor: \"#C1FFC1\" },\n      celebration: { backgroundColor: \"#FFF0F5\", hoverColor: \"#FFDAB9\" },\n      reminder: { backgroundColor: \"#E0FFFF\", hoverColor: \"#AFEEEE\" },\n      workshop: { backgroundColor: \"#F5F5DC\", hoverColor: \"#EEE8AA\" },\n      webinar: { backgroundColor: \"#F0F8FF\", hoverColor: \"#B0E0E6\" },\n      conference: { backgroundColor: \"#FAFAD2\", hoverColor: \"#FFD700\" },\n    };\n\n    // Default color if category is not found\n    const defaultColors: IEventColors = {\n      backgroundColor:tokens.colorNeutralBackground3,\n      hoverColor: tokens.colorNeutralBackground3Hover\n    };\n\n    // Return colors for the category, or default if not found\n    return colorMap[category.toLowerCase()] || defaultColors;\n  }, []);\n\n  const generateColor = React.useCallback((str: string): string => {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    const c = (hash & 0x00ffffff).toString(16).toUpperCase();\n\n    return `#${\"00000\".substring(0, 6 - c.length) + c}`;\n  }, []);\n  \n\n  return { getSpanSlots, generateLightAndHoverColors, getEventColors, generateColor };\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from \"react\";\n\nimport {\n  Caption1,\n  Popover,\n  PopoverSurface,\n  PopoverTrigger,\n  PositioningImperativeRef,\n  mergeClasses,\n  useId,\n} from \"@fluentui/react-components\";\nimport { endOfDay, isWithinInterval, startOfDay } from \"date-fns\";\n\nimport { Card } from \"../Card\";\nimport { EventDetailsPopover } from \"./EventDetailsPopover\";\nimport { IEvent } from \"./IEvents\";\nimport { IEventColors } from \"./IEventColors\";\nimport { useCalendarStyles } from \"./useCalendarStyles\";\nimport { useUtils } from \"./useUtils\";\n\nexport interface IRenderEventToDayOfMonthProps {\n  events: IEvent[];\n  date: Date;\n  onCardHoverChange?: (isHovered: boolean, eventTitle: string) => void;\n  columnHeight: number; // Height of the column passed as a prop\n}\n\nexport const RenderEventToDayOfMonth: React.FunctionComponent<\n  IRenderEventToDayOfMonthProps\n> = (props: React.PropsWithChildren<IRenderEventToDayOfMonthProps>) => {\n  const headerId = useId();\n  const { events, date, onCardHoverChange, columnHeight } = props;\n  const { styles, applyEventHouverColorClass } = useCalendarStyles(\n    props as never\n  );\n\n  const positioningRef = React.useRef<PositioningImperativeRef>(null);\n  const { getEventColors } = useUtils();\n \n  const handleMouseEnter = (eventTitle: string): void => {\n    if (onCardHoverChange) {\n      onCardHoverChange(true, eventTitle);\n    }\n  };\n\n  const handleMouseLeave = React.useCallback(\n    (eventTitle: string) => {\n      if (onCardHoverChange) {\n        onCardHoverChange(false, eventTitle);\n      }\n    },\n    [onCardHoverChange]\n  );\n\n  // Set the target for the popover\n  const buttonRef = React.useCallback(\n    (el: HTMLDivElement | null) => {\n      positioningRef.current?.setTarget(el);\n    },\n    [positioningRef]\n  );\n\n  // Render the card\n  const renderCard = React.useCallback(\n    (index: number, calEvent: IEvent, colors: IEventColors) => {\n      return (\n        <div ref={buttonRef} >\n          <Card\n            key={index}\n            className={mergeClasses(\n              styles.eventCard,\n              applyEventHouverColorClass(\n                colors.backgroundColor,\n                colors.hoverColor\n              )\n            )}\n            paddingTop=\"4px\"\n            paddingBottom=\"4px\"\n            paddingLeft=\"8px\"\n            paddingRight=\"8px\"\n            marginTop={index === 0 ? \"0px\" : \"5px\"}\n            cardHeader={<Caption1>{calEvent.title}</Caption1>}\n            onMouseEnter={() => handleMouseEnter(calEvent.title)}\n            onMouseLeave={() => handleMouseLeave(calEvent.title)}\n          ></Card>\n        </div>\n      );\n    },\n    [handleMouseEnter, handleMouseLeave, applyEventHouverColorClass]\n  );\n\n  const renderCardWithPopOver = React.useCallback(\n    (calEvent: IEvent, index: number, colors: IEventColors) => {\n      return (\n        <>\n          <Popover\n             \n            withArrow\n            key={index}\n            mouseLeaveDelay={30}\n            closeOnScroll={true}\n            closeOnIframeFocus={true}\n            openOnHover\n          >\n            <PopoverTrigger>\n              {renderCard(index, calEvent, colors)}\n            </PopoverTrigger>\n            <PopoverSurface\n              aria-labelledby={headerId}\n              className={mergeClasses(\n                styles.popoverContent,\n                applyEventHouverColorClass(\n                  colors.backgroundColor,\n                  colors.hoverColor\n                )\n              )}\n            >\n              <EventDetailsPopover event={calEvent} />\n            </PopoverSurface>\n          </Popover>\n        </>\n      );\n    },\n    [renderCard]\n  );\n\n  if (!events || !events?.length) return <> </>;\n\n  return (\n    <>\n      <div style={{ height: columnHeight }} className={styles.eventContainer}>\n        {events.map((calEvent, index) => {\n          const eventStart = startOfDay(new Date(calEvent.start));\n          const eventEnd = endOfDay(new Date(calEvent.end));\n\n          const isEventInDay = isWithinInterval(date, {\n            start: eventStart,\n            end: eventEnd,\n          });\n\n          if (!isEventInDay) return null;\n          const colors = getEventColors(calEvent.category as string);\n          const customRender = calEvent.onRenderInMonthView;\n          // If the event has a custom renderer, use it\n          if (React.isValidElement(customRender)) {\n            return React.cloneElement(customRender as React.ReactElement, {\n              className: mergeClasses(\n                (customRender.props as any).className,\n                styles.eventCard\n              ),\n            });\n          }\n          return calEvent.enableOnHouver\n            ? renderCardWithPopOver(calEvent, index, colors)\n            : renderCard(index, calEvent, colors);\n        })}\n      </div>\n    </>\n  );\n};\n","import * as React from \"react\";\n\nimport { Body2, mergeClasses } from \"@fluentui/react-components\";\n\nimport { Card } from \"../Card\";\nimport { IEvent } from \"./IEvents\";\nimport { RenderEventToDayOfMonth } from \"./RenderEventToDayOfMonth\";\nimport { Stack } from \"../Stack\";\nimport { isSameDay } from \"date-fns\";\nimport { useCalendarStyles } from \"./useCalendarStyles\";\n\nexport interface IDayProps {\n  day: number;\n  date: Date;\n  currentMonth: boolean;\n  events: IEvent[];\n  columnHeight: number;\n}\n\nexport const Day: React.FunctionComponent<IDayProps> = (\n  props: React.PropsWithChildren<IDayProps>\n) => {\n  const { day, currentMonth, events, date, columnHeight } = props;\n  const { styles } = useCalendarStyles(props);\n  const currentDate = new Date();\n  const [isEventHovered, setIsEventHovered] = React.useState(false);\n\n  const isCurrentDayAndMonth = React.useMemo(() => {\n    return isSameDay(date, currentDate);\n  }, [date, currentDate]);\n\n  const renderCurrentDayLabel = React.useMemo(() => {\n    return (\n      <Stack\n        horizontal\n        horizontalAlign=\"start\"\n        verticalAlign=\"center\"\n        RowGap={10}\n      >\n        <Body2 className={styles.currentDayLabel}>\n          {day} {currentDate.toLocaleString(\"default\", { month: \"short\" })}\n        </Body2>\n      </Stack>\n    );\n  }, [day]);\n\n  const handleCardHoverChange = React.useCallback(\n    (isHovered: boolean): void => {\n      setIsEventHovered(isHovered);\n    },\n    []\n  );\n\n  return (\n    <>\n      <Card\n        className={mergeClasses(\n          styles.cardDay,\n          currentMonth ? \"\" : styles.otherMonthDay,\n          isCurrentDayAndMonth ? styles.currentDay : \"\",\n          !isEventHovered ? styles.cardDayOnHover : \"\"\n        )}\n        cardHeader={\n          isCurrentDayAndMonth ? renderCurrentDayLabel : <Body2>{day}</Body2>\n        }\n        padding=\"xsmall\"\n        cardBody={\n          <RenderEventToDayOfMonth\n            events={events}\n            date={date}\n            onCardHoverChange={handleCardHoverChange}\n            columnHeight={columnHeight - 60}\n          />\n        }\n      />\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { css } from '@emotion/css';\nimport { tokens } from '@fluentui/react-components';\n\nexport const useWeekViewStyles = () => {\n  \n  const styles = {\n    container: css({\n      display: 'flex',\n      flexDirection: 'column',\n      width: 'calc(100% - 40px)',\n      height: '100vh', // Make the container take the full viewport height\n      overflow: 'hidden', // Prevent window scrolling\n      padding: '20px',\n    }),\n    header: css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: '16px',\n      borderBottom: `1px solid ${tokens.colorNeutralStroke1}`,\n    }),\n    weekGrid: css({\n      display: 'grid',\n      gridTemplateColumns: '80px repeat(7, 1fr)', // Time column + 7 day columns\n      gridTemplateRows: '50px 40px repeat(48, 33px)', // Header row + Full-day row + 48 rows (2 per hour)\n      height: 'fit-content', \n      overflowY: 'auto',\n      border: `1px solid ${tokens.colorNeutralStroke1}`,\n      maxHeight: 'calc(100vh - 100px)', // Limit the grid height to the viewport minus header/footer areas\n      scrollbarWidth: 'thin', // Thin scrollbar for Firefox\n      scrollbarColor: `${tokens.colorBrandBackground} ${tokens.colorNeutralBackground1}`, // Scrollbar colors for Firefox\n      '&::-webkit-scrollbar': {\n        width: '8px', // Width of the scrollbar\n      },\n      '&::-webkit-scrollbar-track': {\n        background: tokens.colorNeutralBackground1, // Scrollbar track background\n      },\n      '&::-webkit-scrollbar-thumb': {\n        background: tokens.colorBrandBackground, // Scrollbar thumb color (brand color)\n        borderRadius: '4px', // Rounded corners for the thumb\n      },\n      '&::-webkit-scrollbar-thumb:hover': {\n        background: tokens.colorBrandBackgroundHover, // Lighter color on hover\n      },\n    }),\n    blankHeader: css({\n      gridColumn: '1',\n      backgroundColor: tokens.colorNeutralBackground3,\n      borderBottom: `3px solid ${tokens.colorNeutralStroke3}`,\n    }),\n    timeColumn: css({\n      gridColumn: '1',\n      gridRow: '3 / span 49', // Spans the entire rows after the header and full-day row\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: tokens.colorNeutralBackground1,\n      borderRight: `1px solid ${tokens.colorNeutralStroke1}`,\n    }),\n    timeCell: css({\n      height: '100%', // Let the height be dictated by the grid row's size\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '12px',\n      color: tokens.colorNeutralForeground3,\n      borderBottom: `1px solid ${tokens.colorNeutralStroke1}`,\n      justifyContent: 'center',\n    }),\n    fullDayRow: css({\n      gridRow: '2', // Full-day events occupy the second row\n      display: 'grid',\n      gridTemplateColumns: '80px repeat(7, 1fr)', // Time column + 7 day columns\n      gap: '0', // Ensure cells align properly\n      padding: '0', // Remove padding for proper alignment\n      backgroundColor: tokens.colorNeutralBackground2,\n      borderBottom: `3px solid ${tokens.colorNeutralStroke2}`, // Bottom border for the row\n    }),\n    fullDayLabel: css({\n      gridColumn: '1', // Place in the first column\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      alignContent: 'center',\n      color: tokens.colorBrandBackground,\n      padding: '5px',\n      borderRight: `1px solid ${tokens.colorNeutralStroke1}`, // Right border for the label cell\n      borderBottom: `3px solid ${tokens.colorNeutralStroke2}`, // Bottom border for the cell\n    }),\n    fullDayCell: css({\n      borderRight: `1px solid ${tokens.colorNeutralStroke1}`, // Right border between day cells\n      display: 'flex',\n      flexDirection: 'row', // Arrange events horizontally\n      gap: '2px',\n      padding: '4px', // Ensure events have spacing within the cell\n      borderBottom: `3px solid ${tokens.colorNeutralStroke2}`, // Bottom border for the cell\n      overflow: 'hidden', // Ensure events don’t overflow the cell\n    }),\n    fullDayEvent: css({\n      flex: '1 1 auto', // Allow events to share space equally\n      minWidth: '24px',\n      height: '24px',\n      padding: '4px 8px',\n      backgroundColor: tokens.colorBrandBackground,\n      color: tokens.colorNeutralForegroundOnBrand,\n      borderRadius: '4px',\n      overflow: 'hidden',\n     \n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }),\n    dayHeaderCell: css({\n      textAlign: 'center',\n      backgroundColor: tokens.colorNeutralBackground2,\n      padding: '8px',\n      fontWeight: 'bold',\n      borderBottom: `1px solid ${tokens.colorNeutralStroke1}`,\n    }),\n    todayHeaderCell: css({\n      borderTop: `5px solid ${tokens.colorBrandBackground}`,\n    }),\n    eventCard: css({\n     padding:2,\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginRight: '2px', // Spacing between events\n      zIndex: 1, // Ensure event appears above others\n      position: 'absolute', // Position relative to the cell\n      alignContent: 'center',\n      overflow: 'hidden',\n      ':hover': {\n        pointerEvents: 'auto',\n        cursor: 'pointer',\n\n      },\n    }),\n    event: css({\n      height: '100%',\n      backgroundColor: tokens.colorBrandBackground,\n      color: tokens.colorNeutralForegroundOnBrand,\n      borderRadius: '4px',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginRight: '2px', // Spacing between events\n      zIndex: 1, // Ensure event appears above others\n      position: 'absolute', // Position relative to the cell\n      alignContent: 'center',\n      ':hover': {\n        pointerEvents: 'auto',\n        cursor: 'pointer',\n       \n      },\n    }),\n    dayCell: css({\n      borderBottom: `1px solid ${tokens.colorNeutralStroke1}`, // Cell borders\n      borderRight: `1px solid ${tokens.colorNeutralStroke1}`,\n      position: 'relative', // Allow child events to be positioned absolutely\n      overflow: 'visible', // Ensure events aren't clipped\n      FlexDirection: 'column', // Ensure events are stacked vertically\n      gap: \"4px\",\n    \n    }),\n    currentTimeIndicator: css({\n      position: 'absolute',\n      left: 0,\n      height: '2px',\n      backgroundColor: tokens.colorPaletteRedBorderActive,\n      width: '100%',\n      zIndex: 1,\n    }),\n    currentHalfHourCell: css({\n      border: `2px solid ${tokens.colorPaletteRedBorderActive}`, // Highlight with a red border\n    }),\n    eventTitle: css({\n      display: '-webkit-box',\n      '-webkit-line-clamp': '2',\n      '-webkit-box-orient': 'vertical',\n      textAlign: 'start',\n      textOverflow: 'ellipsis',\n      paddingLeft: '8px',\n      wordBreak: 'break-word',\n        overflow: 'hidden',\n    }),\n      popoverContent: css({\n      padding: 0,\n      borderTopWidth: 20,\n      borderTopStyle: \"solid\",\n    }),\n  };\n\n\n  const applyEventHouverColorClass = (backgroundColor:string, houveColor:string) => {\n    return css({\n      backgroundColor:backgroundColor ?? tokens.colorBrandBackground,\n      ':hover': {\n        backgroundColor:houveColor ?? tokens.colorBrandBackgroundHover,\n      },\n    });\n    \n  };\n return {styles, applyEventHouverColorClass};\n};\n","import * as React from \"react\";\n\nimport {\n  Body1,\n  Body1Strong,\n  Card,\n  Popover,\n  PopoverSurface,\n  PopoverTrigger,\n  mergeClasses,\n  useId,\n} from \"@fluentui/react-components\";\n\nimport { EventDetailsPopover } from \"./EventDetailsPopover\";\nimport { IEvent } from \"./IEvents\";\nimport { Stack } from \"../Stack\";\nimport { format } from \"date-fns\";\nimport { useWeekViewStyles } from \"./useWeekViewStyles\";\n\n// Assuming Stack is part of your library\n\ninterface EventPopoverCardProps {\n  event: IEvent;\n  colors: { backgroundColor: string; hoverColor: string };\n  spanSlots: number;\n  rowHeight: number;\n  eventIndex: number;\n  eventCount: number;\n}\n\nexport const EventPopoverCard: React.FC<EventPopoverCardProps> = ({\n  event,\n  colors,\n  spanSlots,\n  rowHeight,\n  eventIndex,\n  eventCount,\n}) => {\n  const headerId = useId();\n  const { styles, applyEventHouverColorClass } = useWeekViewStyles();\n  const cardRef = React.useRef<HTMLDivElement>(null);\n\n  const cardContent = React.useMemo(\n    () => (\n      <div>\n        <Stack columnGap={4} verticalAlign=\"center\">\n          <Body1Strong className={styles.eventTitle}>{event.title}</Body1Strong>\n          <Stack\n            columnGap={4}\n            horizontal\n            verticalAlign=\"center\"\n            horizontalAlign=\"start\"\n          >\n            <Body1>{format(new Date(event.start), \"HH:mm\")}H</Body1>\n            {\" - \"}\n            <Body1>{format(new Date(event.end), \"HH:mm\")}H</Body1>\n          </Stack>\n        </Stack>\n      </div>\n    ),\n    [event]\n  );\n\n  return (\n    <Card\n      ref={cardRef}\n      key={event.id}\n      className={mergeClasses(\n        styles.eventCard,\n        applyEventHouverColorClass(colors.backgroundColor, colors.hoverColor)\n      )}\n      style={{\n        flex: `0 0 calc(100% / ${eventCount})`, // Ensure equal width for each event\n        height: `${rowHeight * spanSlots}px`, // Height spans the slots\n        left: `${eventIndex * 10}%`, // Adjust for overlap\n        width: `calc(${100 - eventIndex * 10}% - 8px)`, // Adjust width for overlap\n        margin: 4,\n      }}\n    >\n      {event.enableOnHouver ? (\n        <Popover\n          withArrow\n          mouseLeaveDelay={50}\n          closeOnScroll={true}\n          closeOnIframeFocus={true}\n          openOnHover\n        >\n          <PopoverTrigger>{cardContent}</PopoverTrigger>\n          <PopoverSurface\n            aria-labelledby={headerId}\n            className={mergeClasses(\n              styles.popoverContent,\n              applyEventHouverColorClass(\n                colors.backgroundColor,\n                colors.hoverColor\n              )\n            )}\n          >\n            <EventDetailsPopover event={event} />\n          </PopoverSurface>\n        </Popover>\n      ) : (\n        cardContent\n      )}\n    </Card>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from \"react\";\n\nimport { EventPopoverCard } from \"./EventPopoverCard\";\nimport { IEvent } from \"./IEvents\";\nimport {\n mergeClasses,\n} from \"@fluentui/react-components\";\nimport { useUtils } from \"./useUtils\";\nimport { useWeekViewStyles } from \"./useWeekViewStyles\";\n\ninterface IEventRendererProps {\n  event: IEvent;\n  eventCount: number;\n  spanSlots: number;\n  rowHeight: number;\n  eventIndex: number;\n  view: \"day\" | \"week\";\n}\n\nexport const EventRenderer: React.FC<IEventRendererProps> = ({\n  event,\n  eventCount,\n  spanSlots,\n  rowHeight,\n  eventIndex,\n  view,\n}) => {\n  const { styles } = useWeekViewStyles();\n  const { getEventColors } = useUtils();\n  const colors = getEventColors(event.category as string);\n\n  // Memoize the function that determines the custom render function\n  const customOnRenderEvent = React.useCallback(() => {\n    return view === \"day\" ? event.onRenderInDayView : event.onRenderInWeekView;\n  }, [event, view]);\n\n  if (React.isValidElement(customOnRenderEvent)) {\n    return React.cloneElement(customOnRenderEvent as React.ReactElement, {\n      event,\n      className: mergeClasses(\n        (customOnRenderEvent.props as any).className,\n        styles.eventCard\n      ),\n      style: {\n        ...(customOnRenderEvent.props as any).style,\n        flex: `0 0 calc(100% / ${eventCount})`,\n        height: `${rowHeight * spanSlots}px`, // Dynamically calculate height\n        left: `${eventIndex * 10}%`, // Adjust for overlapping events\n        width: `calc(${100 - eventIndex * 10}% - 8px)`, // Adjust width for overlap\n        margin: 4, // Add margin for spacing\n      },\n    });\n  }\n\n  // Return  default card\n  return (\n    \n        <EventPopoverCard\n          key={event.id}\n          event={event}\n          colors={colors}\n          spanSlots={spanSlots}\n          rowHeight={rowHeight}\n          eventIndex={eventIndex}\n          eventCount={eventCount}\n        />\n       \n    \n  );\n};\n","/* eslint-disable no-unmodified-loop-condition */\nimport { IEvent } from \"./IEvents\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\"; // Use UUID for generating unique IDs\n\nexport interface TimeSlot {\n  time: string;\n  events: IEvent[];\n}\n\nexport interface DayEvents {\n  date: string;\n  fullDayEvents: IEvent[]; // Add full-day events for the day\n  timeSlots: TimeSlot[];\n}\n\nexport interface IUseCalendar {\n  getMonthCalendar: (year: number, month: number) => Record<string, IEvent[]>;\n  addEvent: (event: IEvent) => void;\n  getWeekEvents: (startDate: string) => DayEvents[];\n}\n\nexport const useCalendar = (initialEvents: IEvent[], timezone: string):IUseCalendar => {\n  // Add a unique id to each event on initialization\n  const initializeEventsWithId = (events: IEvent[]): IEvent[] => {\n    return events.map((event) => ({\n      ...event,\n      id: event.id || uuidv4(), // Use existing id or generate a new one\n    }));\n  };\n\n  const [calendarEvents, setCalendarEvents] = useState<IEvent[]>(\n    initializeEventsWithId(initialEvents || [])\n  );\n\n  // Helper function to handle timezone and daylight savings\n  const toLocalDate = (dateString: string): Date => {\n    return new Date(\n      new Date(dateString).toLocaleString(undefined, { timeZone: timezone })\n    );\n  };\n\n  // Function to generate all events grouped by day for a specific month\n  const getMonthCalendar = (\n    year: number,\n    month: number\n  ): Record<string, IEvent[]> => {\n    const daysInMonth = new Date(year, month + 1, 0).getDate(); // Days in the given month\n\n    const calendarEventsByDay: Record<string, IEvent[]> = {};\n\n    // Initialize the structure with empty arrays for each day\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(year, month, day);\n      const dateString = date.toISOString().split(\"T\")[0];\n      calendarEventsByDay[dateString] = [];\n    }\n\n    // Loop through events and group them by their start and end dates\n    calendarEvents.forEach((event) => {\n      const eventStart = toLocalDate(event.start);\n      const eventEnd = toLocalDate(event.end);\n\n      const currentDate = new Date(eventStart);\n\n      while (currentDate <= eventEnd) {\n        const dateString = currentDate.toISOString().split(\"T\")[0];\n\n        // If the event falls within the month and day, add it to the list\n        if (calendarEventsByDay[dateString]) {\n          calendarEventsByDay[dateString].push(event);\n        }\n\n        // Move to the next day\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n    });\n\n    return calendarEventsByDay;\n  };\n\n  // Function to add a new event\n  const addEvent = (event: IEvent): void => {\n    const eventWithId: IEvent = {\n      ...event,\n      id: event.id || uuidv4(), // Add unique id if not provided\n    };\n    setCalendarEvents((prevEvents) => [...prevEvents, eventWithId]);\n  };\n\n  // Function to get events for a specific week\n  const getWeekEvents = (startDate: string): DayEvents[] => {\n    const weekEvents: DayEvents[] = [];\n    const start = toLocalDate(startDate);\n\n    for (let i = 0; i < 7; i++) {\n      const currentDate = new Date(start);\n      currentDate.setDate(start.getDate() + i);\n      const dateString = currentDate.toISOString().split(\"T\")[0];\n\n      const dayTimeSlots: TimeSlot[] = Array.from(\n        { length: 48 },\n        (_, index) => ({\n          time: `${String(Math.floor(index / 2)).padStart(2, \"0\")}:${\n            index % 2 === 0 ? \"00\" : \"30\"\n          }`,\n          events: [],\n        })\n      );\n\n      const fullDayEvents: IEvent[] = [];\n\n      calendarEvents.forEach((event) => {\n        const eventStart = toLocalDate(event.start);\n        const eventEnd = toLocalDate(event.end);\n\n        if (event.isFullDay) {\n          if (\n            eventStart.toISOString().split(\"T\")[0] <= dateString &&\n            eventEnd.toISOString().split(\"T\")[0] >= dateString\n          ) {\n            fullDayEvents.push(event);\n          }\n          return; // Skip further processing for full-day events\n        }\n\n        if (\n          eventStart.toISOString().split(\"T\")[0] <= dateString &&\n          eventEnd.toISOString().split(\"T\")[0] >= dateString\n        ) {\n          const currentSlot = new Date(eventStart);\n\n          while (currentSlot <= eventEnd) {\n            const slotDateString = currentSlot.toISOString().split(\"T\")[0];\n            if (slotDateString === dateString) {\n              const slotIndex =\n                currentSlot.getHours() * 2 +\n                (currentSlot.getMinutes() >= 30 ? 1 : 0);\n              if (dayTimeSlots[slotIndex]) {\n                dayTimeSlots[slotIndex].events.push(event);\n              }\n            }\n            currentSlot.setMinutes(currentSlot.getMinutes() + 30);\n          }\n        }\n      });\n\n      weekEvents.push({\n        date: dateString,\n        fullDayEvents,\n        timeSlots: dayTimeSlots,\n      });\n    }\n\n    return weekEvents;\n  };\n\n  return {\n    getMonthCalendar,\n    addEvent,\n    getWeekEvents,\n  };\n};\n\nexport default useCalendar;\n","import * as React from \"react\";\n\nimport {\n  Body1,\n  Body1Strong,\n  Subtitle1,\n  Text,\n  mergeClasses,\n} from \"@fluentui/react-components\";\nimport { addDays, format, isToday } from \"date-fns\";\nimport { useRef, useState } from \"react\";\n\nimport { EventRenderer } from \"./EventRender\";\nimport { IEvent } from \"./IEvents\";\nimport { useCalendar } from \"./useCalendar\";\nimport { useDayViewStyles } from \"./useDayViewStyles\";\nimport { useUtils } from \"./useUtils\";\n\nexport interface IDayViewProps {\n  events: IEvent[];\n  currentDay: Date;\n  height?: string | number;\n}\n\nconst ROW_HEIGHT = 33;\n\nexport const DayView: React.FC<IDayViewProps> = (props: IDayViewProps) => {\n  const { events, currentDay, height } = props;\n  const { styles } = useDayViewStyles();\n  const [currentDate] = useState(currentDay);\n  const calendarRef = useRef<HTMLDivElement>(null);\n  const { getSpanSlots, generateColor } = useUtils();\n  const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const { getWeekEvents } = useCalendar(events, timeZone);\n  const renderTimeColumn = React.useCallback((): JSX.Element[] => {\n    return Array.from({ length: 24 }, (_, hour) => (\n      <React.Fragment key={hour}>\n        <div className={styles.timeCell}>\n          <Body1Strong> {hour}:00 </Body1Strong>\n        </div>\n        <div className={styles.timeCell} />\n      </React.Fragment>\n    ));\n  }, [styles.timeCell]);\n\n  const renderDayHeaders = React.useCallback((): JSX.Element => {\n    return (\n      <>\n        {/* Blank Header Cell */}\n        <div className={styles.blankHeader} />\n        {/* Day Headers */}\n        {Array.from({ length: 1 }, (_, dayIndex) => {\n          const day = addDays(currentDate, dayIndex);\n          const isTodayClass = isToday(day) ? styles.todayHeaderCell : \"\";\n\n          return (\n            <div\n              key={dayIndex}\n              className={mergeClasses(styles.dayHeaderCell, isTodayClass)}\n            >\n              <Text weight=\"semibold\" size={600} style={{ paddingRight: 10 }}>\n                {format(day, \"dd\")}\n              </Text>\n              <Subtitle1>{format(day, \"LLLL, yyyy\")}</Subtitle1>\n            </div>\n          );\n        })}\n      </>\n    );\n  }, [\n    currentDate,\n    styles.blankHeader,\n    styles.dayHeaderCell,\n    styles.todayHeaderCell,\n  ]);\n\n  const renderFullDayEvents = React.useCallback((): JSX.Element => {\n    const weekEvents = getWeekEvents(currentDate.toISOString());\n    return (\n      <>\n        <div className={styles.fullDayLabel}>\n          <Body1>All Day</Body1>\n        </div>\n        {Array.from({ length: 1 }, (_, dayIndex) => {\n          const weekDay = format(addDays(currentDate, dayIndex), \"yyyy-MM-dd\");\n          const dayEvents = weekEvents.find((day) => day.date === weekDay);\n          const fullDayEvents = dayEvents?.fullDayEvents || [];\n          return (\n            <div key={dayIndex} className={styles.fullDayCell}>\n              {fullDayEvents.map((event) => (\n                <div\n                  key={event.id}\n                  className={styles.fullDayEvent}\n                  style={{\n                    gridColumn: `${dayIndex + 2}`, // Position event in the correct day column\n                    backgroundColor: generateColor(event.title),\n                  }}\n                >\n                  <Body1 className={styles.eventTitle}>{event.title}</Body1>\n                </div>\n              ))}\n            </div>\n          );\n        })}\n      </>\n    );\n  }, [\n    currentDate,\n    generateColor,\n    getWeekEvents,\n    styles.fullDayCell,\n    styles.fullDayEvent,\n    styles.fullDayLabel,\n    styles.eventTitle,\n  ]);\n  // Render the events for the current day\n  const renderDayCells = React.useCallback((): JSX.Element[] => {\n    const weekEvents = getWeekEvents(currentDate.toISOString());\n    // Render the events for the current day\n    return Array.from({ length: 1 }, (_, dayIndex) => {\n      const weekDay = format(addDays(currentDate, dayIndex), \"yyyy-MM-dd\");\n      const dayEvents = weekEvents.find((day) => day.date === weekDay);\n\n      return (\n        <>\n          {dayEvents?.timeSlots.map((timeSlot, slotIndex) => {\n            const eventCount = timeSlot.events.length; // Total events in the slot\n\n            return (\n              <div\n                key={slotIndex}\n                className={styles.dayCell}\n                style={{\n                  gridRow: slotIndex + 3, // Offset to account for header and full-day row\n                }}\n              >\n                {timeSlot.events.map((event, eventIndex) => {\n                  const startDate = new Date(event.start);\n                  const endDate = new Date(event.end);\n\n                  // Calculate the start and end slots based on event times\n                  const { spanSlots, startSlot } = getSpanSlots(\n                    startDate,\n                    endDate\n                  );\n\n                  // Only render the event in its starting timeslot\n                  if (slotIndex === startSlot) {\n                    const customRender = event?.onRenderInDayView;\n                    // If the event has a custom renderer, use it\n                    if (React.isValidElement(customRender)) {\n                      return React.cloneElement(\n                        customRender as React.ReactElement,\n                        {}\n                      );\n                    }\n\n                    // Event Render\n                    return (\n                      <EventRenderer\n                        key={event.id}\n                        event={event}\n                        eventCount={eventCount}\n                        spanSlots={spanSlots}\n                        rowHeight={ROW_HEIGHT}\n                        eventIndex={eventIndex}\n                        view=\"day\"\n                      />\n                    );\n                  }\n\n                  return null; // Skip rendering for non-starting slots\n                })}\n              </div>\n            );\n          })}\n        </>\n      );\n    });\n  }, [currentDate, getSpanSlots, getWeekEvents, styles.dayCell]);\n\n  return (\n    <div className={styles.container} style={{ height: height }}>\n      {/* DayGrid */}\n      <div ref={calendarRef} className={styles.dayGrid}>\n        <div className={styles.timeColumn}>{renderTimeColumn()}</div>\n        {renderDayHeaders()}\n        {renderFullDayEvents()}\n        {renderDayCells()}\n      </div>\n    </div>\n  );\n};\n\nexport default DayView;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { css } from \"@emotion/css\";\nimport { tokens } from \"@fluentui/react-components\";\n\nexport const useDayViewStyles = () => {\n  const styles = {\n    container: css({\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"calc(100% - 40px)\",\n      height: \"100vh\", // Make the container take the full viewport height\n      overflow: \"hidden\", // Prevent window scrolling\n      padding: \"20px\",\n    }),\n    header: css({\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      marginBottom: \"16px\",\n      borderBottom: `1px solid ${tokens.colorNeutralStroke1}`,\n    }),\n    dayGrid: css({\n      display: \"grid\",\n      gridTemplateColumns: \"80px 1fr\",\n      gridTemplateRows: \"50px 40px repeat(48, 33px)\", // Header row + Full-day row + 48 rows (2 per hour)\n      height: \"calc(100vh - 100px)\", // Full height minus header/footer areas\n      overflowY: \"auto\",\n      border: `1px solid ${tokens.colorNeutralStroke1}`,\n      maxHeight: \"fit-content\", // Limit the grid height to the viewport minus header/footer areas\n      scrollbarWidth: \"thin\", // Thin scrollbar for Firefox\n      scrollbarColor: `${tokens.colorBrandBackground} ${tokens.colorNeutralBackground1}`, // Scrollbar colors for Firefox\n      \"&::-webkit-scrollbar\": {\n        width: \"8px\", // Width of the scrollbar\n      },\n      \"&::-webkit-scrollbar-track\": {\n        background: tokens.colorNeutralBackground1, // Scrollbar track background\n      },\n      \"&::-webkit-scrollbar-thumb\": {\n        background: tokens.colorBrandBackground, // Scrollbar thumb color (brand color)\n        borderRadius: \"4px\", // Rounded corners for the thumb\n      },\n      \"&::-webkit-scrollbar-thumb:hover\": {\n        background: tokens.colorBrandBackgroundHover, // Lighter color on hover\n      },\n    }),\n    blankHeader: css({\n      gridColumn: \"1\",\n      backgroundColor: tokens.colorNeutralBackground3,\n      borderBottom: `3px solid ${tokens.colorNeutralStroke3}`,\n    }),\n    timeColumn: css({\n      gridColumn: \"1\",\n      gridRow: \"3 / span 49\", // Spans the entire rows after the header and full-day row\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: tokens.colorNeutralBackground1,\n      borderRight: `1px solid ${tokens.colorNeutralStroke1}`,\n    }),\n    timeCell: css({\n      height: \"100%\", // Let the height be dictated by the grid row's size\n      maxHeight: \"32px\", // Limit the cell height\n      minHeight: \"32px\", // Ensure the cell has a minimum height\n      display: \"flex\",\n      alignItems: \"center\",\n      fontSize: \"12px\",\n      color: tokens.colorNeutralForeground3,\n      borderBottom: `1px solid ${tokens.colorNeutralStroke1}`,\n      justifyContent: \"center\",\n    }),\n    fullDayRow: css({\n      gridRow: \"2\", // Full-day events occupy the second row\n      display: \"grid\",\n      gridTemplateColumns: \"80px 33px\", // Time column + 7 day columns\n      gap: \"0\", // Ensure cells align properly\n      padding: \"0\", // Remove padding for proper alignment\n      backgroundColor: tokens.colorNeutralBackground2,\n      borderBottom: `3px solid ${tokens.colorNeutralStroke2}`, // Bottom border for the row\n    }),\n    fullDayLabel: css({\n      gridColumn: \"1\", // Place in the first column\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      color: tokens.colorBrandBackground,\n      padding: \"5px\",\n      borderRight: `1px solid ${tokens.colorNeutralStroke1}`, // Right border for the label cell\n      borderBottom: `3px solid ${tokens.colorNeutralStroke2}`, // Bottom border for the cell\n    }),\n    fullDayCell: css({\n      borderRight: `1px solid ${tokens.colorNeutralStroke1}`, // Right border between day cells\n      display: \"flex\",\n      flexDirection: \"row\", // Arrange events horizontally\n      gap: \"2px\",\n      padding: \"4px\", // Ensure events have spacing within the cell\n      borderBottom: `3px solid ${tokens.colorNeutralStroke2}`, // Bottom border for the cell\n      overflow: \"hidden\", // Ensure events don’t overflow the cell\n    }),\n    fullDayEvent: css({\n      flex: \"1 1 auto\", // Allow events to share space equally\n      minWidth: \"24px\",\n      height: \"24px\",\n      padding: \"4px 8px\",\n      backgroundColor: tokens.colorBrandBackground,\n      color: tokens.colorNeutralForegroundOnBrand,\n      borderRadius: \"4px\",\n      overflow: \"hidden\",\n\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    }),\n    dayHeaderCell: css({\n      textAlign: \"center\",\n      backgroundColor: tokens.colorNeutralBackground2,\n      padding: \"8px\",\n      fontWeight: \"bold\",\n      borderBottom: `1px solid ${tokens.colorNeutralStroke1}`,\n    }),\n    todayHeaderCell: css({\n      borderTop: `5px solid ${tokens.colorBrandBackground}`,\n    }),\n    eventCard: css({\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginRight: \"2px\", // Spacing between events\n      zIndex: 1, // Ensure event appears above others\n      position: \"absolute\", // Position relative to the cell\n      alignContent: \"center\",\n\n      overflow: \"hidden\",\n\n      /* ':hover': {\n        pointerEvents: 'auto',\n        cursor: 'pointer',\n        opacity: 0.8,\n        color: tokens.colorNeutralForegroundOnBrand,\n      }, */\n    }),\n\n    dayCell: css({\n      borderBottom: `1px solid ${tokens.colorNeutralStroke1}`, // Cell borders\n      borderRight: `1px solid ${tokens.colorNeutralStroke1}`,\n      position: \"relative\", // Allow child events to be positioned absolutely\n      overflow: \"visible\", // Ensure events aren't clipped\n      FlexDirection: \"column\", // Ensure events are stacked vertically\n      gap: \"4px\",\n    }),\n    currentTimeIndicator: css({\n      position: \"absolute\",\n      left: 0,\n      height: \"2px\",\n      backgroundColor: tokens.colorPaletteRedBorderActive,\n      width: \"100%\",\n      zIndex: 1,\n    }),\n    currentHalfHourCell: css({\n      border: `2px solid ${tokens.colorPaletteRedBorderActive}`, // Highlight with a red border\n    }),\n    eventTitle: css({\n      display: \"-webkit-box\",\n      \"-webkit-line-clamp\": \"1\",\n      \"-webkit-box-orient\": \"vertical\",\n      textAlign: \"start\",\n      textOverflow: \"ellipsis\",\n      paddingLeft: \"8px\",\n      wordBreak: \"break-word\",\n      overflow: \"hidden\",\n    }),\n  };\n\n  const applyEventHouverColorClass = (\n    backgroundColor: string,\n    houveColor: string\n  ) => {\n    return css({\n      backgroundColor: backgroundColor ?? tokens.colorBrandBackground,\n      \":hover\": {\n        backgroundColor: houveColor ?? tokens.colorBrandBackgroundHover,\n      },\n    });\n  };\n\n  return { styles, applyEventHouverColorClass };\n};\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable @typescript-eslint/no-floating-promises */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-empty */\nimport * as React from \"react\";\n\nimport {\n  CalendarDayFilled,\n  CalendarDayRegular,\n  CalendarMonthFilled,\n  CalendarMonthRegular,\n  CalendarWorkWeekFilled,\n  CalendarWorkWeekRegular,\n  bundleIcon,\n} from \"@fluentui/react-icons\";\nimport {\n  Menu,\n  MenuButton,\n  MenuItemRadio,\n  MenuList,\n  MenuPopover,\n  MenuProps,\n  MenuTrigger,\n} from \"@fluentui/react-components\";\n\nimport { ECalendarViews } from \"./ECalendarViews\";\n\nexport interface ISelectCalendarViewProps {\n  onSelected: (view: ECalendarViews) => void;\n  value?: ECalendarViews;\n}\n\nexport const SelectCalendarView: React.FunctionComponent<\n  ISelectCalendarViewProps\n> = (props: React.PropsWithChildren<ISelectCalendarViewProps>) => {\n  const { onSelected, value } = props;\n\n  // State for selected view\n  const [selectedView, setSelectedView] = React.useState<ECalendarViews>(\n    value ?? ECalendarViews.Month\n  );\n\n  const [checkedValues, setCheckedValues] = React.useState<\n    Record<string, string[]>\n  >({\n    view: [value ?? ECalendarViews.Month],\n  });\n\n  const DayView = bundleIcon(CalendarDayFilled, CalendarDayRegular);\n  const MonthView = bundleIcon(CalendarMonthFilled, CalendarMonthRegular);\n  const WeekView = bundleIcon(CalendarWorkWeekFilled, CalendarWorkWeekRegular);\n\n  React.useEffect(() => {\n    // Synchronize selectedView with props\n    if (value !== undefined) {\n      setSelectedView(value);\n      setCheckedValues({ view: [value] });\n    }\n  }, [value]);\n\n  const [open, setOpen] = React.useState(false);\n  const onOpenChange: MenuProps[\"onOpenChange\"] = (_e, data) => {\n    setOpen(data.open);\n  };\n\n  const viewIcon = React.useCallback(() => {\n    switch (selectedView) {\n      case ECalendarViews.Month:\n        return <MonthView />;\n      case ECalendarViews.Week:\n        return <WeekView />;\n      case ECalendarViews.Day:\n        return <DayView />;\n      default:\n        return <MonthView />;\n    }\n  }, [selectedView]);\n\n  const getViewLabel = React.useCallback((view: ECalendarViews) => {\n    switch (view) {\n      case ECalendarViews.Month:\n        return \"Month\";\n      case ECalendarViews.Week:\n        return \"Week\";\n      case ECalendarViews.Day:\n        return \"Day\";\n      default:\n        return \"Month\";\n    }\n  }, []);\n\n  const onCheckedValueChange: MenuProps[\"onCheckedValueChange\"] =\n    React.useCallback(\n      (\n        _e: unknown,\n        { name, checkedItems }: { name: string; checkedItems: string[] }\n      ) => {\n        if (name === \"view\") {\n          const newView = checkedItems[0] as ECalendarViews;\n          setSelectedView(newView);\n          setCheckedValues({ view: checkedItems });\n          onSelected(newView);\n        }\n      },\n      [onSelected]\n    );\n\n  return (\n    <>\n\n      <Menu open={open} onOpenChange={onOpenChange}  >\n        <MenuTrigger disableButtonEnhancement>\n          <MenuButton\n            shape=\"circular\"\n            icon={viewIcon()}\n            style={{ minWidth: \"150px\" }}\n          >\n            {getViewLabel(selectedView)}\n          </MenuButton>\n        </MenuTrigger>\n        <MenuPopover>\n          <MenuList\n            onCheckedValueChange={onCheckedValueChange}\n            checkedValues={checkedValues}\n          >\n            <MenuItemRadio\n              icon={<DayView />}\n              name=\"view\"\n              value={ECalendarViews.Day}\n            >\n              Day\n            </MenuItemRadio>\n            <MenuItemRadio\n              icon={<WeekView />}\n              name=\"view\"\n              value={ECalendarViews.Week}\n            >\n              Week\n            </MenuItemRadio>\n            <MenuItemRadio\n              icon={<MonthView />}\n              name=\"view\"\n              value={ECalendarViews.Month}\n            >\n              Month\n            </MenuItemRadio>\n          </MenuList>\n        </MenuPopover>\n      </Menu>\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport {\n  CalendarMonthFilled,\n  CalendarMonthRegular,\n  bundleIcon,\n} from '@fluentui/react-icons';\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuPopover,\n  MenuProps,\n  MenuTrigger,\n} from '@fluentui/react-components';\nimport { format, utcToZonedTime } from 'date-fns-tz'; // Importing date-fns and timezone utilities\n\nimport { Calendar } from '@fluentui/react-calendar-compat'; // Assuming Fluent UI's Calendar is installed\n\nexport interface ISelectDayProps {\n  onSelected: (date: Date) => void; // Returns the selected date\n  value?: Date; // Initial date value\n}\n\nexport const SelectDay: React.FunctionComponent<ISelectDayProps> = React.memo(\n  (props: React.PropsWithChildren<ISelectDayProps>) => {\n    const { onSelected, value } = props;\n\n    // State for selected date\n    const [selectedDate, setSelectedDate] = React.useState<Date | undefined>(\n      value ?? new Date()\n    );\n    const [selectedLabel, setSelectedLabel] = React.useState<string>(() => {\n      const initialDate = value ?? new Date();\n      return format(initialDate, 'dd MMM, yyyy');\n    });\n\n    const [open, setOpen] = React.useState(false);\n\n    const onOpenChange: MenuProps['onOpenChange'] = React.useCallback(\n      (\n        _e: any,\n        data: { open: boolean | ((prevState: boolean) => boolean) }\n      ) => {\n        setOpen(data.open);\n      },\n      []\n    );\n\n    const MonthIcon = React.useMemo(\n      () => bundleIcon(CalendarMonthFilled, CalendarMonthRegular),\n      []\n    );\n\n    const onSelectDate = React.useCallback(\n      (date: Date | null | undefined) => {\n        if (date) {\n          const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n          const zonedDate = utcToZonedTime(date, timeZone);\n\n          setSelectedDate(zonedDate);\n          setSelectedLabel(format(zonedDate, 'dd MMM, yyyy'));\n          onSelected(zonedDate);\n          setOpen(false);\n        }\n      },\n      [onSelected]\n    );\n\n    return (\n      <Menu open={open} onOpenChange={onOpenChange}>\n        <MenuTrigger disableButtonEnhancement>\n          <MenuButton\n            shape=\"circular\"\n            icon={<MonthIcon />}\n            style={{ minWidth: '200px' }}\n          >\n            {selectedLabel}\n          </MenuButton>\n        </MenuTrigger>\n        <MenuPopover style={{ maxWidth: 'fit-content' }}>\n          <MenuList>\n            <Calendar\n            \n              highlightSelectedMonth\n              showGoToToday\n              onSelectDate={onSelectDate}\n              value={selectedDate}\n            />\n          </MenuList>\n        </MenuPopover>\n      </Menu>\n    );\n  }\n);","import * as React from 'react';\n\nimport { Calendar, DateRangeType } from \"@fluentui/react-calendar-compat\";\n\nimport { css } from '@emotion/css';\n\nconst useCalendarStyles = () => {\n  return {\n    root: css({\n      outlineStyle: \"none !important\", \n    }),\n  };\n};\n\ninterface ICalendarMonthProps {\n  onDateChange: (date: Date) => void;\n  defaultSelectedDate?: Date;\n  onDismiss: () => void;\n}\n\n/* const dateStrings = {\n  months: [\n    \"Gennaio\",\n    \"Febbraio\",\n    \"Marzo\",\n    \"Aprile\",\n    \"Maggio\",\n    \"Giugno\",\n    \"Luglio\",\n    \"Agosto\",\n    \"Settembre\",\n    \"Ottobre\",\n    \"Novembre\",\n    \"Dicembre\",\n  ],\n  shortMonths: [\n    \"Gen\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mag\",\n    \"Giu\",\n    \"Lug\",\n    \"Ago\",\n    \"Set\",\n    \"Ott\",\n    \"Nov\",\n    \"Dic\",\n  ],\n  goToToday: \"Vai a oggi\",\n  days: [\n    \"Domenica\",\n    \"Lunedì\",\n    \"Martedì\",\n    \"Mercoledì\",\n    \"Giovedì\",\n    \"Venerdì\",\n    \"Sabato\",\n  ],\n  shortDays: [\n    \"Dom\",\n    \"Lun\",\n    \"Mar\",\n    \"Mer\",\n    \"Gio\",\n    \"Ven\",\n    \"Sab\",\n  ],\n}; */\n\nexport const CalendarMonth: React.FunctionComponent<ICalendarMonthProps> = (\n  props: React.PropsWithChildren<ICalendarMonthProps>\n) => {\n  const { onDateChange, defaultSelectedDate, onDismiss } = props;\nconst styles = useCalendarStyles();\n  const [selectedDate, setSelectedDate] = React.useState<Date>((defaultSelectedDate as Date) ?? new Date());\n\n  const onSelectDate = React.useCallback((date: Date, _selectedDateRangeArray?: Date[] | undefined): void => {\n    setSelectedDate(date);\n    onDateChange(date);\n    onDismiss();\n  }, []);\n\n  return (\n    <>\n      <Calendar\n        className={styles.root}\n        dateRangeType={DateRangeType.Month}\n        highlightSelectedMonth\n        isDayPickerVisible={false}\n        onSelectDate={onSelectDate}\n        value={selectedDate}\n        onDismiss={onDismiss}\n        showGoToToday={false}\n        allFocusable={false}\n      />\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable @typescript-eslint/no-floating-promises */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-empty */\nimport * as React from 'react';\n\nimport {\n  CalendarMonthFilled,\n  CalendarMonthRegular,\n  bundleIcon,\n} from '@fluentui/react-icons';\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuPopover,\n  MenuProps,\n  MenuTrigger,\n} from '@fluentui/react-components';\n\nimport { CalendarMonth } from './CalendarMonth';\nimport { format } from 'date-fns';\n\nexport interface ISelectMonthProps {\n  onSelected: (date: Date) => void;\n  value?: Date;\n}\n\n\n\nexport const SelectMonth: React.FunctionComponent<ISelectMonthProps> = (\n  props: React.PropsWithChildren<ISelectMonthProps>\n) => {\n  const { onSelected, value } = props;\n \n\n  const Calendar = bundleIcon(CalendarMonthFilled, CalendarMonthRegular);\n  const [selectedDate, setSelectedDate] = React.useState<Date>(value ?? new Date());\n\n  React.useEffect(() => {\n    onSelected(value ?? new Date());\n    setSelectedDate(value ?? new Date());\n  }, [value]);\n\n  const [open, setOpen] = React.useState(false);\n  const onOpenChange: MenuProps[\"onOpenChange\"] = (_e, data) => {\n    setOpen(data.open);\n  };\n\n  const onDateChange = React.useCallback((date: Date) => {\n    onSelected(date);\n    setSelectedDate(date);\n  }, []);\n\n  return (\n    <>\n      <Menu open={open} onOpenChange={onOpenChange}>\n        <MenuTrigger disableButtonEnhancement>\n          <MenuButton shape=\"circular\" icon={<Calendar />} style={{minWidth: \"200px\"}}>\n            {format(selectedDate, \"MMMM yyyy\" )}\n          </MenuButton>\n        </MenuTrigger>\n        <MenuPopover>\n          <MenuList>\n            <CalendarMonth\n              onDateChange={onDateChange}\n              defaultSelectedDate={selectedDate}\n              onDismiss={() => {\n                setOpen(false);\n              }}\n            />\n          </MenuList>\n        </MenuPopover>\n      </Menu>\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport { Calendar, DateRangeType } from '@fluentui/react-calendar-compat'; // Assuming Fluent UI's Calendar is installed\nimport {\n  CalendarMonthFilled,\n  CalendarMonthRegular,\n  bundleIcon,\n} from '@fluentui/react-icons';\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuPopover,\n  MenuProps,\n  MenuTrigger,\n} from '@fluentui/react-components';\nimport { format, utcToZonedTime } from 'date-fns-tz'; // Importing date-fns and timezone utilities\n\nexport interface ISelectWeekProps {\n  onSelected: (week: { startDate: Date; endDate: Date }) => void; // Now returns start and end dates as Date objects\n  value?: Date; // Start date as a Date object\n}\n\nconst formatWeekLabel = (week: { start: Date; end: Date }) => {\n  const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const startMonth = format(week.start, 'MMM', { timeZone });\n  const endMonth = format(week.end, 'MMM', { timeZone });\n  const startYear = format(week.start, 'yyyy', { timeZone });\n  const endYear = format(week.end, 'yyyy', { timeZone });\n\n  if (startYear !== endYear) {\n    return `${format(week.start, 'dd MMM yyyy', {\n      timeZone,\n    })} - ${format(week.end, 'dd MMM yyyy', { timeZone })}`;\n  } else if (startMonth !== endMonth) {\n    return `${format(week.start, 'dd MMM', {\n      timeZone,\n    })} - ${format(week.end, 'dd MMM yyyy', { timeZone })}`;\n  } else {\n    return `${format(week.start, 'dd', { timeZone })} - ${format(\n      week.end,\n      'dd MMM yyyy',\n      { timeZone }\n    )}`;\n  }\n};\n\n// Helper function to get the start and end dates of the week\nconst getWeekRange = (date: Date) => {\n  const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const zonedDate = utcToZonedTime(date, timeZone);\n\n  const start = new Date(zonedDate);\n  start.setDate(zonedDate.getDate() - zonedDate.getDay()); // Start of the week (Sunday)\n\n  const end = new Date(start);\n  end.setDate(start.getDate() + 6); // End of the week (Saturday)\n\n  return {\n    start: utcToZonedTime(start, timeZone),\n    end: utcToZonedTime(end, timeZone),\n  };\n};\n\nexport const SelectWeek: React.FunctionComponent<ISelectWeekProps> = React.memo(\n  (props: React.PropsWithChildren<ISelectWeekProps>) => {\n    const { onSelected, value } = props;\n\n    const dateRangeType: DateRangeType = DateRangeType.Week;\n\n    // State for selected week\n    const [selectedDate, setSelectedDate] = React.useState<Date | undefined>(\n      value ?? new Date()\n    );\n    const [selectedWeek, setSelectedWeek] = React.useState<string>(() => {\n      const newValue = value ?? new Date();\n      if (newValue) {\n        const weekRange = getWeekRange(newValue);\n        return formatWeekLabel(weekRange);\n      }\n      return 'Select a week';\n    });\n\n    const [open, setOpen] = React.useState(false);\n\n    const onOpenChange: MenuProps['onOpenChange'] = React.useCallback(\n      (\n        _e: any,\n        data: { open: boolean | ((prevState: boolean) => boolean) }\n      ) => {\n        setOpen(data.open);\n      },\n      []\n    );\n\n    const MonthIcon = React.useMemo(\n      () => bundleIcon(CalendarMonthFilled, CalendarMonthRegular),\n      []\n    );\n\n    const onSelectDate = React.useCallback(\n      (date: Date | null | undefined) => {\n        if (date) {\n          setSelectedDate(date);\n          const weekRange = getWeekRange(date);\n          const weekLabel = formatWeekLabel(weekRange);\n\n          setSelectedWeek(weekLabel);\n          onSelected({ startDate: weekRange.start, endDate: weekRange.end });\n          setOpen(false);\n        }\n      },\n      [getWeekRange, formatWeekLabel, onSelected]\n    );\n\n    const firstDayOfWeek = React.useMemo(() => 0, []); // Week starts on Sunday\n\n    return (\n      <Menu open={open} onOpenChange={onOpenChange}>\n        <MenuTrigger disableButtonEnhancement>\n          <MenuButton\n            shape=\"circular\"\n            icon={<MonthIcon />}\n            style={{ minWidth: '200px' }}\n          >\n            {selectedWeek}\n          </MenuButton>\n        </MenuTrigger>\n        <MenuPopover style={{ maxWidth: 'fit-content' }}>\n          <MenuList>\n            <Calendar\n              dateRangeType={dateRangeType}\n              highlightSelectedMonth\n              showGoToToday\n              onSelectDate={onSelectDate}\n              value={selectedDate}\n              firstDayOfWeek={firstDayOfWeek}\n            />\n          </MenuList>\n        </MenuPopover>\n      </Menu>\n    );\n  }\n);\n","import * as React from \"react\";\n\nimport {\n  ArrowDownFilled,\n  ArrowDownRegular,\n  ArrowUpFilled,\n  ArrowUpRegular,\n  CalendarTodayRegular,\n  bundleIcon,\n} from \"@fluentui/react-icons\";\n\nimport { Button } from \"@fluentui/react-button\";\nimport { ECalendarViews } from \"./ECalendarViews\";\nimport { SelectCalendarView } from \"./SelectCalendarView\";\nimport { SelectDay } from \"../selectDay/SelectDay\";\nimport { SelectMonth } from \"../selectMonth/SelectMonth\";\nimport { SelectWeek } from \"../selectWeek/SelectWeek\";\nimport { Stack } from \"../Stack\";\nimport { Tooltip } from \"@fluentui/react-tooltip\";\n\ninterface ToolbarProps {\n  selectedView: ECalendarViews;\n  onSelectedView: (view: ECalendarViews) => void;\n  currentDate: Date;\n  setCurrentDate: (date: Date) => void;\n  onWeekChange: (date: Date) => void;\n  onMonthChange: (date: Date) => void;\n  onDayChange: (date: Date) => void;\n \n}\n\nexport const Toolbar: React.FC<ToolbarProps> = React.memo(\n  ({\n    selectedView,\n    onSelectedView,\n    currentDate,\n    setCurrentDate,\n    onWeekChange,\n    onMonthChange,\n    onDayChange,\n  }) => {\n    const ArrowDown = bundleIcon(ArrowDownFilled, ArrowDownRegular);\n    const ArrowUp = bundleIcon(ArrowUpFilled, ArrowUpRegular);\n\n    const onSelectWeek = (week: { startDate: Date; endDate: Date }): void => {\n      onWeekChange(week.startDate);\n      setCurrentDate(week.startDate);\n    };\n\n    const onSelectMonth = (month: Date): void => {\n      onMonthChange(month);\n      setCurrentDate(month);\n    };\n\n    const onSelectDay = (day: Date): void => {\n      onDayChange(day);\n      setCurrentDate(day);\n    };\n\n    const RenderSelectView = (): JSX.Element => {\n      switch (selectedView) {\n        case ECalendarViews.Month:\n          return <SelectMonth onSelected={onSelectMonth} value={currentDate} />;\n        case ECalendarViews.Week:\n          return <SelectWeek onSelected={onSelectWeek} value={currentDate} />;\n        case ECalendarViews.Day:\n          return <SelectDay onSelected={onSelectDay} value={currentDate} />;\n        default:\n          return <SelectMonth onSelected={onSelectMonth} value={currentDate} />;\n      }\n    };\n\n    const RenderToday = (): JSX.Element => (\n      <Tooltip content=\"Today\" relationship=\"label\">\n        <Button\n          shape=\"circular\"\n          icon={<CalendarTodayRegular />}\n          size=\"medium\"\n          onClick={() => onDayChange(new Date())}\n        >\n          Today\n        </Button>\n      </Tooltip>\n    );\n\n    const handleNavigation = (offset: number): void => {\n      const newDate = new Date(currentDate);\n      switch (selectedView) {\n        case ECalendarViews.Month:\n          newDate.setMonth(newDate.getMonth() + offset);\n          onMonthChange(newDate);\n          break;\n        case ECalendarViews.Week:\n          newDate.setDate(newDate.getDate() + offset * 7);\n          onWeekChange(newDate);\n          break;\n        case ECalendarViews.Day:\n          newDate.setDate(newDate.getDate() + offset);\n          onDayChange(newDate);\n          break;\n        default:\n          break;\n      }\n      setCurrentDate(newDate);\n    };\n\n    return (\n      <Stack\n        width=\"calc(100% - 40px)\"\n        height=\"fit-content\"\n        horizontal\n        horizontalAlign=\"space-between\"\n        verticalAlign=\"center\"\n        paddingLeft=\"20px\"\n        paddingRight=\"20px\"\n        paddingBottom=\"10px\"\n        paddingTop=\"10px\"\n        columnGap={10}\n        styles={{ overflow: \"hidden\" }}\n      >\n        <Stack\n          horizontal\n          horizontalAlign=\"start\"\n          verticalAlign=\"center\"\n          columnGap={10}\n        >\n          <RenderToday />\n          <RenderSelectView />\n          <Tooltip content=\"Previous\" relationship=\"label\">\n            <Button\n              size=\"medium\"\n              icon={<ArrowUp fontSize={14} />}\n              onClick={() => handleNavigation(-1)}\n            />\n          </Tooltip>\n          <Tooltip content=\"Next\" relationship=\"label\">\n            <Button\n              size=\"medium\"\n              icon={<ArrowDown fontSize={14} />}\n              onClick={() => handleNavigation(1)}\n            />\n          </Tooltip>\n        </Stack>\n        <Stack\n          horizontal\n          horizontalAlign=\"start\"\n          verticalAlign=\"center\"\n          columnGap={10}\n        >\n          <SelectCalendarView\n            onSelected={onSelectedView}\n            value={selectedView}\n          />\n        </Stack>\n      </Stack>\n    );\n  }\n);\n\nexport default Toolbar;\n","import * as React from \"react\";\n\nimport {\n  Body1,\n  Body1Strong,\n  Text,\n  mergeClasses,\n} from \"@fluentui/react-components\";\nimport { addDays, format, isToday, startOfWeek } from \"date-fns\";\nimport { useEffect, useRef, useState } from \"react\";\n\nimport { EventRenderer } from \"./EventRender\";\nimport { IEvent } from \"./IEvents\";\nimport { ResizeObserver } from \"@juggle/resize-observer\";\nimport { useCalendar } from \"./useCalendar\";\nimport { useUtils } from \"./useUtils\";\nimport { useWeekViewStyles } from \"./useWeekViewStyles\";\n\nexport interface IWeekViewProps {\n  events: IEvent[];\n  currentDay: Date;\n  height?: string | number;\n}\n\nexport const WeekView: React.FC<IWeekViewProps> = (props: IWeekViewProps) => {\n  const { events, currentDay, height } = props;\n  const { styles } = useWeekViewStyles();\n  const [currentDate] = useState(currentDay);\n  const [rowHeight, setRowHeight] = useState<number>(32); // Default row height\n  const calendarRef = useRef<HTMLDivElement>(null);\n  const { getSpanSlots } = useUtils();\n  const weekStart = startOfWeek(currentDate, { weekStartsOn: 0 });\n  const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  const { getWeekEvents } = useCalendar(events, timeZone);\n\n  // Dynamic row height calculation using ResizeObserver\n  useEffect(() => {\n    const observer = new ResizeObserver(() => {\n      if (calendarRef.current) {\n        const firstRowCell = calendarRef.current.querySelector(\n          \".dayCell\"\n        ) as HTMLDivElement;\n        if (firstRowCell) {\n          setRowHeight(firstRowCell.offsetHeight);\n        }\n      }\n    });\n    if (calendarRef.current) {\n      observer.observe(calendarRef.current);\n    }\n    return () => {\n      observer.disconnect();\n    };\n  }, [calendarRef]);\n\n  const generateColor = React.useCallback((str: string): string => {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    const c = (hash & 0x00ffffff).toString(16).toUpperCase();\n    return `#${\"00000\".substring(0, 6 - c.length) + c}`;\n  }, []);\n\n  const renderTimeColumn = React.useCallback((): JSX.Element[] => {\n    return Array.from({ length: 24 }, (_, hour) => (\n      <React.Fragment key={hour}>\n        <div className={styles.timeCell}>\n          <Body1Strong> {hour}:00 </Body1Strong>\n        </div>\n        <div className={styles.timeCell} />\n      </React.Fragment>\n    ));\n  }, []);\n\n  const renderDayHeaders = React.useCallback((): JSX.Element => {\n    return (\n      <>\n        {/* Blank Header Cell */}\n        <div className={styles.blankHeader} />\n        {/* Day Headers */}\n        {Array.from({ length: 7 }, (_, dayIndex) => {\n          const day = addDays(weekStart, dayIndex);\n          const isTodayClass = isToday(day) ? styles.todayHeaderCell : \"\";\n          return (\n            <div\n              key={dayIndex}\n              className={mergeClasses(styles.dayHeaderCell, isTodayClass)}\n            >\n              <Text weight=\"regular\" size={600} style={{ paddingRight: 10 }}>\n                {format(day, \"dd\")}\n              </Text>\n              <Body1>{format(day, \"EEE\")}</Body1>\n            </div>\n          );\n        })}\n      </>\n    );\n  }, [weekStart, styles]);\n\n  const renderFullDayEvents = React.useCallback((): JSX.Element => {\n    const weekEvents = getWeekEvents(weekStart.toISOString());\n    return (\n      <>\n        <div className={styles.fullDayLabel}>\n          <Body1>All Day</Body1>\n        </div>\n        {Array.from({ length: 7 }, (_, dayIndex) => {\n          const weekDay = format(addDays(weekStart, dayIndex), \"yyyy-MM-dd\");\n          const dayEvents = weekEvents.find((day) => day.date === weekDay);\n          const fullDayEvents = dayEvents?.fullDayEvents || [];\n\n          return (\n            <div key={dayIndex} className={styles.fullDayCell}>\n              {fullDayEvents.map((event) => (\n                <div\n                  key={event.id}\n                  className={styles.fullDayEvent}\n                  style={{\n                    gridColumn: `${dayIndex + 2}`, // Position event in the correct day column\n                    backgroundColor: generateColor(event.title),\n                  }}\n                >\n                  <Body1 className={styles.eventTitle}>{event.title}</Body1>\n                </div>\n              ))}\n            </div>\n          );\n        })}\n      </>\n    );\n  }, [weekStart, styles, getWeekEvents, generateColor]);\n\n  const renderDayCells = React.useCallback((): JSX.Element[] => {\n    const weekEvents = getWeekEvents(weekStart.toISOString());\n\n    return Array.from({ length: 7 }, (_, dayIndex) => {\n      const weekDay = format(addDays(weekStart, dayIndex), \"yyyy-MM-dd\");\n      const dayEvents = weekEvents.find((day) => day.date === weekDay);\n\n      return (\n        <>\n          {dayEvents?.timeSlots.map((timeSlot, slotIndex) => {\n            const eventCount = timeSlot.events.length; // Total events in the slot\n\n            return (\n              <div\n                key={slotIndex}\n                className={styles.dayCell}\n                style={{\n                  gridRow: slotIndex + 3, // Offset to account for header and full-day row\n                }}\n              >\n                {timeSlot.events.map((event, eventIndex) => {\n                  const startDate = new Date(event.start);\n                  const endDate = new Date(event.end);\n                  // Calculate the start and end slots based on event times\n                  const { spanSlots, startSlot } = getSpanSlots(\n                    startDate,\n                    endDate\n                  );\n                  // Only render the event in its starting timeslot\n                  if (slotIndex === startSlot) {\n                    const customRender = event?.onRenderInWeekView;\n                    // If the event has a custom renderer, use it\n                    if (React.isValidElement(customRender)) {\n                      return React.cloneElement(\n                        customRender as React.ReactElement,\n                        {}\n                      );\n                    }\n                    // Event Render\n                    return (\n                      <EventRenderer\n                        key={event.id}\n                        event={event}\n                        eventCount={eventCount}\n                        spanSlots={spanSlots}\n                        rowHeight={rowHeight}\n                        eventIndex={eventIndex}\n                        view=\"week\"\n                      />\n                    );\n                  }\n                  return null; // Skip rendering for non-starting slots\n                })}\n              </div>\n            );\n          })}\n        </>\n      );\n    });\n  }, [weekStart, styles, getWeekEvents, getSpanSlots, rowHeight]);\n\n  return (\n    <div className={styles.container} style={{ height: height }}>\n      {/* Week Grid */}\n      <div ref={calendarRef} className={styles.weekGrid}>\n        <div className={styles.timeColumn}>{renderTimeColumn()}</div>\n        {renderDayHeaders()}\n        {renderFullDayEvents()}\n        {renderDayCells()}\n      </div>\n    </div>\n  );\n};\n\nexport default WeekView;\n","import * as React from \"react\";\n\nimport {\n  Body1,\n  FluentProvider,\n  IdPrefixProvider,\n  webLightTheme,\n} from \"@fluentui/react-components\";\nimport { addDays, startOfMonth, startOfWeek } from \"date-fns\";\nimport { useEffect, useRef, useState } from \"react\";\n\nimport { Day } from \"./Day\";\nimport DayView from \"./DayView\";\nimport { ECalendarViews } from \"./ECalendarViews\";\nimport { ICalendarControlProps } from \"./ICalendarControlProps\";\nimport { ICalendarDay } from \"./ICalendarDay\";\nimport { IEvent } from \"./IEvents\";\nimport { ResizeObserver } from \"@juggle/resize-observer\";\nimport { Stack } from \"../Stack\";\nimport Toolbar from \"./Toolbar\";\nimport WeekView from \"./WeekView\";\nimport { useCalendar } from \"./useCalendar\";\nimport { useCalendarStyles } from \"./useCalendarStyles\";\n\ninterface CalendarState {\n  currentDate: Date;\n}\n\nconst daysOfWeek: string[] = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nexport const CalendarControl: React.FC<ICalendarControlProps> = (\n  props: ICalendarControlProps\n) => {\n  const { styles } = useCalendarStyles(props as never);\n  const calendarRef = useRef<HTMLDivElement>(null);\n  const [rowHeight, setRowHeight] = useState<number | null>(null);\n  const {\n    events,\n    height = 800,\n    theme,\n    onDayChange,\n    onMonthChange,\n    onWeekChange,\n    onViewChange,\n  } = props;\n  const rowHeightRef = useRef<number>(0);\n\n  // Default current date\n  const [currentDate, setCurrentDate] = useState<CalendarState[\"currentDate\"]>(\n    new Date()\n  );\n  // Default view\n  const [selectedView, setSelectedView] = useState<ECalendarViews>(\n    ECalendarViews.Month\n  );\n  // Get month calendar\n  const { getMonthCalendar } = useCalendar(\n    events,\n    Intl.DateTimeFormat().resolvedOptions().timeZone\n  );\n  // Get calendar days\n  const getCalendarDays = React.useCallback((date: Date): ICalendarDay[] => {\n    const month = date.getMonth();\n    const firstDayOfMonth = startOfMonth(date);\n    const firstDayOfWeek = startOfWeek(firstDayOfMonth);\n    const totalDisplayedDays = 42;\n    // Generate calendar days\n    const calendarDays = Array.from(\n      { length: totalDisplayedDays },\n      (_, index): ICalendarDay => {\n        const relativeDay = addDays(firstDayOfWeek, index);\n        return {\n          day: relativeDay.getDate(),\n          currentMonth: relativeDay.getMonth() === month,\n          date: relativeDay,\n        };\n      }\n    );\n    return calendarDays;\n  }, []);\n\n  // Handle month change\n  const handleMonthChange = React.useCallback(\n    (date: Date): void => {\n      if (onMonthChange) {\n        onMonthChange(date);\n      }\n      setCurrentDate(date);\n    },\n    [currentDate]\n  );\n  // Handle day change\n  const handleDayChange = React.useCallback(\n    (date: Date): void => {\n      if (onDayChange) {\n        onDayChange(date);\n      }\n      setCurrentDate(date);\n    },\n    [currentDate]\n  );\n  // Handle week change\n  const handleWeekChange = React.useCallback(\n    (date: Date): void => {\n      if (onWeekChange) {\n        onWeekChange(date);\n      }\n      setCurrentDate(date);\n    },\n    [currentDate]\n  );\n  // Handle view change\n  const handleViewChange = React.useCallback(\n    (view: ECalendarViews): void => {\n      if (onViewChange) {\n        onViewChange(view);\n      }\n      setSelectedView(view);\n    },\n    [selectedView]\n  );\n  // Handle next\n\n  // Get events for the day\n  const getEventsForDay = React.useCallback(\n    (dateObj: ICalendarDay): IEvent[] => {\n      const { date } = dateObj;\n      const monthEvents = getMonthCalendar(\n        currentDate.getFullYear(),\n        currentDate.getMonth()\n      );\n      const dayString = date.toISOString().split(\"T\")[0]; // Get date in YYYY-MM-DD format\n      return monthEvents[dayString]?.flatMap((slot) => slot) || [];\n    },\n    [currentDate]\n  );\n  // Resize observer\n  useEffect(() => {\n    const handleResize = (): void => {\n      // Get the height of the 8 column cell\n      // the first column cell  until 7th column cell are headers\n      if (calendarRef.current) {\n        setTimeout(() => {\n          if (calendarRef.current) {\n            const firstDataColumnCell = calendarRef.current.querySelector(\n              `.${styles.calendarWrapper} > div:nth-child(8)`\n            ) as HTMLDivElement;\n\n            if (firstDataColumnCell) {\n              setRowHeight(firstDataColumnCell.offsetHeight);\n              rowHeightRef.current = firstDataColumnCell.offsetHeight;\n            }\n          }\n        }, 100); // 🔹 Delay to ensure elements are rendered\n      }\n    };\n    const observer = new ResizeObserver(handleResize);\n    if (calendarRef.current) {\n      observer.observe(calendarRef.current);\n    }\n    handleResize();\n    // fallback for resize\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      observer.disconnect();\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [calendarRef]);\n  // Toolbar component\n\n  // Render Month View\n  const RenderMonthView = React.memo(() => {\n    return (\n      <Stack\n        height={height}\n        width={\"100%\"}\n        verticalAlign=\"start\"\n        horizontalAlign=\"start\"\n      >\n        <div className={styles.calendarWrapper} ref={calendarRef}>\n          {daysOfWeek.map((day) => (\n            <Body1 key={day} className={styles.dayHeader}>\n              {day}\n            </Body1>\n          ))}\n          {getCalendarDays(currentDate).map((dateObj, index) => {\n            const { day, currentMonth } = dateObj;\n            const events = currentMonth ? getEventsForDay(dateObj) : [];\n            return (\n              <Day\n                key={index}\n                day={day}\n                date={dateObj.date}\n                currentMonth={dateObj.currentMonth}\n                events={events}\n                columnHeight={rowHeight || 0}\n              />\n            );\n          })}\n        </div>\n      </Stack>\n    );\n  });\n  // Render Week View\n  const RenderWeekView = React.memo(() => {\n    return (\n      <>\n        {selectedView === ECalendarViews.Week && (\n          <WeekView events={events} currentDay={currentDate} height={height} />\n        )}\n      </>\n    );\n  });\n  // Render Day View\n  const RenderDayView = React.memo(() => {\n    return (\n      <>\n        {selectedView === ECalendarViews.Day && (\n          <DayView currentDay={currentDate} events={events} height={height} />\n        )}\n      </>\n    );\n  });\n\n  // Render content\n  const RenderContent = React.useCallback(() => {\n    switch (selectedView) {\n      case ECalendarViews.Month:\n        return <RenderMonthView />;\n      case ECalendarViews.Week:\n        return <RenderWeekView />;\n      case ECalendarViews.Day:\n        return <RenderDayView />;\n      default:\n        return <RenderMonthView />;\n    }\n  }, [selectedView, RenderMonthView, RenderWeekView, RenderDayView]);\n\n  return (\n    <>\n      <IdPrefixProvider value=\"calendarControl-\">\n        <FluentProvider theme={theme ?? webLightTheme}>\n          <Stack height={\"100%\"} verticalAlign=\"start\">\n            <Toolbar\n              selectedView={selectedView}\n              onSelectedView={handleViewChange}\n              currentDate={currentDate}\n              setCurrentDate={setCurrentDate}\n              onWeekChange={handleWeekChange}\n              onMonthChange={handleMonthChange}\n              onDayChange={handleDayChange}\n            />\n            <RenderContent />\n          </Stack>\n        </FluentProvider>\n      </IdPrefixProvider>\n    </>\n  );\n};\n\nexport default CalendarControl;\n","import React from 'react';\n\ninterface AspectRatioProps {\n  ratio: number;\n  children?: React.ReactNode;\n  maxWidth?: string | number;\n  maxHeight?: string | number;\n  style?: React.CSSProperties;\n  [key: string]: any;\n}\n\nexport const AspectRatio: React.FC<AspectRatioProps> = ({ ratio, children, maxWidth, maxHeight, style = {}, ...props }) => {\n  const aspectStyle: React.CSSProperties = {\n    position: 'relative',\n    width: '100%',\n    paddingTop: `${100 / ratio}%`,\n    maxWidth: maxWidth || 'none',\n    maxHeight: maxHeight || 'none',\n    ...style,\n  };\n\n  const innerStyle: React.CSSProperties = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n  };\n\n  return (\n    <div style={aspectStyle} {...props}>\n      <div style={innerStyle}>{children}</div>\n    </div>\n  );\n};\n\n\nexport default AspectRatio;\n","import {\n    Button,\n    Text,\n    mergeClasses,\n} from '@fluentui/react-components';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { ChevronRightRegular } from '@fluentui/react-icons';\nimport { IBreadcrumbItem } from './IBreadcrumItem';\nimport { IBreadcrumbProps } from './IBreadcrumProps';\nimport OverflowMenu from './OverflowMenu'; // Import the OverflowMenu component\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { Stack } from '../Stack';\nimport { useBreadcrumStyles } from './useBreadcrumStyles';\n\n// Utility: Debounce function to limit ResizeObserver calls\n  const debounce = (func: (...args: any[]) => void, delay: number) => {\n    let timeout: NodeJS.Timeout;\n    return (...args: any[]) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func(...args), delay);\n    };\n  };\n  \n  export const Breadcrumb: React.FC<IBreadcrumbProps> = ({\n    items,\n    maxWidth = '100%',\n    styles: customStyles,\n    theme,\n    size = 'medium',\n    currentIndex = items.length - 1,\n    className,\n  }) => {\n    const { styles, getStyles } = useBreadcrumStyles();\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [visibleItems, setVisibleItems] = useState<IBreadcrumbItem[]>([]);\n    const [overflowItems, setOverflowItems] = useState<IBreadcrumbItem[]>([]);\n  \n    useEffect(() => {\n      const updateVisibleItems = () => {\n        if (!containerRef.current) return;\n  \n        const containerWidth = containerRef.current.offsetWidth;\n        let currentWidth = 0;\n        const visible: IBreadcrumbItem[] = [];\n        const overflow: IBreadcrumbItem[] = [];\n  \n        items.forEach(item => {\n          const estimatedWidth = 80; // Estimate width for each item (adjust if necessary)\n          if (currentWidth + estimatedWidth <= containerWidth - 50) {\n            visible.push(item);\n            currentWidth += estimatedWidth;\n          } else {\n            overflow.push(item);\n          }\n        });\n  \n        setVisibleItems(visible);\n        setOverflowItems(overflow);\n      };\n  \n      const handleResize = debounce(updateVisibleItems, 100);\n  \n      // Set up ResizeObserver\n      const resizeObserver = new ResizeObserver(() => {\n        handleResize();\n      });\n  \n      if (containerRef.current) {\n        resizeObserver.observe(containerRef.current);\n      }\n  \n      // Initial update\n      updateVisibleItems();\n  \n      // Cleanup observer on unmount\n      return () => {\n        resizeObserver.disconnect();\n      };\n    }, [items]);\n  \n    return (\n      \n        <div\n          ref={containerRef}\n          className={mergeClasses(styles.container, className)}\n          style={{ maxWidth, ...customStyles }}\n        >\n          <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"start\">\n            {visibleItems.map((item, index) => {\n              return (\n                <>\n                  {index === currentIndex ? (\n             <Stack\n             horizontal\n             verticalAlign=\"center\"\n             horizontalAlign=\"start\"\n             columnGap={5}\n             styles={{ overflow: 'hidden' }}\n           >\n             {item.icon\n               ? React.cloneElement(item.icon, {\n                   style: { fontSize: size === 'large' ? '20px' : size === 'medium' ? '16px' : '12px' },\n                 })\n               : null}\n             <Text\n               key={item.label}\n               className={mergeClasses(\n                 styles.breadcrumbItem,\n                 getStyles(item, size),\n                 getStyles(item, 'current')\n               )}\n               aria-current=\"page\"\n             >\n               {item.label}\n             </Text>\n           </Stack>\n                  ) : (\n                    <Button\n                      icon={item.icon ? item.icon : null}\n                      key={item.label}\n                      appearance=\"transparent\"\n                      className={`${styles.breadcrumbItem}`}\n                      onClick={item.onClick}\n                    >\n                      <Text className={getStyles(item, size)}>\n                        {item.label}\n                      </Text>\n                    </Button>\n                  )}\n                  {index < visibleItems.length - 1 && (\n                    <ChevronRightRegular\n                      style={{\n                        fontSize:\n                          size === 'large'\n                            ? '20px'\n                            : size === 'medium'\n                            ? '16px'\n                            : '12px',\n                      }}\n                    />\n                  )}\n                </>\n              );\n            })}\n  \n            {overflowItems.length > 0 && (\n              <OverflowMenu items={overflowItems} theme={theme} />\n            )}\n          </Stack>\n        </div>\n    \n    );\n  };\n  \n  export default Breadcrumb;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\nimport { ICenterProps } from './ICenterProps';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useCenterStyles } from './useCenterStyles';\n\nexport const Center: React.FC<React.PropsWithChildren<ICenterProps>> = (props) => {\n  const { className, children } = props;\n\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n  const { centerStyles } = useCenterStyles(props);\n\n  // Debounce utility function\n  const debounce = (func: (...args: any[]) => void, delay: number) => {\n    let timeout: NodeJS.Timeout;\n    return (...args: any[]) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func(...args), delay);\n    };\n  };\n\n  React.useEffect(() => {\n    const handleResize = (entries: any) => {\n      for (const entry of entries) {\n        const { width, height } = entry.contentRect;\n        setWidth(width);\n        setHeight(height);\n      }\n    };\n\n    const debouncedResize = debounce(handleResize, 200);\n\n    const resizeObserver = new ResizeObserver((entries) => {\n      debouncedResize(entries);\n    });\n\n    if (ref.current) {\n      resizeObserver.observe(ref.current);\n    }\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  return (\n    <div\n      id=\"center\"\n      className={className}\n      style={{\n        ...centerStyles(width, height),\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%', // Ensures the container takes up the full height\n        width: '100%',  // Ensures the container takes up the full width\n      }}\n      ref={ref}\n    >\n      {children}\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\nimport {\n  Body1Strong,\n  DataGridBody,\n  DataGridCell,\n  DataGrid as DataGridFUI,\n  DataGridHeader,\n  DataGridHeaderCell,\n  DataGridRow,\n  TableCellLayout,\n  TableColumnDefinition,\n  TableRowId,\n  createTableColumn,\n} from '@fluentui/react-components';\n\nimport { IDataGridProps } from './IDataGridProps';\nimport { ISortState } from './ISortState';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { SkeletonLoading } from './SkeletonLoading';\nimport { debounce } from 'lodash';\nimport { useDataGridStyles } from './useDataGridStyles';\n\n// Generic DataGrid component\nexport const DataGrid = <T,>(props: IDataGridProps<T>): JSX.Element => {\n  const {\n    items,\n    columns,\n    defaultSelectedItems = [],\n    enableSorting = false,\n    selectionMode = \"none\",\n    onSelectionChange,\n    onSortChange,\n    defaultSortState,\n    columnSizingOptions,\n    enableResizing = false,\n    noItemsMessage,\n    isLoadingData,\n    isLoadingDataMessage\n  } = props;\n\n  const getItemIndex = (item: T): number => items.findIndex((i) => i === item);\n  const { dataGridStyles } = useDataGridStyles<T>(props);\n\n  const [selectedItems, setSelectedItems] = React.useState<Set<number>>(\n    new Set(defaultSelectedItems.map((item) => getItemIndex(item)))\n  );\n\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n\n\n  React.useEffect(() => {\n    let resizeObserver: ResizeObserver;\n\n    // Debounced function to handle size updates\n    const handleResize = debounce((entries: any[]) => {\n      for (const entry of entries) {\n        const { width, height } = entry.contentRect;\n        setWidth(width);\n        setHeight(height);\n      }\n    }, 200); // 200ms debounce time, adjust as needed\n\n    if (ref.current) {\n      resizeObserver = new ResizeObserver(handleResize);\n      resizeObserver.observe(ref.current);\n    }\n\n    return () => {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n      handleResize.cancel(); // Cancel any pending debounce calls\n    };\n  }, []);\n\n  \n  React.useEffect(() => {\n    if (defaultSelectedItems.length > 0) {\n      setSelectedItems(new Set(defaultSelectedItems.map((item) => getItemIndex(item))));\n    }\n  }, [defaultSelectedItems, items]);\n\n  // Dynamically create TableColumnDefinition array from ColumnConfig array\n  const tableColumns: TableColumnDefinition<T>[] = columns.map((colConfig) =>\n    createTableColumn<T>({\n      columnId: colConfig.column as string,\n      renderHeaderCell: () => <Body1Strong>{colConfig.header}</Body1Strong>,\n      renderCell: (item) => (\n        <TableCellLayout media={colConfig.media ? colConfig.media(item) : undefined}>\n          {colConfig.onRender ? colConfig.onRender(item) : String(item[colConfig?.column] ?? \"\")}\n        </TableCellLayout>\n      ),\n      compare: colConfig.order,\n    })\n  );\n\n  // Handle selection change\n  const handleSelectionChange = (\n    _e: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>,\n    data: { selectedItems: Set<TableRowId> }\n  ) => {\n    const newSelectedItems = new Set<number>();\n    data.selectedItems.forEach((id) => {\n      const index = Number(id);\n      if (!isNaN(index)) {\n        newSelectedItems.add(index);\n      }\n    });\n    setSelectedItems(newSelectedItems);\n    if (onSelectionChange) {\n      const selectedObjects = Array.from(newSelectedItems).map((index) => items[index]);\n      onSelectionChange(selectedObjects);\n    }\n  };\n\n  // Handle sort change\n  const handleSortChange = (_e: React.MouseEvent<Element>, sortState: ISortState) => {\n    if (onSortChange) {\n      onSortChange(sortState);\n    }\n  };\n\n  const onRowClick = React.useCallback(\n    (e: React.MouseEvent<HTMLTableRowElement>, item: T) => {\n      e.stopPropagation();\n      if (selectionMode === \"row\") {\n        if (onSelectionChange) {\n          onSelectionChange([item]);\n        }\n      }\n    },\n    [selectionMode, onSelectionChange]\n  );\n\n  const styles = React.useMemo(() => dataGridStyles(width, height), [width, height]);\n\n  const rowSelectionStyles = React.useMemo(() => {\n    if (selectionMode === \"row\") {\n      return styles.rowSelection;\n    }\n    return \"\";\n  }, [selectionMode, styles.rowSelection]);\n\n  const RenderDataGridBody = React.useCallback(() => {\n    return (\n      <DataGridBody<T>>\n        {({ item, rowId }) => (\n          <DataGridRow<T>\n            key={rowId}\n            className={rowSelectionStyles}\n            onClick={(e: React.MouseEvent<HTMLTableRowElement>) => onRowClick(e, item)}\n          >\n            {({ renderCell }: { renderCell: (item: T) => React.ReactNode }) => (\n              <DataGridCell>{renderCell(item)}</DataGridCell>\n            )}\n          </DataGridRow>\n        )}\n      </DataGridBody>\n    );\n  }, [onRowClick, rowSelectionStyles]);\n\n  const hasData = React.useMemo(() => items.length && !isLoadingData, [items, isLoadingData]);\n\n  const RenderGridContent = React.useCallback(() => {\n    if (isLoadingData) {\n      return <>{ isLoadingDataMessage ??  <SkeletonLoading />}</>;\n    }\n    if (hasData) {\n      return <RenderDataGridBody />;\n    } else if (!isLoadingData && !items.length) {\n      return <>{noItemsMessage}</>;\n    }  \n    return <></>;\n  }, [hasData, isLoadingData, items, noItemsMessage]);\n\n  return (\n    <div ref={ref} className={styles.datagridStyles} >\n      <DataGridFUI\n        as=\"div\"\n        items={items}\n        onSelectionChange={\n          handleSelectionChange as (\n            e: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>,\n            data: { selectedItems: Set<any> }\n          ) => void\n        }\n        sortable={enableSorting}\n        columns={tableColumns}\n        selectionMode={selectionMode === \"none\" || selectionMode === \"row\" ? undefined : (selectionMode as any)}\n        selectedItems={selectedItems}\n        defaultSortState={defaultSortState}\n        onSortChange={handleSortChange}\n        columnSizingOptions={columnSizingOptions}\n        resizableColumns={enableResizing}\n        resizableColumnsOptions={{ autoFitColumns: false }}\n      >\n        <DataGridHeader>\n          <DataGridRow>\n            {({ renderHeaderCell }) => <DataGridHeaderCell>{renderHeaderCell()}</DataGridHeaderCell>}\n          </DataGridRow>\n        </DataGridHeader>\n        <RenderGridContent />\n       \n      </DataGridFUI>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  Dropdown,\n  Field,\n  Option,\n} from '@fluentui/react-components';\nimport {\n  CheckmarkCircle12Filled,\n  ErrorCircle12Filled,\n  Warning12Filled,\n} from '@fluentui/react-icons';\n\nimport { IDropdownFieldProps } from './IDropDownFieldProps';\nimport { IOption } from './IOption';\n\nexport const DropdownField: React.FC<IDropdownFieldProps> = ({\n  options,\n  onChange,\n  renderItem,\n  validate,\n  label,\n  placeholder,\n  message,\n  messageType,\n  required,\n  size,\n  hint,\n}) => {\n  const [selectedValue, setSelectedValue] = useState<string>(\"\");\n  const [error, setError] = useState<string>(\"\");\n\n  const handleSelectionChange = (_event: React.FormEvent<HTMLButtonElement>, option?: IOption): void => {\n    const value = option?.value || \"\"; // Getting the selected value\n    setSelectedValue(value);\n\n    // Validate the selected value\n    const validationError = validate ? validate(value) : \"\";\n    setError(validationError);\n\n    // Call the onChange callback with the selected value if valid\n    if (!validationError && onChange) {\n      onChange(value);\n    }\n  };\n\n  // Memoize the validation state\n  const validationState = React.useMemo(() => {\n    return error ? \"error\" : messageType === \"warning\" ? \"warning\" : messageType === \"info\" ? \"success\" : \"none\";\n  }, [error, messageType]); // Dependencies for memoization\n\n  // Use the custom message if provided, otherwise use the validation error\n  const validationMessage = React.useMemo(() => error || message, [error, message]); // Dependencies for memoization\n\n  const getValidationIcon = React.useCallback(() => {\n    switch (validationState) {\n      case \"error\":\n        return <ErrorCircle12Filled />;\n      case \"warning\":\n        return <Warning12Filled />;\n      case \"success\":\n        return <CheckmarkCircle12Filled />;\n      default:\n        return null;\n    }\n  }, [validationState]);\n\n  return (\n    <Field\n      label={label}\n      required={required}\n      validationMessage={validationMessage}\n      validationMessageIcon={getValidationIcon()}\n      size={size}\n      hint={hint}\n      validationState={validationState} // Set the validation state\n    >\n      <Dropdown\n        placeholder={placeholder} // Using the placeholder prop here\n        onChange={handleSelectionChange}\n        value={selectedValue}\n      >\n        {options.map((option) => (\n          <Option\n            key={option.value}\n            value={option.value}\n            disabled={option.disabled}\n            checkIcon={option.checkIcon as React.ReactElement}\n            as={option.as} // Pass additional properties to Option\n            text={option.text || \"\"}\n          >\n            {renderItem && renderItem(option)} {/* Render the item using the renderItem function */}\n          </Option>\n        ))}\n      </Dropdown>\n    </Field>\n  );\n};\n","import * as React from 'react';\n\nexport interface ILayoutItemProps {\n    area?: string;\n   \n}\n\nexport const LayoutItem  = (props: React.PropsWithChildren<ILayoutItemProps>):JSX.Element => {\n    const { area, children } = props;\n  return (\n    <>\n        <div style={{gridArea: area, }}>{children}</div>\n    </>\n  );\n};","import * as React from 'react';\n\nimport {\n  Button,\n  Caption1,\n  Subtitle1,\n} from '@fluentui/react-components';\nimport { Dismiss24Regular } from '@fluentui/react-icons';\nimport { Icon } from '@iconify/react';\n\nimport { useRenderHeaderStyles } from './useRenderHeaderStyles';\n\nexport interface IRenderHeaderProps {\n  onDismiss: (open?: boolean) => void;\n  icon?: string | JSX.Element;\n  title: string | React.ReactNode;\n  description?: string | React.ReactNode;\n}\n\nexport const RenderHeader: React.FunctionComponent<IRenderHeaderProps> = (\n  props: React.PropsWithChildren<IRenderHeaderProps>\n) => {\n  const { onDismiss, title, description, icon } = props;\n  const styles = useRenderHeaderStyles();\n\n  return (\n    <>\n      <div className={styles.renderHeaderContent}>\n        <div\n          className={styles.renderHeaderHeader}>\n          <Button\n            appearance=\"subtle\"\n            className={styles.closeButton}\n            onClick={(ev: React.MouseEvent<HTMLButtonElement>) => {\n              ev.stopPropagation();\n              ev.preventDefault();\n              onDismiss(false)}}\n            icon={<Dismiss24Regular />}\n          />\n\n          <div className={styles.renderHeaderTitleContainer}>\n            {React.isValidElement(icon) ? icon : <Icon icon={icon as string} />}\n            <div className={styles.dialogTitleAndDescriptionContainer}>\n              {React.isValidElement(title) ? (\n                title\n              ) : (\n                <Subtitle1 className={styles.renderHeaderTitle}>{title}</Subtitle1>\n              )}\n              {React.isValidElement(description) ? (\n                description\n              ) : (\n                <Caption1 className={styles.renderHeaderDescription}>{description}</Caption1>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className={styles.divider} />\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport { RenderDialog } from '../renderDialog';\n\ninterface IEventData {\n  name: string;\n  command: string;\n  width: number;\n  height: number;\n}\n\ninterface IDialogOptions {\n  siteUrl?: string;\n  listId?: string;\n  itemId?: string | number;\n  name?: string;\n}\n\ninterface ShareDialogProps {\n  isOpen: boolean;\n  options: IDialogOptions;\n  onClose: () => void;\n}\n\nexport const ShareDialog: React.FC<ShareDialogProps> = ({ isOpen, options, onClose }) => {\n  const [dialogUrl, setDialogUrl] = useState<string | undefined>(undefined);\n  console.log(dialogUrl);\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n  const [iFrameHeight, setIFrameHeight] = useState<number>(400);\n\n  const { siteUrl, listId, itemId, name } = options;\n\n  const closeDialog = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const handleIframeMessage = useCallback(\n    (event: MessageEvent) => {\n      if (event.origin !== window.location.origin) return;\n\n      console.log(\"Message from iframe:\", event.data);\n      const { name, height } = JSON.parse(event.data) as IEventData;\n      switch (name) {\n        case \"share_dismiss\":\n          closeDialog();\n          break;\n        case \"share_resize\":\n          setIFrameHeight(height);\n          break;\n        case \"share_scriptsLoaded\":\n          break;\n        case \"share_uiReady\":\n          break;\n        case \"share_ready\":\n          break;\n        default:\n          break;\n      }\n    },\n    [closeDialog]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"message\", handleIframeMessage);\n    return () => {\n      window.removeEventListener(\"message\", handleIframeMessage);\n    };\n  }, [handleIframeMessage]);\n\n  useEffect(() => {\n    if (isOpen) {\n      const clientId = \"sharePoint\";\n      const policyTip = 0;\n      const folderColor = \"\";\n      const clickTime = new Date().getTime();\n      const fullScreenMode = false;\n      const origin = encodeURIComponent(window.location.origin);\n      const encodeName = encodeURIComponent(name as string);\n\n      const url =\n        `${siteUrl}/_layouts/15/sharedialog.aspx` +\n        `?listId=${listId}` +\n        `&listItemId=${itemId}` +\n        `&clientId=${clientId}` +\n        `&policyTip=${policyTip}` +\n        `&folderColor=${folderColor}` +\n        `&clickTime=${clickTime}` +\n        `&ma=0` +\n        `&fullScreenMode=${fullScreenMode}` +\n        `&itemName= ${encodeName}` +\n        `&channelId=` +\n        `&origin=${origin}`;\n        console.log(url);\n      setDialogUrl(url);\n    } else {\n      setDialogUrl(undefined);\n    }\n  }, [isOpen, siteUrl, listId, itemId]);\n\n  return (\n    <RenderDialog isOpen={isOpen} onDismiss={closeDialog} maxHeight={\"fit-content\"}>\n     \n      <iframe\n        ref={iframeRef}\n        src={dialogUrl || \"\"}\n        style={{ width: \"100%\", height: iFrameHeight, border: \"none\" }}\n        onLoad={() => console.log(\"Iframe loaded\")}\n      />\n    </RenderDialog>\n  );\n};\n","import * as React from 'react';\n\nimport {\n  Body1,\n  Body1Strong,\n  tokens,\n} from '@fluentui/react-components';\nimport {\n  CheckmarkCircle32Regular,\n  Info32Regular,\n} from '@fluentui/react-icons';\nimport { Icon } from '@iconify/react';\n\nimport { EMessageType } from '../../constants/EMessageTypes';\nimport { IShowMessageProps } from './IShowMessage';\nimport { useShowMessageStyles } from './useShowMessageStyles';\n\nexport const ShowMessage: React.FunctionComponent<IShowMessageProps> = (\n  props: React.PropsWithChildren<IShowMessageProps>\n) => {\n  const { messageType, children, message } = props;\n  const styles = useShowMessageStyles();\n  const [renderMessageIcon, setRenderMessageIcon] = React.useState<JSX.Element | null>(null);\n\n  const RenderError = React.useCallback(() => {\n    return (\n      <>\n        <div className={styles.errorContainer}>\n          <div className={styles.errorIcon}>\n            <Icon\n              icon=\"fluent:error-circle-12-regular\"\n              width=\"32\"\n              height=\"32\"\n              color={tokens.colorStatusDangerForeground1}\n            />\n          </div>\n          <Body1>{message}</Body1>\n        </div>\n      </>\n    );\n  }, [message, styles.errorContainer, styles.errorIcon]);\n\n  React.useEffect(() => {\n    switch (messageType) {\n      case EMessageType.SUCCESS:\n        setRenderMessageIcon(\n          <CheckmarkCircle32Regular primaryFill={tokens.colorStatusSuccessForeground1} />\n        );\n        break;\n      case EMessageType.INFO:\n        setRenderMessageIcon(<Info32Regular primaryFill={tokens.colorStatusWarningForeground1} />);\n        break;\n      default:\n        break;\n    }\n  }, [messageType]);\n\n  if (messageType === EMessageType.ERROR) {\n    return <RenderError />;\n  }\n\n  return (\n    <>\n      <div className={styles.root}>\n        {renderMessageIcon}\n        <Body1Strong>{message}</Body1Strong>\n        {children}\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport {ResizeObserver} from '@juggle/resize-observer';\nimport { ISpaceProps } from './ISpaceProps';\nimport { useSpaceStyles } from './useSpaceStyles';\n \nexport const Space = (\n  props: React.PropsWithChildren<ISpaceProps>\n) :JSX.Element => {\n  \n\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [width, setWidth] = React.useState(0);\n \n  const {spaceStyles } = useSpaceStyles(props);\n \n  React.useEffect(() => {\n    let resizeObserver:ResizeObserver  ; \n    if (ref.current) {\n      // observer to detect changes in the size of the container \n        resizeObserver = new  ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const { width,   } = entry.contentRect;\n          setWidth(width);\n          \n        }\n      });\n      resizeObserver.observe(ref.current);\n    }\n    return () => {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    }\n  }, []);\n  \n \n  return (\n    <>\n     <div  id=\"-space\"   style={spaceStyles(width, )} ref={ref} >\n       \n      </div>\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\nimport { ResizeObserver } from '@juggle/resize-observer';\n\nimport { IBaseProps } from '../baseComponentProps/IBaseProps';\nimport { useComponentUtils } from '../../utils';\n\nexport interface IStackItemProps extends IBaseProps {\n  grow?: boolean | number;\n  disableShrink?: boolean;\n  shrink?: boolean | number | \"inherit\" | \"initial\" | \"unset\";\n  alignSelf?: \"auto\" | \"flex-start\" | \"flex-end\" | \"center\" | \"baseline\" | \"stretch\";\n  order?: number;\n  verticalFill?: boolean;\n}\n\nexport const StackItem  = (\n  props: React.PropsWithChildren<IStackItemProps>\n) => {\n  const { children, grow, disableShrink, shrink, order, alignSelf, verticalFill } = props;\n  const { getBaseStyles } = useComponentUtils();\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n\n  const baseStyles = getBaseStyles(props, width, height);\n\n  React.useEffect(() => {\n    let resizeObserver: ResizeObserver;\n    if (ref.current) {\n      // observer to detect changes in the size of the container\n      resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const { width, height } = entry.contentRect;\n          setWidth(width);\n          setHeight(height);\n        }\n      });\n      resizeObserver.observe(ref.current);\n    }\n    return () => {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    }\n  }, []);\n\n  const styles: React.CSSProperties = {\n    ...baseStyles,\n    alignSelf: alignSelf,\n    order: order,\n    height: verticalFill ? \"100%\" : \"auto\",\n    flexGrow: grow ? (typeof grow === \"boolean\" ? 1 : grow) : undefined,\n    flexShrink: disableShrink || (!grow && !shrink) ? 0 : 1,\n    minWidth: 0,\n    minHeight: 0,\n    width: \"auto\",\n    \n  };\n\n  return (\n    <>\n      <div ref={ref} style={styles}>\n        {children}\n      </div>\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\n\nimport { IAspectRatioProps } from './IAspectRationProps';\nimport { useComponentUtils } from '../../utils';\n\nexport const useAspectRatioStyles = (props: IAspectRatioProps) => {\n  const { styles } = props;\n\n  const { getBaseStyles } = useComponentUtils();\n  const aspectRatioStyles = React.useCallback(\n    (containerWidth: number, containerHeight: number): React.CSSProperties => {\n     \n      const baseStyles = getBaseStyles(props, containerWidth, containerHeight);\n      return {\n        ...baseStyles,\n        ...styles,\n         \n      };\n    },\n    [getBaseStyles, props, styles]\n  );\n\n  return { aspectRatioStyles };\n};\n","import {\n  formatDistance,\n  formatRelative,\n  Locale,\n} from 'date-fns';\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as date_fns_tz from 'date-fns-tz';\n\nimport { find } from 'lodash';\n\nimport { ITimeZoneMapping } from './ITimeZoneMapping';\nimport { useDateFnsLocales } from './useDateFnsLocales';\n\n// Load static dependency containing JSON mapping of SharePoint time zone and IANA time zone\nimport SpToIanaTimeZoneMapping from \"./SpToIanaTimeZone.json\";\n\nexport const useTimeZoneHelper = () => {\n  const { getLocaleFromCultureName } = useDateFnsLocales();\n\n  /**\n   * Guess browser's time zone using the Internationalization API (Intl.DateTimeFormat().resolvedOptions().timeZone) in supported browsers\n   * @warning It may not be work for legacy browsers.\n   */\n  const guessBrowserTimeZone = (): string | null => {\n    try {\n      return Intl.DateTimeFormat().resolvedOptions().timeZone.toString();\n    } catch (error) {\n      console.error(\n        `[getBrowserTimeZone()] => Could not determine browser's time zone as the Internalization API is not supported by the browser.`\n      );\n      return null;\n    }\n  };\n\n  /**\n   * Get IANA time zone for the corresponding SharePoint time zone\n   */\n  const getIANATimeZone = (spTimeZoneId: number): string => {\n    const tzMapping:any = find(SpToIanaTimeZoneMapping, (tz:ITimeZoneMapping) => tz.ID === spTimeZoneId);\n    const ianaTimeZone = !!tzMapping ? tzMapping.IANATimeZone : null;\n    return ianaTimeZone || \"\"; // Provide a default value in case ianaTimeZone is null\n  };\n\n  const getIANATimeZoneFromOutlookTimeZone = (outlookTimezone: string): string => {\n    const tzMapping:any = find(SpToIanaTimeZoneMapping, (tz:ITimeZoneMapping) => tz.OutlookTimeZone === outlookTimezone);\n    const ianaTimeZone = !!tzMapping ? tzMapping.IANATimeZone : null;\n    return ianaTimeZone || \"\"; // Provide a default value in case ianaTimeZone is null\n  };\n\n  const getTimeZone = (timeZoneId: number | string): string | undefined => {\n    if (typeof timeZoneId === \"number\") {\n      return getIANATimeZone(timeZoneId as number);\n    } else {\n      return getIANATimeZoneFromOutlookTimeZone(timeZoneId as string);\n    }\n  };\n\n  /**\n   * Get a date/time representing local time in a given time zone from the UTC date\n   */\n  const utcToZonedTime = (date: Date | string | number, timeZoneId: number | string): Date => {\n    const timeZone = getTimeZone(timeZoneId);\n    if (!timeZone) {\n      throw Error(\n        `[utcToZonedTime()] => Could not map specified SharePoint time zone with corresponding IANA time zone.`\n      );\n    }\n    return date_fns_tz.utcToZonedTime(date, timeZone);\n  };\n\n  /**\n   * Given a date and any time zone, returns a Date with the equivalent UTC time.\n   */\n  const zonedTimeToUtc = (date: Date | string | number, timeZoneId: number | string): Date => {\n    const timeZone = getTimeZone(timeZoneId);\n    if (!timeZone) {\n      throw Error(\n        `[zonedTimeToUtc()] => Could not map specified SharePoint time zone with corresponding IANA time zone.`\n      );\n    }\n    return date_fns_tz.zonedTimeToUtc(date, timeZone);\n  };\n\n  /**\n   * Formats a date to a string showing time for a specific time zone, which can be different from the system time zone.\n   */\n  const formatUtcToZonedTime = (\n    isoDateString: string,\n    spTimeZoneId: number | string,\n    format: string,\n    cultureName?: string\n  ): string => {\n    const utcDate = new Date(isoDateString);\n    const timeZone = getTimeZone(spTimeZoneId);\n    if (!timeZone) {\n      throw Error(\n        `[formatUtcToZonedTime()] => Could not map specified SharePoint time zone with corresponding IANA time zone.`\n      );\n    }\n    const locale: Locale | null | undefined = !!cultureName ? getLocaleFromCultureName(cultureName) : undefined;\n\n    // To format a date to a string showing time for a specific time zone, which can be different from the system time zone, the format function can be combined with utcToZonedTime.\n    const zonedTime = date_fns_tz.utcToZonedTime(utcDate, timeZone);\n\n    // The format function will never change the underlying date, it must be changed to a zoned time before passing it to format.\n    // Since a zoned time `Date` instance cannot convey the time zone information to the format function it is necessary to pass the same timeZone value as an option on the third argument of format.\n    return date_fns_tz.format(zonedTime, format, { timeZone: timeZone, locale: locale as Locale });\n  };\n\n  const getDateDistanceToNow = (utcDate: string, timeZoneId: number, cultureName?: string, addSufix?: boolean) => {\n    const timeZone = getTimeZone(timeZoneId);\n    if (!timeZone) {\n      throw Error(\n        `[formatUtcToZonedTime()] => Could not map specified SharePoint time zone with corresponding IANA time zone.`\n      );\n    }\n    const zonedTime = date_fns_tz.utcToZonedTime(utcDate, timeZone);\n    const locale: Locale | null | undefined = !!cultureName ? getLocaleFromCultureName(cultureName) : undefined;\n    return formatDistance(zonedTime, new Date(), { addSuffix: addSufix ?? true, locale: locale as Locale });\n  };\n\n  const getFormatRelative = (utcDate: string, timeZoneId: number | string, cultureName?: string) => {\n    const timeZone = getTimeZone(timeZoneId);\n    if (!timeZone) {\n      throw Error(\n        `[getFormatRelative()] => Could not map specified SharePoint time zone with corresponding IANA time zone.`\n      );\n    }\n    const zonedTime = date_fns_tz.utcToZonedTime(utcDate, timeZone);\n    const locale: Locale | null | undefined = !!cultureName ? getLocaleFromCultureName(cultureName) : undefined;\n    return formatRelative(zonedTime, new Date(), { weekStartsOn: 6, locale: locale as Locale });\n  };\n\n  return {\n    guessBrowserTimeZone,\n    utcToZonedTime,\n    zonedTimeToUtc,\n    formatUtcToZonedTime,\n    getDateDistanceToNow,\n    getFormatRelative,\n  };\n};\n"],"names":["EBreakPoints","EMessageType","useDateFnsLocales","localeMapping","en-CA","enCA","en-GB","enGB","en-US","enUS","bg-BG","bg","de-DE","de","es-ES","es","fi-FI","fi","fr-FR","fr","hr-HR","hr","hu-HU","hu","it-IT","it","lt-LT","lt","lv-LV","lv","nl-NL","nl","pl-PL","pl","pt-PT","pt","ro-RO","ro","ru-RU","ru","sl-SI","sl","sk-SK","sk","sr-SR","sr","tr-TR","tr","nl-BE","nlBE","zh-TW","zhTW","zh-CN","zhCN","ca-ES","ca","cs-CZ","cs","da-DK","da","de-CH","el-GR","el","es-ES_tradnl","es-AR","et-EE","et","gl-ES","gl","ja-JP","ja","nb-NO","nb","sv-FI","sv","sv-SE","vi-VN","vi","getLocaleFromCultureName","cultureName","console","error","ECalendarViews","useComponentUtils","getCacheKey","React","key","uniqueId","validateUrl","url","URL","e","trimBeginDoubleSlash","value","charAt","substring","length","isValidGUID","str","regex","RegExp","test","getPageNameFromUrl","urlParts","split","getSPSiteAbsoluteUrl","absolutefileUrl","hostname","window","location","rootSiteUrl","indexOf","webName","webAbsoluteUrl","getFileServerRelativeUrlFromAbsoluteUrl","absoluteFileUrl","fileServerRelativeUrl","encodeRestUrl","query","encodeURIComponent","replace","checkValueBreakPoint","Object","prototype","hasOwnProperty","call","getProperty","obj","toString","toLowerCase","getCurrentDevice","containerWidth","XXXLarge","ExtraExtraLarge","ExtraLarge","Number","Large","Medium","Small","getSpacingBreakPoint","device","newValue","ExtraSmall","getSpacing","type","newType","spacingTokens","padding","vertical","horizontal","tokens","getBaseStyles","baseProps","_containerHeight","verticalSpacing","horizontalSpacing","paddingLeft","paddingRight","paddingBottom","background","width","maxWidth","height","maxHeight","marginLeft","marginRight","marginTop","marginBottom","margin","styles","wpaddingTop","paddingTop","wpaddingLeft","wpaddingRight","wpaddingBottom","wpadding","wmarginLeft","wmarginRight","wmarginTop","wmarginBottom","wmargin","_extends","gap","undefined","overflow","getLayoutBreakPoint","DEBUG","process","env","NODE_ENV","useCardStyles","props","cardStyles","containerHeight","bodyCardDefaultStyles","display","flexDirection","justifyContent","alignItems","Card","className","cardBody","cardBodyClassName","cardHeader","cardHeaderClassName","cardHeaderImage","cardHeaderAction","cardHeaderDescription","cardFooterAction","cardFooterClassName","cardFooterContent","cardPreviewImage","cardPreviewLogo","_props$cardPreviewPos","cardPreviewPosition","_useCardStyles","ref","_React$useState","setWidth","_React$useState2","setHeight","resizeObserver","current","ResizeObserver","entries","_step","_iterator","_createForOfIteratorHelperLoose","done","_entry$contentRect","contentRect","observe","disconnect","CarFUI","style","CardPreview","logo","CardHeader","image","header","description","action","mergeClasses","CardFooter","usePrevNextButtons","emblaApi","_useState","useState","prevBtnDisabled","setPrevBtnDisabled","_useState2","nextBtnDisabled","setNextBtnDisabled","onPrevButtonClick","useCallback","scrollPrev","onNextButtonClick","scrollNext","onSelect","canScrollPrev","canScrollNext","useEffect","on","useCarouselStyles","_props","slideSizeBasedOnWidth","slideSize","getSlideSpacing","deviceSize","slideSpacing","spacingVerticalM","spacingVerticalL","spacingVerticalXL","enableControls","css","embla__viewport","embla__container","backfaceVisibility","touchAction","embla",".embla","embla__slide","minWidth","flex","embla__buttons","gridTemplateColumns","useCarouselStylesMain","carouselStyles","useStyle","makeStyles","titleStyles","textOverflow","-webkit-line-clamp","-webkit-box-orient","textAlign","useCenterStyles","centerStyles","childrenStyles","useGridStyles","cols","gridItemAutoFlow","minItemWidth","_useComponentUtils","gridStyles","baseStyles","wgap","numberCols","Math","min","Grid","children","useLayoutStyles","maxWith","rootStyles","LayoutWidth","LayoutHeight","layoutGridStyles","defaultLayoutConfig","areas","columns","rows","useRenderLabelStyles","labelContainer","shorthands","iconStyles","item","RenderLabel","label","icon","isRequired","Icon","color","colorBrandForeground1","Caption1","colorPaletteRedForeground1","useStyles","root","spinner","useSpaceStyles","spaceStyles","useStackStyles","horizontalAlign","verticalAlign","verticalFill","wrap","columnGap","RowGap","stackStyles","alignValue","justifyValue","wflexFlow","flexFlow","rowGap","Stack","OverflowMenuItem","_ref2","onSelectedItem","useIsOverflowItemVisible","id","MenuItem","onClick","name","OverflowMenu","_ref3","items","theme","_useOverflowMenu","useOverflowMenu","overflowCount","isOverflowing","MoreHorizontal","bundleIcon","MoreHorizontalFilled","MoreHorizontalRegular","IdPrefixProvider","FluentProvider","Menu","MenuTrigger","disableButtonEnhancement","MenuButton","appearance","role","MenuPopover","MenuList","map","SkeletonLoading","Skeleton","SkeletonItem","size","useDataGridStyles","dataGridStyles","datagridStyles","rowSelection",":hover","cursor","_ref","dialog","dialogBody","RenderDialog","isOpen","dialogTitle","dialogActions","minHeight","Dialog","open","modalType","DialogSurface","DialogTitle","DialogBody","DialogContent","DialogActions","fluid","position","useRenderHeaderStyles","closeButton","top","right","zIndex","divider","backgroundColor","colorNeutralStroke1","renderHeaderContent","renderHeaderHeader","renderHeaderFooter","renderHeaderBody","renderHeaderTitleContainer","renderHeaderTitle","wordBreak","renderHeaderDescription","dialogTitleAndDescriptionContainer","useShowMessageStyles","iconClass","errorContainer","colorStatusDangerBackground1","errorIcon","useBreadcrumStyles","container","alignContent","whiteSpace","breadcrumbItem","separator","getStyles","fontSize","fontWeight","fontWeightBold","fontFamily","fontFamilyBase","_ref$size","showDropdown","setShowDropdown","buttonRef","useRef","dropdownRef","left","dropdownStyles","setDropdownStyles","handleOutsideClick","event","_buttonRef$current","contains","target","_dropdownRef$current3","document","addEventListener","removeEventListener","Button","_dropdownRef$current","_dropdownRef$current2","buttonRect","getBoundingClientRect","viewportWidth","innerWidth","viewportHeight","innerHeight","dropdownWidth","offsetWidth","dropdownHeight","offsetHeight","bottom","scrollY","scrollX","prev","createPortal","index","Text","body","banner","fieldContainer","RenderProperty","fieldLabel","fieldValue","Body1","EventDetailsPopover","title","start","end","category","formatedStartDate","format","parseISO","formatedEndDate","Subtitle1","Divider","Badge","log","useCalendarStyles","calendarWrapper","gridTemplateRows","gridAutoRows","dayHeader","borderBottom","day","border","colorNeutralBackground1","otherMonthDay","colorNeutralStroke2","colorNeutralBackground2","cardDay","borderRadius","cardDayOnHover","currentDay","borderTop","colorBrandBackground","currentDayLabel","eventCard","eventContainer","overflowY","::-webkit-scrollbar","::-webkit-scrollbar-track","colorNeutralBackground4","::-webkit-scrollbar-thumb","colorBrandStroke2Hover","::-webkit-scrollbar-thumb:hover","eventCardWeekView","colorNeutralForegroundOnBrand","popoverContent","borderTopWidth","borderTopStyle","applyEventHouverColorClass","houverColor","colorBrandBackgroundHover","useUtils","getSpanSlots","startDate","Date","endDate","startSlot","getHours","getMinutes","endSlot","spanSlots","generateLightAndHoverColors","baseColor","lightnessIncrease","hoverIncrease","hslToHex","h","s","l","a","f","n","k","max","round","padStart","_hexToHsl","hex","r","parseInt","slice","g","b","delta","hexToHsl","lightColor","hoverColor","getEventColors","defaultColors","colorNeutralBackground3","colorNeutralBackground3Hover","meeting","appointment","task","deadline","holiday","celebration","reminder","workshop","webinar","conference","generateColor","hash","i","charCodeAt","c","toUpperCase","RenderEventToDayOfMonth","headerId","useId","events","date","onCardHoverChange","columnHeight","_useCalendarStyles","positioningRef","handleMouseEnter","eventTitle","handleMouseLeave","_positioningRef$curre","setTarget","renderCard","calEvent","colors","onMouseEnter","onMouseLeave","renderCardWithPopOver","Popover","withArrow","mouseLeaveDelay","closeOnScroll","closeOnIframeFocus","openOnHover","PopoverTrigger","PopoverSurface","eventStart","startOfDay","eventEnd","endOfDay","isWithinInterval","customRender","onRenderInMonthView","enableOnHouver","Day","currentMonth","currentDate","isEventHovered","setIsEventHovered","isCurrentDayAndMonth","isSameDay","renderCurrentDayLabel","Body2","toLocaleString","month","handleCardHoverChange","isHovered","useWeekViewStyles","weekGrid","scrollbarWidth","scrollbarColor","&::-webkit-scrollbar","&::-webkit-scrollbar-track","&::-webkit-scrollbar-thumb","&::-webkit-scrollbar-thumb:hover","blankHeader","gridColumn","colorNeutralStroke3","timeColumn","gridRow","borderRight","timeCell","colorNeutralForeground3","fullDayRow","fullDayLabel","fullDayCell","fullDayEvent","dayHeaderCell","todayHeaderCell","pointerEvents","dayCell","FlexDirection","currentTimeIndicator","colorPaletteRedBorderActive","currentHalfHourCell","houveColor","EventPopoverCard","rowHeight","eventIndex","eventCount","_useWeekViewStyles","cardRef","cardContent","Body1Strong","EventRenderer","view","customOnRenderEvent","onRenderInDayView","onRenderInWeekView","useCalendar","initialEvents","timezone","uuidv4","calendarEvents","setCalendarEvents","toLocalDate","dateString","timeZone","getMonthCalendar","year","daysInMonth","getDate","calendarEventsByDay","toISOString","forEach","push","setDate","addEvent","eventWithId","prevEvents","concat","getWeekEvents","weekEvents","_loop","dayTimeSlots","Array","from","_","time","String","floor","fullDayEvents","isFullDay","currentSlot","slotIndex","setMinutes","timeSlots","DayView","dayGrid","calendarRef","_useUtils","Intl","DateTimeFormat","resolvedOptions","renderTimeColumn","hour","renderDayHeaders","dayIndex","addDays","isTodayClass","isToday","weight","renderFullDayEvents","weekDay","dayEvents","find","renderDayCells","timeSlot","_getSpanSlots","SelectCalendarView","onSelected","Month","selectedView","setSelectedView","checkedValues","setCheckedValues","CalendarDayFilled","CalendarDayRegular","MonthView","CalendarMonthFilled","CalendarMonthRegular","WeekView","CalendarWorkWeekFilled","CalendarWorkWeekRegular","_React$useState3","setOpen","viewIcon","Week","getViewLabel","onCheckedValueChange","_e","checkedItems","newView","onOpenChange","data","shape","MenuItemRadio","SelectDay","selectedDate","setSelectedDate","initialDate","selectedLabel","setSelectedLabel","MonthIcon","onSelectDate","zonedDate","utcToZonedTime","Calendar","highlightSelectedMonth","showGoToToday","CalendarMonth","onDateChange","defaultSelectedDate","onDismiss","outlineStyle","_selectedDateRangeArray","dateRangeType","DateRangeType","isDayPickerVisible","allFocusable","SelectMonth","formatWeekLabel","week","startMonth","endMonth","getWeekRange","getDay","SelectWeek","weekRange","selectedWeek","setSelectedWeek","weekLabel","firstDayOfWeek","Toolbar","onSelectedView","setCurrentDate","onWeekChange","onMonthChange","onDayChange","ArrowDown","ArrowDownFilled","ArrowDownRegular","ArrowUp","ArrowUpFilled","ArrowUpRegular","onSelectWeek","onSelectMonth","onSelectDay","handleNavigation","offset","newDate","setMonth","getMonth","Tooltip","content","relationship","CalendarTodayRegular","setRowHeight","weekStart","startOfWeek","weekStartsOn","observer","firstRowCell","querySelector","daysOfWeek","ratio","_ref$style","_objectWithoutPropertiesLoose","_excluded","aspectStyle","_ref$maxWidth","customStyles","_ref$currentIndex","currentIndex","_useBreadcrumStyles","containerRef","visibleItems","setVisibleItems","overflowItems","setOverflowItems","func","timeout","updateVisibleItems","currentWidth","visible","handleResize","args","_len","_key","arguments","clearTimeout","setTimeout","apply","cloneElement","ChevronRightRegular","_props$height","onViewChange","rowHeightRef","_useState3","getCalendarDays","firstDayOfMonth","startOfMonth","relativeDay","handleMonthChange","handleDayChange","handleWeekChange","handleViewChange","getEventsForDay","dateObj","_monthEvents$dayStrin","getFullYear","flatMap","slot","firstDataColumnCell","RenderMonthView","RenderWeekView","RenderDayView","RenderContent","webLightTheme","_useEmblaCarousel","useEmblaCarousel","emblaRef","_useCarouselStyles","_usePrevNextButtons","clientWidth","clientHeight","Subtitle2","disabled","ChevronLeftRegular","debouncedResize","selectedItemId","renderControl","flexWrap","text1LineStyle","WebkitLineClamp","WebkitBoxOrient","button","onItemSelect","itemId","Overflow","isSelected","OverflowItem","priority","_props$defaultSelecte","defaultSelectedItems","_props$enableSorting","enableSorting","_props$selectionMode","selectionMode","onSelectionChange","onSortChange","defaultSortState","columnSizingOptions","_props$enableResizing","enableResizing","noItemsMessage","isLoadingData","isLoadingDataMessage","getItemIndex","findIndex","Set","selectedItems","setSelectedItems","debounce","cancel","tableColumns","colConfig","createTableColumn","columnId","column","renderHeaderCell","renderCell","_item$colConfig$colum","TableCellLayout","media","onRender","compare","order","onRowClick","stopPropagation","rowSelectionStyles","RenderDataGridBody","DataGridBody","DataGridRow","rowId","DataGridCell","hasData","RenderGridContent","DataGridFUI","as","newSelectedItems","isNaN","add","selectedObjects","sortable","sortState","resizableColumns","resizableColumnsOptions","autoFitColumns","DataGridHeader","DataGridHeaderCell","options","onChange","renderItem","validate","placeholder","message","messageType","required","hint","selectedValue","setSelectedValue","setError","validationState","validationMessage","getValidationIcon","ErrorCircle12Filled","Warning12Filled","CheckmarkCircle12Filled","Field","validationMessageIcon","Dropdown","_event","option","validationError","Option","checkIcon","text","keyExtractor","fn","delay","timer","_props$layoutConfig","layoutConfig","_useLayoutStyles","gridTemplateAreas","join","child","_childElement$props$a","_childElement$props","gridArea","area","ev","preventDefault","Dismiss24Regular","labelPosition","Spinner","onClose","dialogUrl","setDialogUrl","iframeRef","iFrameHeight","setIFrameHeight","siteUrl","listId","closeDialog","handleIframeMessage","origin","_JSON$parse","JSON","parse","clickTime","getTime","encodeName","src","onLoad","renderMessageIcon","setRenderMessageIcon","RenderError","colorStatusDangerForeground1","SUCCESS","CheckmarkCircle32Regular","primaryFill","colorStatusSuccessForeground1","INFO","Info32Regular","colorStatusWarningForeground1","ERROR","grow","disableShrink","shrink","alignSelf","flexGrow","flexShrink","aspectRatioStyles","base64FromSVGUrl","_asyncToGenerator","_regeneratorRuntime","mark","_callee","svg64","_context","next","fetch","then","response","btoa","sent","abrupt","stop","_x","getImageBase64","_callee2","pictureUrl","customWidth","customHeight","_context2","Promise","resolve","reject","Image","crossOrigin","base64Str","tempCanvas","createElement","_tempCanvas$getContex","getContext","drawImage","toDataURL","err","_x2","_x3","_x4","isBase64Image","isEmpty","getBase64ImageFromDOMImg","imgElementId","imgElement","getElementById","canvas","ctx","getTimeZone","timeZoneId","spTimeZoneId","tzMapping","SpToIanaTimeZoneMapping","tz","ID","IANATimeZone","outlookTimezone","OutlookTimeZone","getIANATimeZoneFromOutlookTimeZone","guessBrowserTimeZone","Error","date_fns_tz","zonedTimeToUtc","formatUtcToZonedTime","isoDateString","utcDate","locale","zonedTime","getDateDistanceToNow","addSufix","formatDistance","addSuffix","getFormatRelative","formatRelative"],"mappings":"6wQAAYA,ECAAC,ECuCCC,EAAoB,WAC/B,IAAMC,EAA2C,CAE/CC,QAASC,OACTC,QAASC,OAGTC,QAASC,OACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KAETC,QAASC,OACTC,QAASC,OACTC,QAASC,OACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAAS/C,KACTgD,QAASC,KACTC,eAAgBhD,KAChBiD,QAASjD,KACTkD,QAASC,KAETC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASC,KACTC,QAASD,KACTE,QAASC,MAkBX,MAAO,CAAEC,yBAdwB,SAACC,GAChC,OAAMA,EACmB5E,EAAc4E,KAInCC,QAAQC,qFAAqFF,GACtF,MAGF,g9XFlGb,SAAY/E,GACRA,8BACAA,4CACAA,kCACAA,uBACAA,yBACAA,uBACAA,iCAPJ,CAAYA,IAAAA,OCAZ,SAAYC,GACRA,cACAA,gBACAA,oBAHJ,CAAYA,IAAAA,WEAAiF,ECoCCC,EAAoB,WAC/B,IAAMC,EAAcC,eAAkB,SAACC,EAAaC,GAClD,SAAUD,EAAMC,IACf,IAEGC,EAAcH,eAAkB,SAACI,GACrC,IAAKA,EACH,OAAO,EAET,IAEE,QADiB,IAAIC,IAAID,GAEzB,MAAOE,GACP,OAAO,KAER,IAEGC,EAAuB,SAACC,GAC5B,MAAwB,MAApBA,EAAMC,OAAO,IAAkC,MAApBD,EAAMC,OAAO,GACnCD,EAAME,UAAU,EAAGF,EAAMG,QAE3BH,GAKHI,EAAcZ,eAAkB,SAACa,GACrC,IAAMC,EAAQ,IAAIC,OAAO,gEACzB,QAAKF,IAImB,IAApBC,EAAME,KAAKH,KAKd,IAEGI,EAAqBjB,eAAkB,SAACI,GAC5C,IAAKA,EACH,MAAO,GAET,IAAMc,EAAWd,EAAIe,MAAM,KAC3B,OAAOD,EAASA,EAASP,OAAS,KACjC,IAEGS,EAAuBpB,eAAkB,SAACqB,GAC9C,IAAMC,EAAWC,OAAOC,SAASF,SAC3BG,aAAyBH,EAC/B,GACED,EAAgBK,QAAWD,cAAyB,GACpDJ,EAAgBK,QAAWD,cAAyB,EACpD,CACA,IAEME,EAFwBN,EAAgBF,MAAMG,GAAU,GAExBH,MAAM,KAAK,GAE7CS,aAA4BN,YAAkBK,EAIlD,OAHIN,EAAgBK,QAAWD,cAAyB,IACtDG,aAA4BN,YAAkBK,GAEzCC,EAET,OAAOH,IACN,IAEGI,EAA0C7B,eAAkB,SAAC8B,GACjE,IAAIC,EAAwBD,EAAgBX,MAAMI,OAAOC,SAASF,UAAU,GAE5E,OADwBf,EAAqBwB,KAE5C,IAEGC,EAAgBhC,eAAkB,SAACiC,GACvC,OAAOC,mBAAmBD,EAAME,QAAQ,OAAQ,QAC7CA,QAAQ,OAAQ,UAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,SAClB,IAEGC,EAAuBpC,eAAkB,SAAIQ,GACjD,OAAIA,MAAAA,IAEF6B,OAAOC,UAAUC,eAAeC,KAAKhC,EAAO,eAC5C6B,OAAOC,UAAUC,eAAeC,KAAKhC,EAAO,UAC5C6B,OAAOC,UAAUC,eAAeC,KAAKhC,EAAO,WAC5C6B,OAAOC,UAAUC,eAAeC,KAAKhC,EAAO,UAC5C6B,OAAOC,UAAUC,eAAeC,KAAKhC,EAAO,iBAE7C,IAEGiC,EAAczC,eAAkB,SAAuB0C,EAAQzC,GACnE,OAAOyC,EAAIzC,EAAI0C,WAAWC,iBACzB,IAEGC,EAAmB7C,eAAkB,SAAC8C,GAC1C,OAAIA,GAAkBnI,EAAaoI,SAAiB,WAChDD,GAAkBnI,EAAaqI,gBAAwB,kBACzDF,GAAkBnI,EAAasI,WAAmB,aAClDH,GAAkBI,OAAOvI,EAAawI,OAAe,QACrDL,GAAkBI,OAAOvI,EAAayI,QAAgB,SACtDN,GAAkBI,OAAOvI,EAAa0I,OAAe,QAClD,eACJ,IAEGC,EAAuBtD,eAC3B,SAAIQ,EAAmBsC,GACrB,IAAMS,EAASV,EAAiBC,GAU5BU,EAAWhD,EAKf,OAJI4B,EAAwB5B,KAC1BgD,EACGf,EAAyBjC,QAAa+C,EAAAA,EAAsB,WAZrB,CAC1CE,WAAY,KACZJ,MAAO,IACPD,OAAQ,IACRD,MAAO,IACPF,WAAY,KACZD,gBAAiB,OAM+FO,IAE3GC,IAET,CAACX,EAAkBT,EAAsBK,IAIrCiB,EAAa1D,eACjB,SAAIQ,EAAmBsC,EAAwBa,GAC7C,IAAKnD,EAAO,MAAO,OAGnB,GAAqB,iBAAVA,IAAuB,UAAUQ,KAAKR,IAAU,SAASQ,KAAKR,IACvE,OAAOA,EAGT,IAAMoD,EAAUD,EACVE,EAAwC,CAC5CC,QAAS,oBACTC,SAAU,kBACVC,WAAY,qBAKd,OAFiBV,EAAwB9C,EAAOsC,IAG9C,IAAK,OACH,OAAOmB,SAAUJ,EAAcD,WACjC,IAAK,MACH,OAAOK,SAAUJ,EAAcD,UACjC,IAAK,KACH,OAAOK,SAAUJ,EAAcD,SACjC,IAAK,SACH,OAAOK,SAAUJ,EAAcD,aACjC,IAAK,IACH,OAAOK,SAAUJ,EAAcD,QACjC,IAAK,SACH,OAAOK,SAAUJ,EAAcD,aACjC,IAAK,IACH,OAAOK,SAAUJ,EAAcD,QACjC,IAAK,IACH,OAAOK,SAAUJ,EAAcD,QACjC,IAAK,KACH,OAAOK,SAAUJ,EAAcD,SACjC,IAAK,MACH,OAAOK,SAAUJ,EAAcD,UACjC,IAAK,OACH,OAAOK,SAAUJ,EAAcD,WACjC,QACE,OAAOK,SAAUJ,EAAcD,WAGrC,CAACN,IAGGY,EAAgBlE,eAAkB,SAACmE,EAAsBrB,EAAwBsB,GACrF,IACEC,EAkBEF,EAlBFE,gBACAC,EAiBEH,EAjBFG,kBACAC,EAgBEJ,EAhBFI,YACAC,EAeEL,EAfFK,aACAC,EAcEN,EAdFM,cACAC,EAaEP,EAbFO,WACAC,EAYER,EAZFQ,MACAC,EAWET,EAXFS,SACAC,EAUEV,EAVFU,OACAC,EASEX,EATFW,UACAC,EAQEZ,EARFY,WACAC,EAOEb,EAPFa,YACAC,EAMEd,EANFc,UACAC,EAKEf,EALFe,aAEApB,EAGEK,EAHFL,QACAqB,EAEEhB,EAFFgB,OACAC,EACEjB,EADFiB,OAIEC,EAAc3B,EAHdS,EAJFmB,WAO0DxC,EAAgB,WACxEyC,EAAe7B,EAAoBa,EAAuBzB,EAAgB,WAC1E0C,EAAgB9B,EAAoBc,EAAwB1B,EAAgB,WAC5E2C,EAAiB/B,EAAoBe,EAAyB3B,EAAgB,WAC5E4C,EAAWhC,EAAoBI,EAAmBhB,EAAgB,WAEpE6C,EAAcjC,EAAoBqB,EAAsBjC,EAAgB,WACxE8C,EAAelC,EAAoBsB,EAAuBlC,EAAgB,WAC1E+C,EAAanC,EAAoBuB,EAAqBnC,EAAgB,WACtEgD,EAAgBpC,EAAoBwB,EAAwBpC,EAAgB,WAE1EiD,EAAUrC,EAAoByB,EAAkBrC,EAAgB,WAoBtE,OAlBI4C,IACFL,EAAgC,SAAhBA,EAAyBK,EAAWL,EACpDE,EAAiC,SAAlBA,EAA2BG,EAAWH,EACrDC,EAAkC,SAAlBA,EAA2BE,EAAWF,EACtDC,EAAqC,SAApBA,EAA6BC,EAAWD,GAGvDM,IACFJ,EAA+B,SAAjBA,EAA0BI,EAAUJ,EAClDC,EAAiC,SAAlBA,EAA2BG,EAAUH,EACpDC,EAA4B,SAAfA,EAAwBE,EAAUF,EAC/CC,EAAmC,SAAnBA,EAA4BC,EAAUD,GAOxDE,KACKZ,GACHa,IANevC,EAA6BW,EAA2BvB,EAAgB,gBACzEY,EAA+BY,EAA6BxB,EAAgB,cAM1FwC,WAAYD,EACZd,YAAagB,EACbf,aAAcgB,EACdf,cAAegB,EACfV,WAAYY,EACZX,YAAaY,EACbX,UAAWY,EACXX,aAAcY,EACdpB,WAAYA,EACZC,YAAOA,EAAAA,OAASuB,EAChBrB,aAAQA,EAAAA,OAAUqB,EAClBtB,eAAUA,EAAAA,OAAYsB,EACtBpB,gBAAWA,EAAAA,OAAaoB,EACxBC,SAAU,WAGX,CAACzC,IAGE0C,EAAsBpG,eAC1B,SAAIQ,EAAmBsC,GACrB,IAAMS,EAASV,EAAiBC,GAC5BU,EAAWhD,EAKf,OAJI4B,EAAwB5B,KAC1BgD,EACGf,EAAwBjC,QAAa+C,EAAAA,EAAsB,WAAqC,IAE9FC,IAET,CAACX,EAAkBT,EAAsBK,IAG3C,MAAO,CACL1C,YAAAA,EACAI,YAAAA,EACAI,qBAAAA,EACAK,YAAAA,EACAK,mBAAAA,EACAG,qBAAAA,EACAS,wCAAAA,EACAG,cAAAA,EACA0B,WAAAA,EACAb,iBAAAA,EACAqB,cAAAA,EACAkC,oBAAAA,ICzTEC,EAAiC,eAAzBC,QAAQC,IAAIC,SCGbC,EAAgB,SAACC,GAC5B,IAAQtB,EAAWsB,EAAXtB,OACAlB,EAAkBpE,IAAlBoE,cAwBR,MAAO,CAAEyC,WAtBU3G,eACjB,SAAC8C,EAAwB8D,GAEvB,OAAAZ,KADmB9B,EAAcwC,EAAO5D,EAAgB8D,GAGnDxB,KAIP,CAAClB,EAAewC,EAAOtB,IAaJyB,sBAV8B7G,WAAc,WAC/D,MAAO,CACL8G,QAAS,OACTC,cAAe,SACfC,eAAgB,QAChBC,WAAY,UACZd,SAAU,WAEX,MCfQe,EAAO,SAACR,GACnB,IACES,EAcET,EAdFS,UACAC,EAaEV,EAbFU,SACAC,EAYEX,EAZFW,kBACAC,EAWEZ,EAXFY,WACAC,EAUEb,EAVFa,oBACAC,EASEd,EATFc,gBACAC,EAQEf,EARFe,iBACAC,EAOEhB,EAPFgB,sBACAC,EAMEjB,EANFiB,iBACAC,EAKElB,EALFkB,oBACAC,EAIEnB,EAJFmB,kBACAC,EAGEpB,EAHFoB,iBACAC,EAEErB,EAFFqB,gBAAeC,EAEbtB,EADFuB,oBAAAA,WAAmBD,EAAG,MAAKA,EAE7BE,EAA8CzB,EAAcC,GAApDC,EAAUuB,EAAVvB,WAAYE,EAAqBqB,EAArBrB,sBACdsB,EAAMnI,SAA6B,MAEzCoI,EAA0BpI,WAAe,GAAlC2E,EAAKyD,KAAEC,EAAQD,KACtBE,EAA4BtI,WAAe,GAApC6E,EAAMyD,KAAEC,EAASD,KAqBxB,OAnBAtI,aAAgB,WACd,IAAIwI,EAYJ,OAXIL,EAAIM,UAEND,EAAiB,IAAIE,kBAAe,SAACC,GACnC,QAA2BC,EAA3BC,EAAAC,EAAoBH,KAAOC,EAAAC,KAAAE,MAAE,CAAA,IAC3BC,EADcJ,EAAApI,MACkByI,YAAjBpE,EAAMmE,EAANnE,OACfwD,EADaW,EAALrE,OAER4D,EAAU1D,QAGCqE,QAAQf,EAAIM,SAEtB,WACDD,GACFA,EAAeW,gBAGlB,IAEDnJ,gCACEA,uBAAKmI,IAAKA,GACRnI,gBAACoJ,sBAAOjC,UAAWA,EAAWkC,MAAO1C,EAAWhC,EAAOE,IAAa6B,GACjEoB,GAA4C,QAAxBG,GACnBjI,gBAACsJ,eAAYC,KAAMxB,GAAkBD,OAEtCR,GACCtH,gBAACwJ,cACCrC,UAAWI,EACXkC,MAAOjC,EACPkC,OAAQpC,EACRqC,YAAajC,EACbkC,OAAQnC,IAGXK,GAA4C,gBAAxBG,GACnBjI,gBAACsJ,eAAYC,KAAMxB,GAAkBD,OAEtCV,GACCpH,uBAAKmH,UAAW0C,eAAaxC,GAAoBgC,MAAOxC,GACrDO,GAGJU,GAA4C,WAAxBG,GACnBjI,gBAACsJ,eAAYC,KAAMxB,GAAkBD,OAEtCD,GACC7H,gBAAC8J,cAAWF,OAAQjC,EAAkBR,UAAWS,GAC9CC,OCvEAkC,EAAqB,SAChCC,GAEA,IAAAC,EAA8CC,YAAS,GAAhDC,EAAeF,KAAEG,EAAkBH,KAC1CI,EAA8CH,YAAS,GAAhDI,EAAeD,KAAEE,EAAkBF,KAEpCG,EAAoBC,eAAY,WAC/BT,GACLA,EAASU,eACR,CAACV,IAEEW,EAAoBF,eAAY,WAC/BT,GACLA,EAASY,eACR,CAACZ,IAEEa,EAAWJ,eAAY,SAACT,GAC5BI,GAAoBJ,EAASc,iBAC7BP,GAAoBP,EAASe,mBAC5B,IAUH,OARAC,aAAU,WACHhB,IAELa,EAASb,GACTA,EAASiB,GAAG,SAAUJ,GACtBb,EAASiB,GAAG,SAAUJ,MACrB,CAACb,EAAUa,IAEP,CACLV,gBAAAA,EACAG,gBAAAA,EACAE,kBAAAA,EACAG,kBAAAA,ICpCOO,EAAoB,SAACC,EAAwBrI,GACxD,IAAQD,EAAqB/C,IAArB+C,iBAEFuI,EAAwBpL,eAAkB,WAC9C,IACIqL,EAAY,MAChB,OAFmBxI,EAAiBC,IAGlC,IAAK,SACHuI,EAAY,MACZ,MACF,IAAK,QACHA,EAAY,gBACZ,MACF,IAAK,aACHA,EAAY,gBACZ,MACF,QACEA,EAAY,MAGhB,OAAOA,IACN,CAACvI,EAAgBD,IAEdyI,EAAkBtL,eAAkB,WACxC,IAAMuL,EAAa1I,EAAiBC,GAEhC0I,EAAgBvH,SAAOwH,iBAE3B,OAAQF,GACN,IAAK,SACHC,EAAgBvH,SAAOwH,iBACvB,MACF,IAAK,QACHD,EAAgBvH,SAAOyH,iBACvB,MACA,IAAK,aACLF,EAAgBvH,SAAO0H,kBACvB,MACF,QACEH,EAAgBvH,SAAOwH,iBAG3B,OAAOD,IACN,CAAC1I,EAAgBD,IAyCpB,MAAO,CAAE+I,eAvCcC,MAAI,CACzB/E,QAAS,OACTE,eAAgB,gBAChBC,WAAY,UACZhB,IAAK,GACLnC,QAAS,IAkCcgI,gBA/BDD,MAAI,CAC1B1F,SAAU,SACVb,WAAY,OACZb,cAAe,SA4ByBsH,iBAzBjBF,MAAI,CAC3BG,mBAAoB,SACpBlF,QAAS,OACTmF,YAAa,UAsB6CC,MAlB9CL,MAAI,CAChBM,SAAU,KAiBuDC,aAd9CP,MAAI,CACvBQ,SAAU,EACVC,YAAalB,IACb7G,eAAgB+G,MAW+DiB,eAR5DV,MAAI,CACvB/E,QAAS,OACT0F,oBAAqB,iBACrBvG,IAAK,EACLgB,WAAY,aCrFHwF,EAAwB,SAAC/F,GACpC,IAAQtB,EAAWsB,EAAXtB,OAEAlB,EAAkBpE,IAAlBoE,cAYR,MAAO,CAAEwI,eAXc1M,eACrB,SAAC8C,EAAwB8D,GAEvB,OAAAZ,KADmB9B,EAAcwC,EAAO5D,EAAgB8D,GAGnDxB,KAGP,CAAClB,EAAewC,EAAOtB,MCErBuH,EAAWC,aAAW,CAC1BC,YAAY,CACV/F,QAAS,cACRX,SAAW,SACZ2G,aAAc,WACdC,qBAAsB,IACtBC,qBAAsB,WACtBC,UAAW,QACXpI,OAAQ,UCrBCqI,EAAkB,SAACxG,GAC9B,IAAQtB,EAAWsB,EAAXtB,OAEAlB,EAAkBpE,IAAlBoE,cA0BR,MAAO,CAAEiJ,aAzBYnN,eACnB,SAAC8C,EAAwB8D,GAGvB,OAAAZ,KADmB9B,EAAcwC,EAAO5D,EAAgB8D,GAGnDxB,GACFe,SAAU,SACXW,QAAS,OAETE,eAAgB,SAChBC,WAAY,SACZtC,MAAO,OACPE,OAAQ,WAIZ,CAACX,EAAewC,EAAOtB,IAQFgI,eALAvB,MAAI,CACzB7E,eAAgB,SAChBiG,UAAW,aC1BFI,EAAgB,SAAC3G,GAC5B,IAAQ4G,EAAqF5G,EAArF4G,KAAMjJ,EAA+EqC,EAA/ErC,gBAAiBC,EAA8DoC,EAA9DpC,kBAAmBc,EAA2CsB,EAA3CtB,OAAQmI,EAAmC7G,EAAnC6G,iBAAkBC,EAAiB9G,EAAjB8G,aAC5EC,EAAwD3N,IAAhD4D,EAAU+J,EAAV/J,WAAYb,EAAgB4K,EAAhB5K,iBAAkBqB,EAAauJ,EAAbvJ,cAuDtC,MAAO,CAAEwJ,WArDU1N,eACjB,SAAC8C,EAAwB8D,GACvB,IAAM+G,EAAazJ,EAAcwC,EAAO5D,EAAgB8D,GAGlDgH,EAFUlK,EAA6BW,EAA2BvB,EAAgB,gBACxEY,EAA+BY,EAA6BxB,EAAgB,cAEtFS,EAASV,EAAiBC,GAC5B0J,wBAAqCe,EAAAA,EAAoB,2BAAkBC,EAAAA,EAAgB,iBAC/F,GAAIF,GAAQA,EAAO,EAAG,CACpB,IAAIO,QAAaP,EAAAA,EAAQ,EACzB,OAAQ/J,GACN,IAAK,aACHsK,EAAaC,KAAKC,IAAIT,EAAM,GAC5B,MACF,IAAK,QACHO,EAAaC,KAAKC,IAAIT,EAAM,GAC5B,MACF,IAAK,SACHO,EAAaC,KAAKC,IAAIT,EAAM,GAC5B,MACF,IAAK,QAGL,IAAK,aACHO,EAAaC,KAAKC,IAAIT,EAAM,GAC5B,MACF,IAAK,kBACHO,EAAaC,KAAKC,IAAIT,EAAM,GAC5B,MACF,IAAK,WACHO,EAAaC,KAAKC,IAAIT,EAAM,GAC5B,MACF,QACEO,EAAa,EAEjBrB,YAAgCqB,0BAGlC,OAAA7H,KACK2H,GACH7G,QAAS,OACT0F,oBAAqBA,EACrBvG,IAAK2H,EAGLzH,SAAU,UAEPf,KAGP,CAAClB,EAAewC,EAAOhD,EAAYW,EAAiBC,EAAmBzB,EAAkByK,EAAMlI,EAAQmI,EAAkBC,MCvDhHQ,EAAQ,SACnBtH,GAEA,IAAQuH,EAAwBvH,EAAxBuH,SAAU9G,EAAcT,EAAdS,UACVuG,EAAeL,EAAc3G,GAA7BgH,WACFvF,EAAMnI,SAA6B,MAEzCoI,EAA0BpI,WAAe,GAAlC2E,EAAKyD,KAAEC,EAAQD,KACtBE,EAA4BtI,WAAe,GAApC6E,EAAMyD,KAAEC,EAASD,KAqBxB,OAnBAtI,aAAgB,WACd,IAAIwI,EAYJ,OAXIL,EAAIM,UAEJD,EAAiB,IAAIE,kBAAe,SAACC,GACrC,QAA2BC,EAA3BC,EAAAC,EAAoBH,KAAOC,EAAAC,KAAAE,MAAE,CAAA,IAC3BC,EADcJ,EAAApI,MACkByI,YAAjBpE,EAAMmE,EAANnE,OACfwD,EADaW,EAALrE,OAER4D,EAAU1D,QAGCqE,QAAQf,EAAIM,SAEtB,WACDD,GACFA,EAAeW,gBAGlB,IAEDnJ,gCACEA,uBAAKmH,UAAWA,EAAWkC,MAAOqE,EAAW/I,EAAOE,GAASsD,IAAKA,GAC/D8F,KC/BIC,EAAkB,SAACxH,GAC9B,IAAQyH,EAAczH,EAAdyH,QACAjK,EAAkBpE,IAAlBoE,cAeR,MAAO,CACLkK,WAdiBpO,eACjB,SAACqO,EAAqBC,GAAoB,OAAAtI,KACrC9B,EAAcwC,EAAO2H,EAAaC,IACrC1J,SAAUuJ,MAEZ,CAACjK,EAAeiK,EAASzH,IAUzB6H,iBAPuB1C,MAAI,CAC3B/E,QAAS,OACTX,SAAU,aCZRqI,EAAqC,CACzCC,MAAO,CAAC,uBAAwB,0BAA2B,wBAC3DC,QAAS,cACTC,KAAM,iBCNKC,EAAuBhC,aAAW,CAE7CiC,eAAc7I,GACZc,QAAS,OACTC,cAAe,MACfC,eAAgB,aAChBC,WAAY,UACT6H,aAAW7I,IAAI,QAEpB8I,WAAY,CACVpK,MAAO,QAETqK,KAAM,CACJzK,YAAa,UCNJ0K,EAA0D,SAACvI,GACtE,IAAQwI,EAA4BxI,EAA5BwI,MAAOC,EAAqBzI,EAArByI,KAAMC,EAAe1I,EAAf0I,WACfhK,EAASwJ,IACf,OACE5O,gCACEA,uBAAKmH,UAAW/B,EAAOyJ,gBACpBM,GAAQnP,iBAAqBmP,GAC5BA,EAEAnP,gBAACqP,QACCF,KAAMA,EACNhI,UAAW/B,EAAO2J,WAClBpK,MAAO,OACPE,OAAQ,OACRyK,MAAOrL,SAAOsL,wBAGlBvP,gBAACwP,YAASnG,MAAO,CAAEiG,MAAOrL,SAAOsL,wBAA0BL,GAC3DlP,gBAACwP,YAASnG,MAAO,CAAEiG,MAAOrL,SAAOwL,6BAA+BL,EAAa,KAAO,OCxBtFM,EAAY9C,aAAW,CAC3B+C,KAAM,CACJ7I,QAAS,OACTE,eAAgB,SAChBC,WAAY,SAEZpC,OAAQ,OACRF,MAAO,QAETiL,QAAS,CACPjL,MAAO,QACPE,OAAQ,WCTCgL,EAAiB,SAACnJ,GAC7B,IAAQrC,EAAuCqC,EAAvCrC,gBAAiBC,EAAsBoC,EAAtBpC,kBACjBZ,EAAe5D,IAAf4D,WAwBR,MAAO,CAAEoM,YAvBW9P,eAClB,SAAC8C,GACC,OAAKA,EAIDwB,EAEK,CACNK,MAFajB,EAA+BY,EAA6BxB,EAAgB,eAKxFuB,EAEK,CACLQ,OAFanB,EAA6BW,EAA2BvB,EAAgB,aAKlF,GAhBsB,KAkB/B,CAACY,EAAYY,EAAmBD,MC1BvB0L,EAAiB,SAACrJ,GAC7B,IAAQ1C,EAAsF0C,EAAtF1C,WAAYgM,EAA0EtJ,EAA1EsJ,gBAAiBC,EAAyDvJ,EAAzDuJ,cAAeC,EAA0CxJ,EAA1CwJ,aAAcC,EAA4BzJ,EAA5ByJ,KAAMC,EAAsB1J,EAAtB0J,UAAWC,EAAW3J,EAAX2J,OAC3EnM,EAAkBpE,IAAlBoE,cA6BR,MAAO,CAAEoM,YA3BWtQ,eAClB,SAAC8C,EAAwB8D,GACvB,IAAM2J,EAAcN,GAAiB,QAC/BO,EAAexM,EAAagM,EAAkB,QAE9CS,EAA6CzM,EAC/C,CAAE0M,SAAUP,EAAO,WAAa,aAActL,OAAQ,QACtD,CAAEA,OAAQ,OAAQC,UAAW,QAE3B6I,EAAazJ,EAAcwC,EAAO5D,EAAgB8D,GAExD,OAAAZ,GACEoK,UAAWA,EACXO,OAAQN,EACRvJ,QAAS,OACTC,cAAe/C,EAAa,MAAQ,SACpCiD,WAAYsJ,EACZvJ,eAAgBwJ,GACbC,GACH5L,OAAQqL,EAAe,OAASvC,EAAW9I,QACxC8I,EACAjH,EAAMtB,UAGb,CAAClB,EAAeF,EAAYgM,EAAiBtJ,EAAOuJ,EAAeC,EAAcC,MC7BxES,EAAS,SACpBlK,GAEA,IAAQuH,EAA0BvH,EAA1BuH,SAAU9G,EAAgBT,EAAhBS,UACVmJ,EAAgBP,EAAerJ,GAA/B4J,YACFnI,EAAMnI,SAA6B,MACzCoI,EAA0BpI,WAAe,GAAlC2E,EAAKyD,KAAEC,EAAQD,KACtBE,EAA4BtI,WAAe,GAApC6E,EAAMyD,KAAEC,EAASD,KAsBxB,OAnBAtI,aAAgB,WACd,IAAIwI,EAYJ,OAXIL,EAAIM,UAEJD,EAAiB,IAAIE,kBAAe,SAACC,GACrC,QAA2BC,EAA3BC,EAAAC,EAAoBH,KAAOC,EAAAC,KAAAE,MAAE,CAAA,IAC3BC,EADcJ,EAAApI,MACkByI,YAAjBpE,EAAMmE,EAANnE,OACfwD,EADaW,EAALrE,OAER4D,EAAU1D,QAGCqE,QAAQf,EAAIM,SAEtB,WACDD,GACFA,EAAeW,gBAGlB,IAEDnJ,gCACEA,uBAAKmH,UAAWA,EAAWkC,MAAOiH,EAAY3L,EAAOE,GAASsD,IAAKA,GAChE8F,KCyEH4C,EAA8G,SAA9FC,OACpB9B,EAAI8B,EAAJ9B,KACA+B,EAAcD,EAAdC,eAGA,OADkBC,2BAAyBhC,EAAKiC,IAEvC,KAIPjR,gBAACkR,YAASjR,IAAK+O,EAAKiC,GAAI9B,KAAMH,EAAKG,KAAMgC,QAAS,WAAF,OAAQJ,EAAe/B,EAAKiC,MAC1EjR,2BAAMgP,EAAKoC,QAKXC,EAA4G,SAAhGC,OAChBC,EAAKD,EAALC,MACAR,EAAcO,EAAdP,eACAS,EAAKF,EAALE,MAEAC,EAA8CC,oBAAtCvJ,EAAGsJ,EAAHtJ,IAAKwJ,EAAaF,EAAbE,cAAeC,EAAaH,EAAbG,cACtBC,EAAiB7R,WAAc,WAAA,OAAM8R,aAAWC,uBAAsBC,2BAAwB,IAEpG,OAAKJ,EAKH5R,gBAACiS,oBAAiBzR,MAAM,cACtBR,gBAACkS,kBAAeV,MAAOA,GAErBxR,gBAACmS,YACCnS,gBAACoS,eAAYC,6BACXrS,gBAACsS,cACCC,WAAW,cACXpK,IAAKA,EACLgH,KAAMnP,gBAAC6R,qBACQF,kBACfa,KAAK,YAGTxS,gBAACyS,mBACCzS,gBAAC0S,gBACEnB,EAAMoB,KAAI,SAAC3D,GAAI,OACdhP,gBAAC6Q,GAAiB5Q,IAAK+O,EAAKiC,GAAIjC,KAAMA,EAAM+B,eAAgBA,YApBjE,MC9HE6B,EAA4B,WACvC,OACE5S,gBAAC6S,gBACA7S,gBAACgO,GAAKV,KAAM,EAAGxJ,QAAS,IAAKO,gBAAiB,IAAKC,kBAAmB,KACnEtE,gBAAC8S,gBAAaC,KAAM,KACpB/S,gBAAC8S,gBAAaC,KAAM,KACpB/S,gBAAC8S,gBAAaC,KAAM,KACpB/S,gBAAC8S,gBAAaC,KAAM,KACpB/S,gBAAC8S,gBAAaC,KAAM,KACpB/S,gBAAC8S,gBAAaC,KAAM,KACpB/S,gBAAC8S,gBAAaC,KAAM,KACpB/S,gBAAC8S,gBAAaC,KAAM,KACpB/S,gBAAC8S,gBAAaC,KAAM,QCbfC,EAAoB,SAAKtM,GACpC,IAAQtB,EAAWsB,EAAXtB,OACAlB,EAAkBpE,IAAlBoE,cAuBR,MAAO,CAAE+O,eArBcjT,eACrB,SAAC8C,EAAwB8D,GACvB,IAAM+G,EAAazJ,EAAcwC,EAAO5D,EAAgB8D,GACxD,MAAO,CACLsM,eAAgBrH,MAAG7F,KACd2H,EACAvI,IAGL+N,aAActH,MAAI,CAChBuH,SAAU,CACRC,OAAQ,gBAKhB,CAACnP,EAAewC,EAAOtB,MCPrByL,EAAmB,SAAHyC,OAAUrF,EAAQqF,EAARrF,SAG9B,OAFkB+C,2BADUsC,EAAFrC,IAIjB,KAGFjR,gBAACkR,gBAAUjD,ICCdyB,EAAY9C,aAAW,CAC3B2G,OAAQ,CACN5O,MAAO,OACPE,OAAQ,OACRsB,SAAU,SACVrB,UAAW,QACXhB,QAAS,GAEX0P,WAAY,CACV3O,OAAQ,wBAIC4O,GAA4D,SACvE/M,GAEA,IAAQgN,EAAsGhN,EAAtGgN,OAAQC,EAA8FjN,EAA9FiN,YAAaC,EAAiFlN,EAAjFkN,cAAe3F,EAAkEvH,EAAlEuH,SAAUrJ,EAAwD8B,EAAxD9B,SAAUuC,EAA8CT,EAA9CS,UAAW0M,EAAmCnN,EAAnCmN,UAAWxH,EAAwB3F,EAAxB2F,SAAUvH,EAAc4B,EAAd5B,UAC1FM,EAASsK,IACf,OAAKgE,EAEH1T,gBAAC8T,UAAOC,KAAML,EAAQM,UAAU,SAC9BhU,gBAACiU,iBACC9M,UAAW0C,eAAazE,EAAOmO,OAAQpM,GACvCkC,MAAO,CACLzE,SAAUA,EACVyH,eAAUA,EAAAA,EA7BM,IA8BhBwH,gBAAWA,EAAAA,EA5BM,IA6BjBhP,OAAQ,cACRC,gBAAWA,EAAAA,EAAa,KAG1B9E,gBAACkU,mBAAaP,GACd3T,gBAACmU,cAAWhN,UAAW/B,EAAOoO,YAC5BxT,gBAACoU,qBAAenG,IAElBjO,gBAACqU,iBAAcC,SAAMC,SAAS,OAC3BX,KAlBW5T,kCC1CTwU,GAAwB5H,aAAW,CAC9C6H,YAAa,CACX1P,WAAY,OACZwP,SAAU,WACVG,IAAK,OACLC,MAAO,OACPC,OAAQ,OAGVC,QAAS,CACPlQ,MAAO,OACPE,OAAQ,MACRiQ,gBAAiB7Q,SAAO8Q,oBACxB9P,UAAW,OAGb+P,oBAAqB,CACnBlO,QAAS,OACTC,cAAe,SACfC,eAAgB,aAChBC,WAAY,UAEZtC,MAAO,QAETsQ,mBAAkBjP,GAGhBc,QAAS,OACTC,cAAe,SACfC,eAAgB,cACb8H,aAAWhL,QAAQ,SACtBmC,IAAK,SAEPiP,mBAAkBlP,GAChBc,QAAS,OACTC,cAAe,MACfC,eAAgB,cACb8H,aAAWhL,QAAQ,SACtBmC,IAAK,SAEPkP,iBAAgBnP,GACdc,QAAS,OACTC,cAAe,SACfC,eAAgB,cACb8H,aAAWhL,QAAQ,SACtBmC,IAAK,SAEPmP,2BAA4B,CAC1BtO,QAAS,OACTC,cAAe,MACfC,eAAgB,aAChBC,WAAY,UAEdoO,kBAAmB,CACjBvO,QAAS,cACTiG,qBAAsB,IACtBC,qBAAsB,WAEtBC,UAAW,QACXH,aAAc,WACdxH,WAAY,OACZgQ,UAAW,cAEbC,wBAAyB,CACvBzO,QAAS,cACTiG,qBAAsB,IACtBC,qBAAsB,WAEtBC,UAAW,QACXH,aAAc,WACdwI,UAAW,cAEbE,mCAAoC,CAClC1O,QAAS,OACTC,cAAe,SACfC,eAAgB,QAChBC,WAAY,QACZ1C,YAAa,OACbC,aAAc,UC7ELiR,GAAuB7I,aAAW,CAC7C+C,KAAI3J,GACFc,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UACT6H,aAAWhL,QAAQ,SACtBmC,IAAK,SAEPyP,UAAW,CACT/Q,MAAO,OACPE,OAAQ,QAEV8Q,eAAc3P,GACZc,QAAS,OACTC,cAAe,MACfC,eAAgB,QAChBC,WAAY,SACbhB,IAAK,QACD6I,aAAWhL,QAAQ,SACtBgR,gBAAiB7Q,SAAO2R,+BAE1BC,UAAW,CACThR,OAAQ,UC1BCiR,GAAqB,WAkEhC,MAAO,CAAE1Q,OAjEM,CACb2Q,UAAWlK,MAAI,CACb/E,QAAS,OACTG,WAAY,SACZ+O,aAAc,SACd7P,SAAU,SACV8P,WAAY,SACZnS,QAAS,MACTgR,gBAAiB,gBAEnBoB,eAAgBrK,MAAI,CAClBQ,SAAU,cACVvI,QAAS,EACTqB,OAAQ,QAEVgR,UAAWtK,MAAI,CACb7G,YAAa,SAiDAoR,UA9CC,SAChB1P,EACAqM,GAEA,IAAQ5D,EAASzI,EAATyI,KACR,OAAQ4D,GACN,IAAK,QACH,OAAOlH,MAAI,CACTwK,SAAU,OACVvS,QAAS,MACTS,YAAa4K,EAAO,MAAQ,QAEhC,IAAK,SACH,OAAOtD,MAAI,CACTwK,SAAU,OACVvS,QAAS,MACTS,YAAa4K,EAAO,MAAQ,QAEhC,IAAK,QACH,OAAOtD,MAAI,CACTwK,SAAU,OACVvS,QAAS,MACTS,YAAa4K,EAAO,MAAQ,QAEhC,IAAK,UACH,OAAOtD,MAAI,CACTyK,WAAYrS,SAAOsS,eACnBlD,OAAQ,UACRvM,QAAS,cACTiG,qBAAsB,IACtBC,qBAAsB,WACtB7G,SAAU,SACV8G,UAAW,QACXH,aAAc,WACdwI,UAAW,aACXkB,WAAYvS,SAAOwS,iBAGvB,QACE,OAAO5K,MAAI,CACTwK,SAAU,OACVvS,QAAS,MACTS,YAAa4K,EAAO,MAAQ,YC9CvBkC,GAA4C,SAAhCiC,OAAmC/B,EAAK+B,EAAL/B,MAAOC,EAAK8B,EAAL9B,MAAKkF,EAAApD,EAAGP,KAAAA,WAAI2D,EAAC,SAAQA,EACtFzM,EAAwCC,YAAS,GAA1CyM,EAAY1M,KAAE2M,EAAe3M,KAC9B4M,EAAYC,SAA0B,MACtCC,EAAcD,SAAuB,MAC3CzM,EAA4CH,WAA8B,CACxEwK,IAAK,EACLsC,KAAM,EACNzC,SAAU,aAHL0C,EAAc5M,KAAE6M,EAAiB7M,KAMhC+L,EAAaN,KAAbM,UAmDR,OAjBApL,aAAU,WACR,IAAMmM,EAAqB,SAACC,kBAExBC,EAACR,EAAUpO,UAAV4O,EAAmBC,SAASF,EAAMG,gBACnCC,EAACT,EAAYtO,UAAZ+O,EAAqBF,SAASF,EAAMG,UACrCZ,GAEAC,GAAgB,IAKpB,OADAa,SAASC,iBAAiB,YAAaP,GAChC,WACLM,SAASE,oBAAoB,YAAaR,MAE3C,CAACR,IAGF3W,gCACEA,gBAAC4X,UACCzP,IAAK0O,EACL1H,KAAMnP,gBAACgS,8BACPO,WAAW,cACXpB,QAvDoB,WACxB,GAAI0F,EAAUpO,QAAS,CAAA,IAAAoP,EAAAC,EACfC,EAAalB,EAAUpO,QAAQuP,wBAC/BC,EAAgB1W,OAAO2W,WACvBC,EAAiB5W,OAAO6W,YAExBC,UAAgBR,EAAAd,EAAYtO,gBAAZoP,EAAqBS,cAAe,IACpDC,UAAiBT,EAAAf,EAAYtO,gBAAZqP,EAAqBU,eAAgB,IAExD9D,EAAMqD,EAAWU,OAASlX,OAAOmX,QACjC1B,EAAOe,EAAWf,KAAOzV,OAAOoX,QAGhC3B,EAAOqB,EAAgBJ,IACzBjB,EAAOiB,EAAgBI,EAAgB,IAIrC3D,EAAM6D,EAAiBJ,IACzBzD,EAAMqD,EAAWrD,IAAMnT,OAAOmX,QAAUH,GAG1CrB,EAAkB,CAChBxC,IAAAA,EACAsC,KAAAA,EACAzC,SAAU,aAGZqC,GAAgB,SAACgC,GAAI,OAAMA,SA6B1BjC,GACCkC,eACE7Y,gBAACkS,kBAAeV,MAAOA,GACrBxR,gBAACkH,QACCiB,IAAK4O,EACL1N,MAAKrD,KACAiR,GACHrC,OAAQ,IACR9Q,QAAS,MACTuI,SAAU,WAGXkF,EAAMoB,KAAI,SAAC3D,EAAM8J,GAAK,OACrB9Y,gBAAC4X,UACDzI,KAAMH,EAAKG,KAAOH,EAAKG,KAAO,KAC5BlP,gBAAiB6Y,EACjBvG,WAAW,cACXpB,QAAS,iBACPnC,EAAKmC,SAALnC,EAAKmC,UACLyF,GAAgB,KAGnB5W,gBAAC+Y,QAAK5R,UAAWiP,EAAUpH,EAAM+D,IAAQ/D,EAAKE,aAKrDuI,SAASuB,+DC7FftJ,GAAY,SAACvE,GAajB,MAAO,CAAE/F,OAZM,CACb6T,OAAQpN,MAAI,CACV/E,QAAS,OACTE,eAAgB,SAChBgP,aAAc,SACd/O,WAAY,SACZnD,8BAEFoV,eAAgBrN,MAAI,CAClBtH,YAAa,QAMb4U,GAID,SAJe7F,OAIZ8F,EAAU9F,EAAV8F,WAAYC,EAAU/F,EAAV+F,WAAYlK,EAAImE,EAAJnE,KACtB/J,EAAWsK,KAAXtK,OACR,OACEpF,gBAAC4Q,OACC5Q,gBAACiP,GAAYC,MAAOkK,EAAYjK,KAAMA,IACtCnP,uBAAKmH,UAAW/B,EAAO8T,gBACrBlZ,gBAACsZ,aAAOD,UAMHE,GAET,SAAC7S,GACH,IAAQ0Q,EAAY1Q,EAAZ0Q,MACAoC,EAA0CpC,EAA1CoC,MAAOC,EAAmCrC,EAAnCqC,MAAOC,EAA4BtC,EAA5BsC,IAAKlY,EAAuB4V,EAAvB5V,SAAUmY,EAAavC,EAAbuC,SAE7BvU,EAAWsK,KAAXtK,OACFwU,EAAoBC,SAAOC,WAASL,GAAQ,OAC5CM,EAAkBF,SAAOC,WAASJ,GAAM,OAE9C,OACE1Z,gCACEA,gBAACkH,GACCqL,WAAW,SACXzO,QAAQ,IACRwB,WAAY,IACZX,MAAM,QACNyC,SACEpH,gBAAC4Q,GAAMP,OAAQ,IACbrQ,uBAAKmH,UAAW/B,EAAO6T,QACrBjZ,gBAACga,iBAAWR,IAEdxZ,gBAACia,gBACDja,gBAAC4Q,GAAM5M,cAAWgM,gBAAgB,MAAMrL,MAAO,QAC7C3E,gBAACka,SAAM3H,WAAW,UAAUoH,IAE9B3Z,gBAACmZ,IACCC,WAAW,QACXC,WAAYO,EACZzK,KAAM,uBAERnP,gBAACmZ,IACCC,WAAW,MACXC,WAAYU,EACZ5K,KAAM,uBAERnP,gBAACmZ,IACCC,WAAW,WACXC,WAAY7X,EACZ2N,KAAM,4BAIZtH,kBACE7H,gBAAC4Q,GAAM5M,cAAWgM,gBAAgB,MAAMrL,MAAM,QAC5C3E,gBAAC4X,UAAOrF,WAAW,SAASpB,QAAS,WAAQxR,QAAQwa,IAAI,kCC3FxDC,GAAoB,SAACjP,GAwHhC,MAAO,CAAE/F,OAvHM,CACbiV,gBAAiBxO,MAAI,CACnB/H,QAAS,OACTwB,WAAY,OACZa,SAAU,OACVmG,KAAM,EACNxF,QAAS,OACT0F,oBAAqB,iBACrB8N,iBAAkB,OAClBC,aAAc,qBACdtU,IAAK,MACLtB,MAAO,sBAET+E,OAAQmC,MAAI,CACV/E,QAAS,OACTE,eAAgB,QAChBf,IAAK,OACLgB,WAAY,SACZnD,QAAS,SAEX0W,UAAW3O,MAAI,CACboB,UAAW,QACXnJ,QAAS,MACT2W,0BAA2BxW,SAAO8Q,sBAEpC2F,IAAK7O,MAAI,CACP/E,QAAS,OACTC,cAAe,SACfE,WAAY,SACZD,eAAgB,SAChB2T,oBAAqB1W,SAAO8Q,oBAC5BD,gBAAiB7Q,SAAO2W,wBACxBrG,SAAU,aAEZsG,cAAehP,MAAI,CACjByD,MAAOrL,SAAO6W,oBACdhG,gBAAiB7Q,SAAO8W,0BAE1BC,QAASnP,MAAI,CACXhH,OAAQ,OACRgP,UAAW,IACXoH,aAAc,EACd9U,SAAU,sBAEZ+U,eAAgBrP,MAAI,CAClBuH,SAAU,CACR0B,gBAAiB7Q,SAAO8W,2BAI5BI,WAAYtP,MAAI,CACduP,uBAAwBnX,SAAOoX,uBAEjCC,gBAAiBzP,MAAI,CACnByD,MAAOrL,SAAOoX,qBACd/E,WAAY,MAEdiF,UAAW1P,MAAI,CAEb/E,QAAS,OACTC,cAAe,SACfE,WAAY,aAEZ2N,OAAQ,IAEV4G,eAAgB3P,MAAI,CAClB/E,QAAS,OACTC,cAAe,SACf0U,UAAW,OACXnW,WAAY,MACZb,cAAe,MACfF,YAAa,MACbC,aAAc,MAEdkX,sBAAuB,CACrB/W,MAAO,MACPE,OAAQ,OAEV8W,4BAA6B,CAC3BjX,WAAYT,SAAO2X,wBACnBX,aAAc,QAEhBY,4BAA6B,CAC3BnX,WAAYT,SAAO6X,uBACnBb,aAAc,QAEhBc,kCAAmC,CACjCrX,WAAYT,SAAO6W,uBAGvBkB,kBAAmBnQ,MAAI,CACrBiJ,gBAAiB7Q,SAAOoX,qBACxB/L,MAAOrL,SAAOgY,8BACdhB,aAAc,MACdnX,QAAS,MACTqB,OAAQ,MACRgB,SAAU,SACV2G,aAAc,WACdmJ,WAAY,SACZpR,OAAQ,SAEVqX,eAAgBrQ,MAAI,CAClB/H,QAAS,EACTqY,eAAgB,GAChBC,eAAgB,WAeHC,2BAZkB,SACjCvH,EACAwH,GAEA,OAAOzQ,MAAI,CACTiJ,sBAAiBA,EAAAA,EAAmB7Q,SAAOoX,qBAC3CjI,SAAU,CACR0B,sBAAiBwH,EAAAA,EAAerY,SAAOsY,gCCtHlCC,GAAW,WAoHtB,MAAO,CAAEC,aAnHYzc,eAAkB,SAACyZ,EAAaC,GACnD,IAAMgD,EAAY,IAAIC,KAAKlD,GACrBmD,EAAU,IAAID,KAAKjD,GAKnBmD,EAAwB,EAFZH,EAAUI,YACRJ,EAAUK,cACoB,EAAI,EAAI,GAGpDC,EAAoB,EAFVJ,EAAQE,YACNF,EAAQG,cACkB,EAAI,EAAI,GAGpD,MAAO,CAAEE,UADSD,EAAUH,EACRA,UAAAA,EAAWG,QAAAA,KAC9B,IAqGoBE,4BApGald,eAClC,SACEmd,EACAC,EACAC,YADAD,IAAAA,EAA4B,aAC5BC,IAAAA,EAAwB,IAGxB,IAiCMC,EAAW,SAACC,EAAWC,EAAWC,GACtC,IAAMC,EAAKF,EAAI1P,KAAKC,IAAI0P,EAAG,IAAMA,GAAM,IACjCE,EAAI,SAACC,GACT,IAAMC,GAAKD,EAAIL,EAAI,IAAM,GACnBjO,EAAQmO,EAAIC,EAAI5P,KAAKgQ,IAAIhQ,KAAKC,IAAI8P,EAAI,EAAG,EAAIA,EAAG,IAAK,GAC3D,OAAO/P,KAAKiQ,MAAM,IAAMzO,GACrB3M,SAAS,IACTqb,SAAS,EAAG,MAEjB,UAAWL,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAI7BM,EA9CiB,SAACC,GAChB,IAAMC,EAAIC,SAASF,EAAIG,MAAM,EAAG,GAAI,IAAM,IACpCC,EAAIF,SAASF,EAAIG,MAAM,EAAG,GAAI,IAAM,IACpCE,EAAIH,SAASF,EAAIG,MAAM,EAAG,GAAI,IAAM,IAEpCP,EAAMhQ,KAAKgQ,IAAIK,EAAGG,EAAGC,GACrBxQ,EAAMD,KAAKC,IAAIoQ,EAAGG,EAAGC,GACrBC,EAAQV,EAAM/P,EAEhBwP,EAAI,EACJC,EAAI,EACFC,GAAKK,EAAM/P,GAAO,EAExB,GAAc,IAAVyQ,EAAa,CAEf,OADAhB,EAAIC,EAAI,GAAMe,GAAS,EAAIV,EAAM/P,GAAOyQ,GAASV,EAAM/P,GAC/C+P,GACN,KAAKK,EACHZ,GAAKe,EAAIC,GAAKC,GAASF,EAAIC,EAAI,EAAI,GACnC,MACF,KAAKD,EACHf,GAAKgB,EAAIJ,GAAKK,EAAQ,EACtB,MACF,KAAKD,EACHhB,GAAKY,EAAIG,GAAKE,EAAQ,EAG1BjB,GAAK,EAGP,MAAO,CAAEA,EAAO,IAAJA,EAASC,EAAO,IAAJA,EAASC,EAAO,IAAJA,GAiBlBgB,CAAStB,GAArBI,EAACU,EAADV,EAAGC,EAACS,EAADT,EAAGC,EAACQ,EAADR,EAMd,MAAO,CAAEiB,WAHUpB,EAASC,EAAGC,EAAG1P,KAAKC,IAAI0P,EAAIL,EAAmB,MAG7CuB,WAFFrB,EAASC,EAAGC,EAAG1P,KAAKC,IAAI0P,EAAIJ,EAAe,SAIhE,IAuCkDuB,eApC7B5e,eAAkB,SAAC2Z,GAExC,IAcMkF,EAA8B,CAClC/J,gBAAgB7Q,SAAO6a,wBACvBH,WAAY1a,SAAO8a,8BAIrB,MApB+C,CAC7CC,QAAS,CAAElK,gBAAiB,UAAW6J,WAAY,WACnDM,YAAa,CAAEnK,gBAAiB,UAAW6J,WAAY,WACvDO,KAAM,CAAEpK,gBAAiB,UAAW6J,WAAY,WAChDQ,SAAU,CAAErK,gBAAiB,UAAW6J,WAAY,WACpDS,QAAS,CAAEtK,gBAAiB,UAAW6J,WAAY,WACnDU,YAAa,CAAEvK,gBAAiB,UAAW6J,WAAY,WACvDW,SAAU,CAAExK,gBAAiB,UAAW6J,WAAY,WACpDY,SAAU,CAAEzK,gBAAiB,UAAW6J,WAAY,WACpDa,QAAS,CAAE1K,gBAAiB,UAAW6J,WAAY,WACnDc,WAAY,CAAE3K,gBAAiB,UAAW6J,WAAY,YAUxChF,EAAS/W,gBAAkBic,IAC1C,IAaiEa,cAX9C1f,eAAkB,SAACa,GAEvC,IADA,IAAI8e,EAAO,EACFC,EAAI,EAAGA,EAAI/e,EAAIF,OAAQif,IAC9BD,EAAO9e,EAAIgf,WAAWD,KAAOD,GAAQ,GAAKA,GAE5C,IAAMG,GAAY,SAAPH,GAAmBhd,SAAS,IAAIod,cAE3C,WAAW,QAAQrf,UAAU,EAAG,EAAIof,EAAEnf,QAAUmf,KAC/C,MC1FQE,GAET,SAACtZ,GACH,IAAMuZ,EAAWC,UACTC,EAAkDzZ,EAAlDyZ,OAAQC,EAA0C1Z,EAA1C0Z,KAAMC,EAAoC3Z,EAApC2Z,kBAAmBC,EAAiB5Z,EAAjB4Z,aACzCC,EAA+CnG,KAAvChV,EAAMmb,EAANnb,OAAQiX,EAA0BkE,EAA1BlE,2BAIVmE,EAAiBxgB,SAAuC,MACtD4e,EAAmBpC,KAAnBoC,eAEF6B,EAAmB,SAACC,GACpBL,GACFA,GAAkB,EAAMK,IAItBC,EAAmB3gB,eACvB,SAAC0gB,GACKL,GACFA,GAAkB,EAAOK,KAG7B,CAACL,IAIGxJ,EAAY7W,eAChB,SAACvB,gBACCmiB,EAAAJ,EAAe/X,UAAfmY,EAAwBC,UAAUpiB,KAEpC,CAAC+hB,IAIGM,EAAa9gB,eACjB,SAAC8Y,EAAeiI,EAAkBC,GAChC,OACEhhB,uBAAKmI,IAAK0O,GACR7W,gBAACkH,GACCjH,IAAK6Y,EACL3R,UAAW0C,eACTzE,EAAOmW,UACPc,EACE2E,EAAOlM,gBACPkM,EAAOrC,aAGXrZ,WAAW,MACXb,cAAc,MACdF,YAAY,MACZC,aAAa,MACbS,UAAqB,IAAV6T,EAAc,MAAQ,MACjCxR,WAAYtH,gBAACwP,gBAAUuR,EAASvH,OAChCyH,aAAc,WAAF,OAAQR,EAAiBM,EAASvH,QAC9C0H,aAAc,WAAF,OAAQP,EAAiBI,EAASvH,aAKtD,CAACiH,EAAkBE,EAAkBtE,IAGjC8E,EAAwBnhB,eAC5B,SAAC+gB,EAAkBjI,EAAekI,GAChC,OACEhhB,gCACEA,gBAACohB,WAECC,aACAphB,IAAK6Y,EACLwI,gBAAiB,GACjBC,eAAe,EACfC,oBAAoB,EACpBC,gBAEAzhB,gBAAC0hB,sBACEZ,EAAWhI,EAAOiI,EAAUC,IAE/BhhB,gBAAC2hB,oCACkB1B,EACjB9Y,UAAW0C,eACTzE,EAAO8W,eACPG,EACE2E,EAAOlM,gBACPkM,EAAOrC,cAIX3e,gBAACuZ,IAAoBnC,MAAO2J,SAMtC,CAACD,IAGH,OAGE9gB,gCAHGmgB,SAAWA,GAAAA,EAAQxf,OAIpBX,uBAAKqJ,MAAO,CAAExE,OAAQyb,GAAgBnZ,UAAW/B,EAAOoW,gBACrD2E,EAAOxN,KAAI,SAACoO,EAAUjI,GACrB,IAAM8I,EAAaC,aAAW,IAAIlF,KAAKoE,EAAStH,QAC1CqI,EAAWC,WAAS,IAAIpF,KAAKoE,EAASrH,MAO5C,IALqBsI,mBAAiB5B,EAAM,CAC1C3G,MAAOmI,EACPlI,IAAKoI,IAGY,OAAO,KAC1B,IAAMd,EAASpC,EAAemC,EAASpH,UACjCsI,EAAelB,EAASmB,oBAE9B,OAAIliB,iBAAqBiiB,GAChBjiB,eAAmBiiB,EAAoC,CAC5D9a,UAAW0C,eACRoY,EAAavb,MAAcS,UAC5B/B,EAAOmW,aAINwF,EAASoB,eACZhB,EAAsBJ,EAAUjI,EAAOkI,GACvCF,EAAWhI,EAAOiI,EAAUC,aCzI7BoB,GAA0C,SACrD1b,GAEA,IAAQgU,EAAkDhU,EAAlDgU,IAAK2H,EAA6C3b,EAA7C2b,aAAclC,EAA+BzZ,EAA/ByZ,OAAQC,EAAuB1Z,EAAvB0Z,KAAME,EAAiB5Z,EAAjB4Z,aACjClb,EAAWgV,KAAXhV,OACFkd,EAAc,IAAI3F,KACxBvU,EAA4CpI,YAAe,GAApDuiB,EAAcna,KAAEoa,EAAiBpa,KAElCqa,EAAuBziB,WAAc,WACzC,OAAO0iB,YAAUtC,EAAMkC,KACtB,CAAClC,EAAMkC,IAEJK,EAAwB3iB,WAAc,WAC1C,OACEA,gBAAC4Q,GACC5M,cACAgM,gBAAgB,QAChBC,cAAc,SACdI,OAAQ,IAERrQ,gBAAC4iB,SAAMzb,UAAW/B,EAAOkW,iBACtBZ,MAAM4H,EAAYO,eAAe,UAAW,CAAEC,MAAO,cAI3D,CAACpI,IAEEqI,EAAwB/iB,eAC5B,SAACgjB,GACCR,EAAkBQ,KAEpB,IAGF,OACEhjB,gCACEA,gBAACkH,GACCC,UAAW0C,eACTzE,EAAO4V,QACPqH,EAAe,GAAKjd,EAAOyV,cAC3B4H,EAAuBrd,EAAO+V,WAAa,GAC1CoH,EAAyC,GAAxBnd,EAAO8V,gBAE3B5T,WACEmb,EAAuBE,EAAwB3iB,gBAAC4iB,aAAOlI,GAEzD5W,QAAQ,SACRsD,SACEpH,gBAACggB,IACCG,OAAQA,EACRC,KAAMA,EACNC,kBAAmB0C,EACnBzC,aAAcA,EAAe,SCnE5B2C,GAAoB,WAwMhC,MAAO,CAAC7d,OAtMQ,CACb2Q,UAAWlK,MAAI,CACb/E,QAAS,OACTC,cAAe,SACfpC,MAAO,oBACPE,OAAQ,QACRsB,SAAU,SACVrC,QAAS,SAEX4F,OAAQmC,MAAI,CACV/E,QAAS,OACTE,eAAgB,gBAChBC,WAAY,SACZ/B,aAAc,OACduV,0BAA2BxW,SAAO8Q,sBAEpCmO,SAAUrX,MAAI,CACZ/E,QAAS,OACT0F,oBAAqB,sBACrB8N,iBAAkB,6BAClBzV,OAAQ,cACR4W,UAAW,OACXd,oBAAqB1W,SAAO8Q,oBAC5BjQ,UAAW,sBACXqe,eAAgB,OAChBC,eAAmBnf,SAAOoX,yBAAwBpX,SAAO2W,wBACzDyI,uBAAwB,CACtB1e,MAAO,OAET2e,6BAA8B,CAC5B5e,WAAYT,SAAO2W,yBAErB2I,6BAA8B,CAC5B7e,WAAYT,SAAOoX,qBACnBJ,aAAc,OAEhBuI,mCAAoC,CAClC9e,WAAYT,SAAOsY,6BAGvBkH,YAAa5X,MAAI,CACf6X,WAAY,IACZ5O,gBAAiB7Q,SAAO6a,wBACxBrE,0BAA2BxW,SAAO0f,sBAEpCC,WAAY/X,MAAI,CACd6X,WAAY,IACZG,QAAS,cACT/c,QAAS,OACTC,cAAe,SACf+N,gBAAiB7Q,SAAO2W,wBACxBkJ,yBAA0B7f,SAAO8Q,sBAEnCgP,SAAUlY,MAAI,CACZhH,OAAQ,OACRiC,QAAS,OACTG,WAAY,SACZoP,SAAU,OACV/G,MAAOrL,SAAO+f,wBACdvJ,0BAA2BxW,SAAO8Q,oBAClC/N,eAAgB,WAElBid,WAAYpY,MAAI,CACdgY,QAAS,IACT/c,QAAS,OACT0F,oBAAqB,sBACrBvG,IAAK,IACLnC,QAAS,IACTgR,gBAAiB7Q,SAAO8W,wBACxBN,0BAA2BxW,SAAO6W,sBAEpCoJ,aAAcrY,MAAI,CAChB6X,WAAY,IACZ5c,QAAS,OACTG,WAAY,SACZD,eAAgB,SAChBgP,aAAc,SACd1G,MAAOrL,SAAOoX,qBACdvX,QAAS,MACTggB,yBAA0B7f,SAAO8Q,oBACjC0F,0BAA2BxW,SAAO6W,sBAEpCqJ,YAAatY,MAAI,CACfiY,yBAA0B7f,SAAO8Q,oBACjCjO,QAAS,OACTC,cAAe,MACfd,IAAK,MACLnC,QAAS,MACT2W,0BAA2BxW,SAAO6W,oBAClC3U,SAAU,WAEZie,aAAcvY,MAAI,CAChBS,KAAM,WACND,SAAU,OACVxH,OAAQ,OACRf,QAAS,UACTgR,gBAAiB7Q,SAAOoX,qBACxB/L,MAAOrL,SAAOgY,8BACdhB,aAAc,MACd9U,SAAU,SAEVW,QAAS,OACTG,WAAY,SACZD,eAAgB,WAElBqd,cAAexY,MAAI,CACjBoB,UAAW,SACX6H,gBAAiB7Q,SAAO8W,wBACxBjX,QAAS,MACTwS,WAAY,OACZmE,0BAA2BxW,SAAO8Q,sBAEpCuP,gBAAiBzY,MAAI,CACnBuP,uBAAwBnX,SAAOoX,uBAEjCE,UAAW1P,MAAI,CACd/H,QAAQ,EACPmD,WAAY,SACZD,eAAgB,SAChBhC,YAAa,MACb4P,OAAQ,EACRL,SAAU,WACVyB,aAAc,SACd7P,SAAU,SACViN,SAAU,CACRmR,cAAe,OACflR,OAAQ,aAIZ+D,MAAOvL,MAAI,CACThH,OAAQ,OACRiQ,gBAAiB7Q,SAAOoX,qBACxB/L,MAAOrL,SAAOgY,8BACdhB,aAAc,MACdnO,aAAc,WACdmJ,WAAY,SACZ9P,SAAU,SACVW,QAAS,OACTG,WAAY,SACZD,eAAgB,SAChBhC,YAAa,MACb4P,OAAQ,EACRL,SAAU,WACVyB,aAAc,SACd5C,SAAU,CACRmR,cAAe,OACflR,OAAQ,aAIZmR,QAAS3Y,MAAI,CACX4O,0BAA2BxW,SAAO8Q,oBAClC+O,yBAA0B7f,SAAO8Q,oBACjCR,SAAU,WACVpO,SAAU,UACVse,cAAe,SACfxe,IAAK,QAGPye,qBAAsB7Y,MAAI,CACxB0I,SAAU,WACVyC,KAAM,EACNnS,OAAQ,MACRiQ,gBAAiB7Q,SAAO0gB,4BACxBhgB,MAAO,OACPiQ,OAAQ,IAEVgQ,oBAAqB/Y,MAAI,CACvB8O,oBAAqB1W,SAAO0gB,8BAE9BjE,WAAY7U,MAAI,CACd/E,QAAS,cACTiG,qBAAsB,IACtBC,qBAAsB,WACtBC,UAAW,QACXH,aAAc,WACdvI,YAAa,MACb+Q,UAAW,aACTnP,SAAU,WAEZ+V,eAAgBrQ,MAAI,CACpB/H,QAAS,EACTqY,eAAgB,GAChBC,eAAgB,WAcLC,2BAToB,SAACvH,EAAwB+P,GAC1D,OAAOhZ,MAAI,CACTiJ,sBAAgBA,EAAAA,EAAmB7Q,SAAOoX,qBAC1CjI,SAAU,CACR0B,sBAAgB+P,EAAAA,EAAc5gB,SAAOsY,gCCzKhCuI,GAAoD,SAApCxR,OAC3B8D,EAAK9D,EAAL8D,MACA4J,EAAM1N,EAAN0N,OACA/D,EAAS3J,EAAT2J,UACA8H,EAASzR,EAATyR,UACAC,EAAU1R,EAAV0R,WACAC,EAAU3R,EAAV2R,WAEMhF,EAAWC,UACjBgF,EAA+CjC,KAAvC7d,EAAM8f,EAAN9f,OAAQiX,EAA0B6I,EAA1B7I,2BACV8I,EAAUnlB,SAA6B,MAEvColB,EAAcplB,WAClB,WAAA,OACEA,2BACEA,gBAAC4Q,GAAMR,UAAW,EAAGH,cAAc,UACjCjQ,gBAACqlB,eAAYle,UAAW/B,EAAOsb,YAAatJ,EAAMoC,OAClDxZ,gBAAC4Q,GACCR,UAAW,EACXpM,cACAiM,cAAc,SACdD,gBAAgB,SAEhBhQ,gBAACsZ,aAAOO,SAAO,IAAI8C,KAAKvF,EAAMqC,OAAQ,cACrC,MACDzZ,gBAACsZ,aAAOO,SAAO,IAAI8C,KAAKvF,EAAMsC,KAAM,mBAK5C,CAACtC,IAGH,OACEpX,gBAACkH,QACCiB,IAAKgd,EACLllB,IAAKmX,EAAMnG,GACX9J,UAAW0C,eACTzE,EAAOmW,UACPc,EAA2B2E,EAAOlM,gBAAiBkM,EAAOrC,aAE5DtV,MAAO,CACLiD,wBAAyB2Y,MACzBpgB,OAAWkgB,EAAY9H,OACvBjG,KAAsB,GAAbgO,MACTrgB,eAAe,IAAmB,GAAbqgB,cACrB7f,OAAQ,IAGTiS,EAAM+K,eACLniB,gBAACohB,WACCC,aACAC,gBAAiB,GACjBC,eAAe,EACfC,oBAAoB,EACpBC,gBAEAzhB,gBAAC0hB,sBAAgB0D,GACjBplB,gBAAC2hB,oCACkB1B,EACjB9Y,UAAW0C,eACTzE,EAAO8W,eACPG,EACE2E,EAAOlM,gBACPkM,EAAOrC,cAIX3e,gBAACuZ,IAAoBnC,MAAOA,MAIhCgO,IClFKE,GAA+C,SAAlChS,OACxB8D,EAAK9D,EAAL8D,MACA6N,EAAU3R,EAAV2R,WACAhI,EAAS3J,EAAT2J,UACA8H,EAASzR,EAATyR,UACAC,EAAU1R,EAAV0R,WACAO,EAAIjS,EAAJiS,KAEQngB,EAAW6d,KAAX7d,OAEF4b,GAASpC,EADYpC,KAAnBoC,gBACsBxH,EAAMuC,UAG9B6L,EAAsBxlB,eAAkB,WAC5C,MAAgB,QAATulB,EAAiBnO,EAAMqO,kBAAoBrO,EAAMsO,qBACvD,CAACtO,EAAOmO,IAEX,OAAIvlB,iBAAqBwlB,GAChBxlB,eAAmBwlB,EAA2C,CACnEpO,MAAAA,EACAjQ,UAAW0C,eACR2b,EAAoB9e,MAAcS,UACnC/B,EAAOmW,WAETlS,MAAKrD,KACCwf,EAAoB9e,MAAc2C,OACtCiD,wBAAyB2Y,MACzBpgB,OAAWkgB,EAAY9H,OACvBjG,KAAsB,GAAbgO,MACTrgB,eAAe,IAAmB,GAAbqgB,cACrB7f,OAAQ,MAQRnF,gBAAC8kB,IACC7kB,IAAKmX,EAAMnG,GACXmG,MAAOA,EACP4J,OAAQA,EACR/D,UAAWA,EACX8H,UAAWA,EACXC,WAAYA,EACZC,WAAYA,KC3CTU,GAAc,SAACC,EAAyBC,GAEnD,IAOA5b,EAA4CC,YACnB0b,GAAiB,IAP1BjT,KAAI,SAACyE,GAAK,OAAApR,KACnBoR,GACHnG,GAAImG,EAAMnG,IAAM6U,aAIbC,EAAc9b,KAAE+b,EAAiB/b,KAKlCgc,EAAc,SAACC,GACnB,OAAO,IAAIvJ,KACT,IAAIA,KAAKuJ,GAAYrD,oBAAe3c,EAAW,CAAEigB,SAAUN,MAuH/D,MAAO,CACLO,iBAnHuB,SACvBC,EACAvD,GAOA,IALA,IAAMwD,EAAc,IAAI3J,KAAK0J,EAAMvD,EAAQ,EAAG,GAAGyD,UAE3CC,EAAgD,GAG7C9L,EAAM,EAAGA,GAAO4L,EAAa5L,IAAO,CAC3C,IACMwL,EADO,IAAIvJ,KAAK0J,EAAMvD,EAAOpI,GACX+L,cAActlB,MAAM,KAAK,GACjDqlB,EAAoBN,GAAc,GAuBpC,OAnBAH,EAAeW,SAAQ,SAACtP,GAMtB,IALA,IAAMwK,EAAaqE,EAAY7O,EAAMqC,OAC/BqI,EAAWmE,EAAY7O,EAAMsC,KAE7B4I,EAAc,IAAI3F,KAAKiF,GAEtBU,GAAeR,GAAU,CAC9B,IAAMoE,EAAa5D,EAAYmE,cAActlB,MAAM,KAAK,GAGpDqlB,EAAoBN,IACtBM,EAAoBN,GAAYS,KAAKvP,GAIvCkL,EAAYsE,QAAQtE,EAAYiE,UAAY,OAIzCC,GAiFPK,SA7Ee,SAACzP,GAChB,IAAM0P,EAAW9gB,KACZoR,GACHnG,GAAImG,EAAMnG,IAAM6U,SAElBE,GAAkB,SAACe,GAAU,SAAAC,OAASD,GAAYD,QAyElDG,cArEoB,SAACvK,GAIrB,IAHA,IAAMwK,EAA0B,GAC1BzN,EAAQwM,EAAYvJ,GAAWyK,aAGnC,IAAM7E,EAAc,IAAI3F,KAAKlD,GAC7B6I,EAAYsE,QAAQnN,EAAM8M,UAAY3G,GACtC,IAAMsG,EAAa5D,EAAYmE,cAActlB,MAAM,KAAK,GAElDimB,EAA2BC,MAAMC,KACrC,CAAE3mB,OAAQ,KACV,SAAC4mB,EAAGzO,GAAK,MAAM,CACb0O,KAASC,OAAO3Z,KAAK4Z,MAAM5O,EAAQ,IAAIkF,SAAS,EAAG,UACjDlF,EAAQ,GAAM,EAAI,KAAO,MAE3BqH,OAAQ,OAINwH,EAA0B,GAEhC5B,EAAeW,SAAQ,SAACtP,GACtB,IAAMwK,EAAaqE,EAAY7O,EAAMqC,OAC/BqI,EAAWmE,EAAY7O,EAAMsC,KAEnC,GAAItC,EAAMwQ,UAENhG,EAAW6E,cAActlB,MAAM,KAAK,IAAM+kB,GAC1CpE,EAAS2E,cAActlB,MAAM,KAAK,IAAM+kB,GAExCyB,EAAchB,KAAKvP,QAKvB,GACEwK,EAAW6E,cAActlB,MAAM,KAAK,IAAM+kB,GAC1CpE,EAAS2E,cAActlB,MAAM,KAAK,IAAM+kB,EAIxC,IAFA,IAAM2B,EAAc,IAAIlL,KAAKiF,GAEtBiG,GAAe/F,GAAU,CAE9B,GADuB+F,EAAYpB,cAActlB,MAAM,KAAK,KACrC+kB,EAAY,CACjC,IAAM4B,EACqB,EAAzBD,EAAY/K,YACX+K,EAAY9K,cAAgB,GAAK,EAAI,GACpCqK,EAAaU,IACfV,EAAaU,GAAW3H,OAAOwG,KAAKvP,GAGxCyQ,EAAYE,WAAWF,EAAY9K,aAAe,QAKxDmK,EAAWP,KAAK,CACdvG,KAAM8F,EACNyB,cAAAA,EACAK,UAAWZ,KAvDNxH,EAAI,EAAGA,EAAI,EAAGA,IAAGuH,IA2D1B,OAAOD,KChIEe,GAAmC,SAACvhB,GAC/C,IAAQyZ,EAA+BzZ,EAA/ByZ,OAAQhF,EAAuBzU,EAAvByU,WAAYtW,EAAW6B,EAAX7B,OACpBO,ECvBO,CACb2Q,UAAWlK,MAAI,CACb/E,QAAS,OACTC,cAAe,SACfpC,MAAO,oBACPE,OAAQ,QACRsB,SAAU,SACVrC,QAAS,SAEX4F,OAAQmC,MAAI,CACV/E,QAAS,OACTE,eAAgB,gBAChBC,WAAY,SACZ/B,aAAc,OACduV,0BAA2BxW,SAAO8Q,sBAEpCmT,QAASrc,MAAI,CACX/E,QAAS,OACT0F,oBAAqB,WACrB8N,iBAAkB,6BAClBzV,OAAQ,sBACR4W,UAAW,OACXd,oBAAqB1W,SAAO8Q,oBAC5BjQ,UAAW,cACXqe,eAAgB,OAChBC,eAAmBnf,SAAOoX,yBAAwBpX,SAAO2W,wBACzDyI,uBAAwB,CACtB1e,MAAO,OAET2e,6BAA8B,CAC5B5e,WAAYT,SAAO2W,yBAErB2I,6BAA8B,CAC5B7e,WAAYT,SAAOoX,qBACnBJ,aAAc,OAEhBuI,mCAAoC,CAClC9e,WAAYT,SAAOsY,6BAGvBkH,YAAa5X,MAAI,CACf6X,WAAY,IACZ5O,gBAAiB7Q,SAAO6a,wBACxBrE,0BAA2BxW,SAAO0f,sBAEpCC,WAAY/X,MAAI,CACd6X,WAAY,IACZG,QAAS,cACT/c,QAAS,OACTC,cAAe,SACf+N,gBAAiB7Q,SAAO2W,wBACxBkJ,yBAA0B7f,SAAO8Q,sBAEnCgP,SAAUlY,MAAI,CACZhH,OAAQ,OACRC,UAAW,OACX+O,UAAW,OACX/M,QAAS,OACTG,WAAY,SACZoP,SAAU,OACV/G,MAAOrL,SAAO+f,wBACdvJ,0BAA2BxW,SAAO8Q,oBAClC/N,eAAgB,WAElBid,WAAYpY,MAAI,CACdgY,QAAS,IACT/c,QAAS,OACT0F,oBAAqB,YACrBvG,IAAK,IACLnC,QAAS,IACTgR,gBAAiB7Q,SAAO8W,wBACxBN,0BAA2BxW,SAAO6W,sBAEpCoJ,aAAcrY,MAAI,CAChB6X,WAAY,IACZ5c,QAAS,OACTG,WAAY,SACZD,eAAgB,SAChBgP,aAAc,SACd1G,MAAOrL,SAAOoX,qBACdvX,QAAS,MACTggB,yBAA0B7f,SAAO8Q,oBACjC0F,0BAA2BxW,SAAO6W,sBAEpCqJ,YAAatY,MAAI,CACfiY,yBAA0B7f,SAAO8Q,oBACjCjO,QAAS,OACTC,cAAe,MACfd,IAAK,MACLnC,QAAS,MACT2W,0BAA2BxW,SAAO6W,oBAClC3U,SAAU,WAEZie,aAAcvY,MAAI,CAChBS,KAAM,WACND,SAAU,OACVxH,OAAQ,OACRf,QAAS,UACTgR,gBAAiB7Q,SAAOoX,qBACxB/L,MAAOrL,SAAOgY,8BACdhB,aAAc,MACd9U,SAAU,SAEVW,QAAS,OACTG,WAAY,SACZD,eAAgB,WAElBqd,cAAexY,MAAI,CACjBoB,UAAW,SACX6H,gBAAiB7Q,SAAO8W,wBACxBjX,QAAS,MACTwS,WAAY,OACZmE,0BAA2BxW,SAAO8Q,sBAEpCuP,gBAAiBzY,MAAI,CACnBuP,uBAAwBnX,SAAOoX,uBAEjCE,UAAW1P,MAAI,CACb5E,WAAY,SACZD,eAAgB,SAChBhC,YAAa,MACb4P,OAAQ,EACRL,SAAU,WACVyB,aAAc,SAEd7P,SAAU,WAUZqe,QAAS3Y,MAAI,CACX4O,0BAA2BxW,SAAO8Q,oBAClC+O,yBAA0B7f,SAAO8Q,oBACjCR,SAAU,WACVpO,SAAU,UACVse,cAAe,SACfxe,IAAK,QAEPye,qBAAsB7Y,MAAI,CACxB0I,SAAU,WACVyC,KAAM,EACNnS,OAAQ,MACRiQ,gBAAiB7Q,SAAO0gB,4BACxBhgB,MAAO,OACPiQ,OAAQ,IAEVgQ,oBAAqB/Y,MAAI,CACvB8O,oBAAqB1W,SAAO0gB,8BAE9BjE,WAAY7U,MAAI,CACd/E,QAAS,cACTiG,qBAAsB,IACtBC,qBAAsB,WACtBC,UAAW,QACXH,aAAc,WACdvI,YAAa,MACb+Q,UAAW,aACXnP,SAAU,YD1IPmc,EAAepY,WAASiR,MACzBgN,EAAcrR,SAAuB,MAC3CsR,EAAwC5L,KAAhCC,EAAY2L,EAAZ3L,aAAciD,EAAa0I,EAAb1I,cAChByG,EAAWkC,KAAKC,iBAAiBC,kBAAkBpC,SACjDc,EAAkBtB,GAAYxF,EAAQgG,GAAtCc,cACFuB,EAAmBxoB,eAAkB,WACzC,OAAOqnB,MAAMC,KAAK,CAAE3mB,OAAQ,KAAM,SAAC4mB,EAAGkB,GAAI,OACxCzoB,gBAACA,YAAeC,IAAKwoB,GACnBzoB,uBAAKmH,UAAW/B,EAAO2e,UACrB/jB,gBAACqlB,uBAAcoD,WAEjBzoB,uBAAKmH,UAAW/B,EAAO2e,iBAG1B,CAAC3e,EAAO2e,WAEL2E,EAAmB1oB,eAAkB,WACzC,OACEA,gCAEEA,uBAAKmH,UAAW/B,EAAOqe,cAEtB4D,MAAMC,KAAK,CAAE3mB,OAAQ,IAAK,SAAC4mB,EAAGoB,GAC7B,IAAMjO,EAAMkO,UAAQtG,EAAaqG,GAC3BE,EAAeC,UAAQpO,GAAOtV,EAAOkf,gBAAkB,GAE7D,OACEtkB,uBACEC,IAAK0oB,EACLxhB,UAAW0C,eAAazE,EAAOif,cAAewE,IAE9C7oB,gBAAC+Y,QAAKgQ,OAAO,WAAWhW,KAAM,IAAK1J,MAAO,CAAE7E,aAAc,KACvDqV,SAAOa,EAAK,OAEf1a,gBAACga,iBAAWH,SAAOa,EAAK,sBAMjC,CACD4H,EACAld,EAAOqe,YACPre,EAAOif,cACPjf,EAAOkf,kBAGH0E,EAAsBhpB,eAAkB,WAC5C,IAAMknB,EAAaD,EAAc3E,EAAYmE,eAC7C,OACEzmB,gCACEA,uBAAKmH,UAAW/B,EAAO8e,cACrBlkB,gBAACsZ,yBAEF+N,MAAMC,KAAK,CAAE3mB,OAAQ,IAAK,SAAC4mB,EAAGoB,GAC7B,IAAMM,EAAUpP,SAAO+O,UAAQtG,EAAaqG,GAAW,cACjDO,EAAYhC,EAAWiC,MAAK,SAACzO,GAAG,OAAKA,EAAI0F,OAAS6I,KAExD,OACEjpB,uBAAKC,IAAK0oB,EAAUxhB,UAAW/B,EAAO+e,qBAFlB+E,SAAAA,EAAWvB,gBAAiB,IAG/BhV,KAAI,SAACyE,GAAK,OACvBpX,uBACEC,IAAKmX,EAAMnG,GACX9J,UAAW/B,EAAOgf,aAClB/a,MAAO,CACLqa,eAAeiF,EAAW,GAC1B7T,gBAAiB4K,EAActI,EAAMoC,SAGvCxZ,gBAACsZ,SAAMnS,UAAW/B,EAAOsb,YAAatJ,EAAMoC,kBAQzD,CACD8I,EACA5C,EACAuH,EACA7hB,EAAO+e,YACP/e,EAAOgf,aACPhf,EAAO8e,aACP9e,EAAOsb,aAGH0I,EAAiBppB,eAAkB,WACvC,IAAMknB,EAAaD,EAAc3E,EAAYmE,eAE7C,OAAOY,MAAMC,KAAK,CAAE3mB,OAAQ,IAAK,SAAC4mB,EAAGoB,GACnC,IAAMM,EAAUpP,SAAO+O,UAAQtG,EAAaqG,GAAW,cACjDO,EAAYhC,EAAWiC,MAAK,SAACzO,GAAG,OAAKA,EAAI0F,OAAS6I,KAExD,OACEjpB,sCACGkpB,SAAAA,EAAWlB,UAAUrV,KAAI,SAAC0W,EAAUvB,GACnC,IAAM7C,EAAaoE,EAASlJ,OAAOxf,OAEnC,OACEX,uBACEC,IAAK6nB,EACL3gB,UAAW/B,EAAOof,QAClBnb,MAAO,CACLwa,QAASiE,EAAY,IAGtBuB,EAASlJ,OAAOxN,KAAI,SAACyE,EAAO4N,GAC3B,IAAMtI,EAAY,IAAIC,KAAKvF,EAAMqC,OAC3BmD,EAAU,IAAID,KAAKvF,EAAMsC,KAG/B4P,EAAiC7M,EAC/BC,EACAE,GAFMK,EAASqM,EAATrM,UAMR,GAAI6K,IANwBwB,EAATzM,UAMU,CAC3B,IAAMoF,QAAe7K,SAAAA,EAAOqO,kBAE5B,OAAIzlB,iBAAqBiiB,GAChBjiB,eACLiiB,EACA,IAMFjiB,gBAACslB,IACCrlB,IAAKmX,EAAMnG,GACXmG,MAAOA,EACP6N,WAAYA,EACZhI,UAAWA,EACX8H,UA5IL,GA6IKC,WAAYA,EACZO,KAAK,QAKX,OAAO,kBAQpB,CAACjD,EAAa7F,EAAcwK,EAAe7hB,EAAOof,UAErD,OACExkB,uBAAKmH,UAAW/B,EAAO2Q,UAAW1M,MAAO,CAAExE,OAAQA,IAEjD7E,uBAAKmI,IAAKggB,EAAahhB,UAAW/B,EAAO8iB,SACvCloB,uBAAKmH,UAAW/B,EAAOwe,YAAa4E,KACnCE,IACAM,IACAI,QtC5LT,SAAYvpB,GACRA,YACAA,cACAA,gBAHJ,CAAYA,IAAAA,OwCgCL,IAAM0pB,GAET,SAAC7iB,GACH,IAAQ8iB,EAAsB9iB,EAAtB8iB,WAAYhpB,EAAUkG,EAAVlG,MAGpB4H,EAAwCpI,iBACtCQ,EAAAA,EAASX,EAAe4pB,OADnBC,EAAYthB,KAAEuhB,EAAevhB,KAIpCE,EAA0CtI,WAExC,CACAulB,KAAM,OAAC/kB,EAAAA,EAASX,EAAe4pB,SAH1BG,EAAathB,KAAEuhB,EAAgBvhB,KAMhC2f,EAAUnW,aAAWgY,oBAAmBC,sBACxCC,EAAYlY,aAAWmY,sBAAqBC,wBAC5CC,EAAWrY,aAAWsY,yBAAwBC,2BAEpDrqB,aAAgB,gBAEAkG,IAAV1F,IACFmpB,EAAgBnpB,GAChBqpB,EAAiB,CAAEtE,KAAM,CAAC/kB,QAE3B,CAACA,IAEJ,IAAA8pB,EAAwBtqB,YAAe,GAAhC+T,EAAIuW,KAAEC,EAAOD,KAKdE,EAAWxqB,eAAkB,WACjC,OAAQ0pB,GACN,KAAK7pB,EAAe4pB,MAClB,OAAOzpB,gBAACgqB,QACV,KAAKnqB,EAAe4qB,KAClB,OAAOzqB,gBAACmqB,QACV,KAAKtqB,EAAeuiB,IAClB,OAAOpiB,gBAACioB,QACV,QACE,OAAOjoB,gBAACgqB,WAEX,CAACN,IAEEgB,EAAe1qB,eAAkB,SAACulB,GACtC,OAAQA,GACN,KAAK1lB,EAAe4pB,MAClB,MAAO,QACT,KAAK5pB,EAAe4qB,KAClB,MAAO,OACT,KAAK5qB,EAAeuiB,IAClB,MAAO,MACT,QACE,MAAO,WAEV,IAEGuI,EACJ3qB,eACE,SACE4qB,EAAWtX,OACHuX,EAAYvX,EAAZuX,aAER,GAAa,SAFPvX,EAAJlC,KAEmB,CACnB,IAAM0Z,EAAUD,EAAa,GAC7BlB,EAAgBmB,GAChBjB,EAAiB,CAAEtE,KAAMsF,IACzBrB,EAAWsB,MAGf,CAACtB,IAGL,OACExpB,gCAEEA,gBAACmS,QAAK4B,KAAMA,EAAMgX,aAjD0B,SAACH,EAAII,GACnDT,EAAQS,EAAKjX,QAiDT/T,gBAACoS,eAAYC,6BACXrS,gBAACsS,cACC2Y,MAAM,WACN9b,KAAMqb,IACNnhB,MAAO,CAAEgD,SAAU,UAElBqe,EAAahB,KAGlB1pB,gBAACyS,mBACCzS,gBAAC0S,YACCiY,qBAAsBA,EACtBf,cAAeA,GAEf5pB,gBAACkrB,iBACC/b,KAAMnP,gBAACioB,QACP7W,KAAK,OACL5Q,MAAOX,EAAeuiB,YAIxBpiB,gBAACkrB,iBACC/b,KAAMnP,gBAACmqB,QACP/Y,KAAK,OACL5Q,MAAOX,EAAe4qB,cAIxBzqB,gBAACkrB,iBACC/b,KAAMnP,gBAACgqB,QACP5Y,KAAK,OACL5Q,MAAOX,EAAe4pB,qBCtHvB0B,GAAsDnrB,QACjE,SAAC0G,GACC,IAAQ8iB,EAAsB9iB,EAAtB8iB,WAAYhpB,EAAUkG,EAAVlG,MAGpB4H,EAAwCpI,iBACtCQ,EAAAA,EAAS,IAAImc,MADRyO,EAAYhjB,KAAEijB,EAAejjB,KAGpCE,EAA0CtI,YAAuB,WAC/D,IAAMsrB,QAAc9qB,EAAAA,EAAS,IAAImc,KACjC,OAAO9C,SAAOyR,EAAa,mBAFtBC,EAAajjB,KAAEkjB,EAAgBljB,KAKtCgiB,EAAwBtqB,YAAe,GAAhC+T,EAAIuW,KAAEC,EAAOD,KAEdS,EAA0C/qB,eAC9C,SACE4qB,EACAI,GAEAT,EAAQS,EAAKjX,QAEf,IAGI0X,EAAYzrB,WAChB,WAAA,OAAM8R,aAAWmY,sBAAqBC,0BACtC,IAGIwB,EAAe1rB,eACnB,SAACogB,GACC,GAAIA,EAAM,CACR,IAAM+F,EAAWkC,KAAKC,iBAAiBC,kBAAkBpC,SACnDwF,EAAYC,iBAAexL,EAAM+F,GAEvCkF,EAAgBM,GAChBH,EAAiB3R,SAAO8R,EAAW,iBACnCnC,EAAWmC,GACXpB,GAAQ,MAGZ,CAACf,IAGH,OACExpB,gBAACmS,QAAK4B,KAAMA,EAAMgX,aAAcA,GAC9B/qB,gBAACoS,eAAYC,6BACXrS,gBAACsS,cACC2Y,MAAM,WACN9b,KAAMnP,gBAACyrB,QACPpiB,MAAO,CAAEgD,SAAU,UAElBkf,IAGLvrB,gBAACyS,eAAYpJ,MAAO,CAAEzE,SAAU,gBAC9B5E,gBAAC0S,gBACC1S,gBAAC6rB,YAECC,0BACAC,iBACAL,aAAcA,EACdlrB,MAAO4qB,UCjBRY,GAA8D,SACzEtlB,GAEA,IAAQulB,EAAiDvlB,EAAjDulB,aAAcC,EAAmCxlB,EAAnCwlB,oBAAqBC,EAAczlB,EAAdylB,UACvC/mB,EAnEG,CACLuK,KAAM9D,MAAI,CACRugB,aAAc,qBAkElBhkB,EAAwCpI,iBAAsBksB,EAAAA,EAAgC,IAAIvP,MAA3FyO,EAAYhjB,KAAEijB,EAAejjB,KAE9BsjB,EAAe1rB,eAAkB,SAACogB,EAAYiM,GAClDhB,EAAgBjL,GAChB6L,EAAa7L,GACb+L,MACC,IAEH,OACEnsB,gCACEA,gBAAC6rB,YACC1kB,UAAW/B,EAAOuK,KAClB2c,cAAeC,gBAAc9C,MAC7BqC,0BACAU,oBAAoB,EACpBd,aAAcA,EACdlrB,MAAO4qB,EACPe,UAAWA,EACXJ,eAAe,EACfU,cAAc,MChETC,GAA0D,SACrEhmB,GAEA,IAAQ8iB,EAAsB9iB,EAAtB8iB,WAAYhpB,EAAUkG,EAAVlG,MAGdqrB,EAAW/Z,aAAWmY,sBAAqBC,wBACjD9hB,EAAwCpI,iBAAqBQ,EAAAA,EAAS,IAAImc,MAAnEyO,EAAYhjB,KAAEijB,EAAejjB,KAEpCpI,aAAgB,WACdwpB,QAAWhpB,EAAAA,EAAS,IAAImc,MACxB0O,QAAgB7qB,EAAAA,EAAS,IAAImc,QAC5B,CAACnc,IAEJ,IAAA8H,EAAwBtI,YAAe,GAAhC+T,EAAIzL,KAAEiiB,EAAOjiB,KAKd2jB,EAAejsB,eAAkB,SAACogB,GACtCoJ,EAAWpJ,GACXiL,EAAgBjL,KACf,IAEH,OACEpgB,gCACEA,gBAACmS,QAAK4B,KAAMA,EAAMgX,aAX0B,SAACH,EAAII,GACnDT,EAAQS,EAAKjX,QAWT/T,gBAACoS,eAAYC,6BACXrS,gBAACsS,cAAW2Y,MAAM,WAAW9b,KAAMnP,gBAAC6rB,QAAaxiB,MAAO,CAACgD,SAAU,UAChEwN,SAAOuR,EAAc,eAG1BprB,gBAACyS,mBACCzS,gBAAC0S,gBACC1S,gBAACgsB,IACCC,aAAcA,EACdC,oBAAqBd,EACrBe,UAAW,WACT5B,GAAQ,WC7ClBoC,GAAkB,SAACC,GACvB,IAAMzG,EAAWkC,KAAKC,iBAAiBC,kBAAkBpC,SACnD0G,EAAahT,SAAO+S,EAAKnT,MAAO,MAAO,CAAE0M,SAAAA,IACzC2G,EAAWjT,SAAO+S,EAAKlT,IAAK,MAAO,CAAEyM,SAAAA,IAI3C,OAHkBtM,SAAO+S,EAAKnT,MAAO,OAAQ,CAAE0M,SAAAA,MAC/BtM,SAAO+S,EAAKlT,IAAK,OAAQ,CAAEyM,SAAAA,IAG/BtM,SAAO+S,EAAKnT,MAAO,cAAe,CAC1C0M,SAAAA,UACMtM,SAAO+S,EAAKlT,IAAK,cAAe,CAAEyM,SAAAA,IACjC0G,IAAeC,EACdjT,SAAO+S,EAAKnT,MAAO,SAAU,CACrC0M,SAAAA,UACMtM,SAAO+S,EAAKlT,IAAK,cAAe,CAAEyM,SAAAA,IAEhCtM,SAAO+S,EAAKnT,MAAO,KAAM,CAAE0M,SAAAA,UAAiBtM,SACpD+S,EAAKlT,IACL,cACA,CAAEyM,SAAAA,KAMF4G,GAAe,SAAC3M,GACpB,IAAM+F,EAAWkC,KAAKC,iBAAiBC,kBAAkBpC,SACnDwF,EAAYC,iBAAexL,EAAM+F,GAEjC1M,EAAQ,IAAIkD,KAAKgP,GACvBlS,EAAMmN,QAAQ+E,EAAUpF,UAAYoF,EAAUqB,UAE9C,IAAMtT,EAAM,IAAIiD,KAAKlD,GAGrB,OAFAC,EAAIkN,QAAQnN,EAAM8M,UAAY,GAEvB,CACL9M,MAAOmS,iBAAenS,EAAO0M,GAC7BzM,IAAKkS,iBAAelS,EAAKyM,KAIhB8G,GAAwDjtB,QACnE,SAAC0G,GACC,IAAQ8iB,EAAsB9iB,EAAtB8iB,WAAYhpB,EAAUkG,EAAVlG,MAEd8rB,EAA+BC,gBAAc9B,KAGnDriB,EAAwCpI,iBACtCQ,EAAAA,EAAS,IAAImc,MADRyO,EAAYhjB,KAAEijB,EAAejjB,KAGpCE,EAAwCtI,YAAuB,WAC7D,IAAMwD,QAAWhD,EAAAA,EAAS,IAAImc,KAC9B,GAAInZ,EAAU,CACZ,IAAM0pB,EAAYH,GAAavpB,GAC/B,OAAOmpB,GAAgBO,GAEzB,MAAO,mBANFC,EAAY7kB,KAAE8kB,EAAe9kB,KASpCgiB,EAAwBtqB,YAAe,GAAhC+T,EAAIuW,KAAEC,EAAOD,KAEdS,EAA0C/qB,eAC9C,SACE4qB,EACAI,GAEAT,EAAQS,EAAKjX,QAEf,IAGI0X,EAAYzrB,WAChB,WAAA,OAAM8R,aAAWmY,sBAAqBC,0BACtC,IAGIwB,EAAe1rB,eACnB,SAACogB,GACC,GAAIA,EAAM,CACRiL,EAAgBjL,GAChB,IAAM8M,EAAYH,GAAa3M,GACzBiN,EAAYV,GAAgBO,GAElCE,EAAgBC,GAChB7D,EAAW,CAAE9M,UAAWwQ,EAAUzT,MAAOmD,QAASsQ,EAAUxT,MAC5D6Q,GAAQ,MAGZ,CAACwC,GAAcJ,GAAiBnD,IAG5B8D,EAAiBttB,WAAc,WAAA,OAAM,IAAG,IAE9C,OACEA,gBAACmS,QAAK4B,KAAMA,EAAMgX,aAAcA,GAC9B/qB,gBAACoS,eAAYC,6BACXrS,gBAACsS,cACC2Y,MAAM,WACN9b,KAAMnP,gBAACyrB,QACPpiB,MAAO,CAAEgD,SAAU,UAElB8gB,IAGLntB,gBAACyS,eAAYpJ,MAAO,CAAEzE,SAAU,gBAC9B5E,gBAAC0S,gBACC1S,gBAAC6rB,YACCS,cAAeA,EACfR,0BACAC,iBACAL,aAAcA,EACdlrB,MAAO4qB,EACPkC,eAAgBA,UCzGjBC,GAAkCvtB,QAC7C,SAAAsT,OACEoW,EAAYpW,EAAZoW,aACA8D,EAAcla,EAAdka,eACAlL,EAAWhP,EAAXgP,YACAmL,EAAcna,EAAdma,eACAC,EAAYpa,EAAZoa,aACAC,EAAara,EAAbqa,cACAC,EAAWta,EAAXsa,YAEMC,EAAY/b,aAAWgc,kBAAiBC,oBACxCC,EAAUlc,aAAWmc,gBAAeC,kBAEpCC,EAAe,SAACvB,GACpBc,EAAad,EAAKlQ,WAClB+Q,EAAeb,EAAKlQ,YAGhB0R,EAAgB,SAACtL,GACrB6K,EAAc7K,GACd2K,EAAe3K,IAGXuL,EAAc,SAAC3T,GACnBkT,EAAYlT,GACZ+S,EAAe/S,IA6BX4T,EAAmB,SAACC,GACxB,IAAMC,EAAU,IAAI7R,KAAK2F,GACzB,OAAQoH,GACN,KAAK7pB,EAAe4pB,MAClB+E,EAAQC,SAASD,EAAQE,WAAaH,GACtCZ,EAAca,GACd,MACF,KAAK3uB,EAAe4qB,KAClB+D,EAAQ5H,QAAQ4H,EAAQjI,UAAqB,EAATgI,GACpCb,EAAac,GACb,MACF,KAAK3uB,EAAeuiB,IAClBoM,EAAQ5H,QAAQ4H,EAAQjI,UAAYgI,GACpCX,EAAYY,GAKhBf,EAAee,IAGjB,OACExuB,gBAAC4Q,GACCjM,MAAM,oBACNE,OAAO,cACPb,cACAgM,gBAAgB,gBAChBC,cAAc,SACd1L,YAAY,OACZC,aAAa,OACbC,cAAc,OACda,WAAW,OACX8K,UAAW,GACXhL,OAAQ,CAAEe,SAAU,WAEpBnG,gBAAC4Q,GACC5M,cACAgM,gBAAgB,QAChBC,cAAc,SACdG,UAAW,IAEXpQ,iBAtDc,WAAH,OACfA,gBAAC2uB,WAAQC,QAAQ,QAAQC,aAAa,SACpC7uB,gBAAC4X,UACCqT,MAAM,WACN9b,KAAMnP,gBAAC8uB,6BACP/b,KAAK,SACL5B,QAAS,WAAF,OAAQyc,EAAY,IAAIjR,0BAiD/B3c,iBApEmB,WACvB,OAAQ0pB,GACN,KAAK7pB,EAAe4pB,MAClB,OAAOzpB,gBAAC0sB,IAAYlD,WAAY4E,EAAe5tB,MAAO8hB,IACxD,KAAKziB,EAAe4qB,KAClB,OAAOzqB,gBAACitB,IAAWzD,WAAY2E,EAAc3tB,MAAO8hB,IACtD,KAAKziB,EAAeuiB,IAClB,OAAOpiB,gBAACmrB,IAAU3B,WAAY6E,EAAa7tB,MAAO8hB,IACpD,QACE,OAAOtiB,gBAAC0sB,IAAYlD,WAAY4E,EAAe5tB,MAAO8hB,aA4DtDtiB,gBAAC2uB,WAAQC,QAAQ,WAAWC,aAAa,SACvC7uB,gBAAC4X,UACC7E,KAAK,SACL5D,KAAMnP,gBAACguB,GAAQ3X,SAAU,KACzBlF,QAAS,WAAF,OAAQmd,GAAkB,OAGrCtuB,gBAAC2uB,WAAQC,QAAQ,OAAOC,aAAa,SACnC7uB,gBAAC4X,UACC7E,KAAK,SACL5D,KAAMnP,gBAAC6tB,GAAUxX,SAAU,KAC3BlF,QAAS,WAAF,OAAQmd,EAAiB,QAItCtuB,gBAAC4Q,GACC5M,cACAgM,gBAAgB,QAChBC,cAAc,SACdG,UAAW,IAEXpQ,gBAACupB,IACCC,WAAYgE,EACZhtB,MAAOkpB,SC/HNS,GAAqC,SAACzjB,GACjD,IAAQyZ,EAA+BzZ,EAA/ByZ,OAAQhF,EAAuBzU,EAAvByU,WAAYtW,EAAW6B,EAAX7B,OACpBO,EAAW6d,KAAX7d,OACDkd,EAAepY,WAASiR,MAC/B9Q,EAAkCH,WAAiB,IAA5C6a,EAAS1a,KAAE0kB,EAAY1kB,KACxB8d,EAAcrR,SAAuB,MACnC2F,EAAiBD,KAAjBC,aACFuS,EAAYC,cAAY3M,EAAa,CAAE4M,aAAc,IACrD/I,EAAWkC,KAAKC,iBAAiBC,kBAAkBpC,SAEjDc,EAAkBtB,GAAYxF,EAAQgG,GAAtCc,cAGRjc,aAAU,WACR,IAAMmkB,EAAW,IAAIzmB,kBAAe,WAClC,GAAIyf,EAAY1f,QAAS,CACvB,IAAM2mB,EAAejH,EAAY1f,QAAQ4mB,cACvC,YAEED,GACFL,EAAaK,EAAa5W,kBAOhC,OAHI2P,EAAY1f,SACd0mB,EAASjmB,QAAQif,EAAY1f,SAExB,WACL0mB,EAAShmB,gBAEV,CAACgf,IAEJ,IAAMzI,EAAgB1f,eAAkB,SAACa,GAEvC,IADA,IAAI8e,EAAO,EACFC,EAAI,EAAGA,EAAI/e,EAAIF,OAAQif,IAC9BD,EAAO9e,EAAIgf,WAAWD,KAAOD,GAAQ,GAAKA,GAE5C,IAAMG,GAAY,SAAPH,GAAmBhd,SAAS,IAAIod,cAC3C,WAAW,QAAQrf,UAAU,EAAG,EAAIof,EAAEnf,QAAUmf,KAC/C,IAEG0I,EAAmBxoB,eAAkB,WACzC,OAAOqnB,MAAMC,KAAK,CAAE3mB,OAAQ,KAAM,SAAC4mB,EAAGkB,GAAI,OACxCzoB,gBAACA,YAAeC,IAAKwoB,GACnBzoB,uBAAKmH,UAAW/B,EAAO2e,UACrB/jB,gBAACqlB,uBAAcoD,WAEjBzoB,uBAAKmH,UAAW/B,EAAO2e,iBAG1B,IAEG2E,EAAmB1oB,eAAkB,WACzC,OACEA,gCAEEA,uBAAKmH,UAAW/B,EAAOqe,cAEtB4D,MAAMC,KAAK,CAAE3mB,OAAQ,IAAK,SAAC4mB,EAAGoB,GAC7B,IAAMjO,EAAMkO,UAAQoG,EAAWrG,GACzBE,EAAeC,UAAQpO,GAAOtV,EAAOkf,gBAAkB,GAC7D,OACEtkB,uBACEC,IAAK0oB,EACLxhB,UAAW0C,eAAazE,EAAOif,cAAewE,IAE9C7oB,gBAAC+Y,QAAKgQ,OAAO,UAAUhW,KAAM,IAAK1J,MAAO,CAAE7E,aAAc,KACtDqV,SAAOa,EAAK,OAEf1a,gBAACsZ,aAAOO,SAAOa,EAAK,eAM7B,CAACsU,EAAW5pB,IAET4jB,EAAsBhpB,eAAkB,WAC5C,IAAMknB,EAAaD,EAAc+H,EAAUvI,eAC3C,OACEzmB,gCACEA,uBAAKmH,UAAW/B,EAAO8e,cACrBlkB,gBAACsZ,yBAEF+N,MAAMC,KAAK,CAAE3mB,OAAQ,IAAK,SAAC4mB,EAAGoB,GAC7B,IAAMM,EAAUpP,SAAO+O,UAAQoG,EAAWrG,GAAW,cAC/CO,EAAYhC,EAAWiC,MAAK,SAACzO,GAAG,OAAKA,EAAI0F,OAAS6I,KAGxD,OACEjpB,uBAAKC,IAAK0oB,EAAUxhB,UAAW/B,EAAO+e,qBAHlB+E,SAAAA,EAAWvB,gBAAiB,IAI/BhV,KAAI,SAACyE,GAAK,OACvBpX,uBACEC,IAAKmX,EAAMnG,GACX9J,UAAW/B,EAAOgf,aAClB/a,MAAO,CACLqa,eAAeiF,EAAW,GAC1B7T,gBAAiB4K,EAActI,EAAMoC,SAGvCxZ,gBAACsZ,SAAMnS,UAAW/B,EAAOsb,YAAatJ,EAAMoC,kBAQzD,CAACwV,EAAW5pB,EAAQ6hB,EAAevH,IAEhC0J,EAAiBppB,eAAkB,WACvC,IAAMknB,EAAaD,EAAc+H,EAAUvI,eAE3C,OAAOY,MAAMC,KAAK,CAAE3mB,OAAQ,IAAK,SAAC4mB,EAAGoB,GACnC,IAAMM,EAAUpP,SAAO+O,UAAQoG,EAAWrG,GAAW,cAC/CO,EAAYhC,EAAWiC,MAAK,SAACzO,GAAG,OAAKA,EAAI0F,OAAS6I,KAExD,OACEjpB,sCACGkpB,SAAAA,EAAWlB,UAAUrV,KAAI,SAAC0W,EAAUvB,GACnC,IAAM7C,EAAaoE,EAASlJ,OAAOxf,OAEnC,OACEX,uBACEC,IAAK6nB,EACL3gB,UAAW/B,EAAOof,QAClBnb,MAAO,CACLwa,QAASiE,EAAY,IAGtBuB,EAASlJ,OAAOxN,KAAI,SAACyE,EAAO4N,GAC3B,IAAMtI,EAAY,IAAIC,KAAKvF,EAAMqC,OAC3BmD,EAAU,IAAID,KAAKvF,EAAMsC,KAE/B4P,EAAiC7M,EAC/BC,EACAE,GAFMK,EAASqM,EAATrM,UAKR,GAAI6K,IALwBwB,EAATzM,UAKU,CAC3B,IAAMoF,QAAe7K,SAAAA,EAAOsO,mBAE5B,OAAI1lB,iBAAqBiiB,GAChBjiB,eACLiiB,EACA,IAKFjiB,gBAACslB,IACCrlB,IAAKmX,EAAMnG,GACXmG,MAAOA,EACP6N,WAAYA,EACZhI,UAAWA,EACX8H,UAAWA,EACXC,WAAYA,EACZO,KAAK,SAIX,OAAO,kBAQpB,CAACyJ,EAAW5pB,EAAQ6hB,EAAexK,EAAcsI,IAEpD,OACE/kB,uBAAKmH,UAAW/B,EAAO2Q,UAAW1M,MAAO,CAAExE,OAAQA,IAEjD7E,uBAAKmI,IAAKggB,EAAahhB,UAAW/B,EAAO8d,UACvCljB,uBAAKmH,UAAW/B,EAAOwe,YAAa4E,KACnCE,IACAM,IACAI,OC9KHkG,GAAuB,CAC3B,SACA,SACA,UACA,YACA,WACA,SACA,gCCxBqD,SAA/Bhc,OAAkCic,EAAKjc,EAALic,MAAOthB,EAAQqF,EAARrF,SAAUrJ,EAAQ0O,EAAR1O,SAAUE,EAASwO,EAATxO,UAAS0qB,EAAAlc,EAAEjK,MAAAA,WAAKmmB,EAAG,GAAEA,EAAK9oB,yIAAK+oB,CAAAnc,EAAAoc,IAC5GC,EAAW3pB,GACfuO,SAAU,WACV5P,MAAO,OACPW,WAAe,IAAMiqB,MACrB3qB,SAAUA,GAAY,OACtBE,UAAWA,GAAa,QACrBuE,GAWL,OACErJ,qCAAKqJ,MAAOsmB,GAAiBjpB,GAC3B1G,uBAAKqJ,MAV+B,CACtCkL,SAAU,WACVG,IAAK,EACLsC,KAAM,EACNrS,MAAO,OACPE,OAAQ,SAKmBoJ,wBCPyB,SAA/BqF,OACrB/B,EAAK+B,EAAL/B,MAAKqe,EAAAtc,EACL1O,SAAAA,WAAQgrB,EAAG,OAAMA,EACTC,EAAYvc,EAApBlO,OACAoM,EAAK8B,EAAL9B,MAAKkF,EAAApD,EACLP,KAAAA,WAAI2D,EAAG,SAAQA,EAAAoZ,EAAAxc,EACfyc,aAAAA,WAAYD,EAAGve,EAAM5Q,OAAS,EAACmvB,EAC/B3oB,EAASmM,EAATnM,UAEA6oB,EAA8Bla,KAAtB1Q,EAAM4qB,EAAN5qB,OAAQgR,EAAS4Z,EAAT5Z,UACV6Z,EAAenZ,SAAuB,MAC5C7M,EAAwCC,WAA4B,IAA7DgmB,EAAYjmB,KAAEkmB,EAAelmB,KACpCI,EAA0CH,WAA4B,IAA/DkmB,EAAa/lB,KAAEgmB,EAAgBhmB,KA6CtC,OA3CAW,aAAU,WACR,IAvBcslB,EACZC,EAsBIC,EAAqB,WACzB,GAAKP,EAAaxnB,QAAlB,CAEA,IAAM3F,EAAiBmtB,EAAaxnB,QAAQ6P,YACxCmY,EAAe,EACbC,EAA6B,GAC7BvqB,EAA8B,GAEpCoL,EAAMmV,SAAQ,SAAA1X,GAERyhB,EADmB,IACc3tB,EAAiB,IACpD4tB,EAAQ/J,KAAK3X,GACbyhB,GAHqB,IAKrBtqB,EAASwgB,KAAK3X,MAIlBmhB,EAAgBO,GAChBL,EAAiBlqB,KAGbwqB,GA7CQL,EA6CgBE,EA3CzB,sCAAII,MAAWvJ,MAAAwJ,GAAAC,IAAAA,EAAAD,EAAAC,IAAXF,EAAWE,GAAAC,UAAAD,GACpBE,aAAaT,GACbA,EAAUU,YAAW,WAAA,OAAMX,EAAIY,aAAIN,KAyCe,OAG5CpoB,EAAiB,IAAIE,kBAAe,WACxCioB,OAWF,OARIV,EAAaxnB,SACfD,EAAeU,QAAQ+mB,EAAaxnB,SAItC+nB,IAGO,WACLhoB,EAAeW,gBAEhB,CAACoI,IAIAvR,uBACEmI,IAAK8nB,EACL9oB,UAAW0C,eAAazE,EAAO2Q,UAAW5O,GAC1CkC,MAAKrD,GAAIpB,SAAAA,GAAairB,IAEtB7vB,gBAAC4Q,GAAM5M,cAAWiM,cAAc,SAASD,gBAAgB,SACtDkgB,EAAavd,KAAI,SAAC3D,EAAM8J,GACvB,OACE9Y,gCACG8Y,IAAUiX,EAChB/vB,gBAAC4Q,GACD5M,cACAiM,cAAc,SACdD,gBAAgB,QAChBI,UAAW,EACXhL,OAAQ,CAAEe,SAAU,WAEnB6I,EAAKG,KACFnP,EAAMmxB,aAAaniB,EAAKG,KAAM,CAC5B9F,MAAO,CAAEgN,SAAmB,UAATtD,EAAmB,OAAkB,WAATA,EAAoB,OAAS,UAE9E,KACJ/S,gBAAC+Y,QACC9Y,IAAK+O,EAAKE,MACV/H,UAAW0C,eACTzE,EAAO8Q,eACPE,EAAUpH,EAAM+D,GAChBqD,EAAUpH,EAAM,2BAEL,QAEZA,EAAKE,QAIDlP,gBAAC4X,UACCzI,KAAMH,EAAKG,KAAOH,EAAKG,KAAO,KAC9BlP,IAAK+O,EAAKE,MACVqD,WAAW,cACXpL,aAAc/B,EAAO8Q,eACrB/E,QAASnC,EAAKmC,SAEdnR,gBAAC+Y,QAAK5R,UAAWiP,EAAUpH,EAAM+D,IAC9B/D,EAAKE,QAIX4J,EAAQoX,EAAavvB,OAAS,GAC7BX,gBAACoxB,uBACC/nB,MAAO,CACLgN,SACW,UAATtD,EACI,OACS,WAATA,EACA,OACA,cAQjBqd,EAAczvB,OAAS,GACtBX,gBAACqR,IAAaE,MAAO6e,EAAe5e,MAAOA,+BF7GO,SAC9D9K,GAEA,IAAQtB,EAAWgV,KAAXhV,OACF+iB,EAAcrR,SAAuB,MAC3C7M,EAAkCC,WAAwB,MAAnD6a,EAAS9a,KAAE8kB,EAAY9kB,KAE5BkW,EAOEzZ,EAPFyZ,OAAMkR,EAOJ3qB,EANF7B,OAAAA,WAAMwsB,EAAG,IAAGA,EACZ7f,EAKE9K,EALF8K,MACAoc,EAIElnB,EAJFknB,YACAD,EAGEjnB,EAHFinB,cACAD,EAEEhnB,EAFFgnB,aACA4D,EACE5qB,EADF4qB,aAEIC,EAAeza,SAAe,GAGpCzM,EAAsCH,WACpC,IAAIyS,MADC2F,EAAWjY,KAAEojB,EAAcpjB,KAIlCmnB,EAAwCtnB,WACtCrK,EAAe4pB,OADVC,EAAY8H,KAAE7H,EAAe6H,KAI5BpL,EAAqBT,GAC3BxF,EACAkI,KAAKC,iBAAiBC,kBAAkBpC,UAFlCC,iBAKFqL,EAAkBzxB,eAAkB,SAACogB,GACzC,IAAM0C,EAAQ1C,EAAKsO,WACbgD,EAAkBC,eAAavR,GAC/BkN,EAAiB2B,cAAYyC,GAcnC,OAXqBrK,MAAMC,KACzB,CAAE3mB,OAHuB,KAIzB,SAAC4mB,EAAGzO,GACF,IAAM8Y,EAAchJ,UAAQ0E,EAAgBxU,GAC5C,MAAO,CACL4B,IAAKkX,EAAYrL,UACjBlE,aAAcuP,EAAYlD,aAAe5L,EACzC1C,KAAMwR,QAKX,IAGGC,EAAoB7xB,eACxB,SAACogB,GACKuN,GACFA,EAAcvN,GAEhBqN,EAAerN,KAEjB,CAACkC,IAGGwP,EAAkB9xB,eACtB,SAACogB,GACKwN,GACFA,EAAYxN,GAEdqN,EAAerN,KAEjB,CAACkC,IAGGyP,EAAmB/xB,eACvB,SAACogB,GACKsN,GACFA,EAAatN,GAEfqN,EAAerN,KAEjB,CAACkC,IAGG0P,EAAmBhyB,eACvB,SAACulB,GACK+L,GACFA,EAAa/L,GAEfoE,EAAgBpE,KAElB,CAACmE,IAKGuI,EAAkBjyB,eACtB,SAACkyB,SACS9R,EAAS8R,EAAT9R,KAMR,cAAO+R,EALa/L,EAClB9D,EAAY8P,cACZ9P,EAAYoM,YAEItO,EAAKqG,cAActlB,MAAM,KAAK,YACzCgxB,EAAwBE,SAAQ,SAACC,GAAI,OAAKA,OAAS,KAE5D,CAAChQ,IAGHtX,aAAU,WACR,IAAM2lB,EAAe,WAGfxI,EAAY1f,SACdwoB,YAAW,WACT,GAAI9I,EAAY1f,QAAS,CACvB,IAAM8pB,EAAsBpK,EAAY1f,QAAQ4mB,kBAC1CjqB,EAAOiV,uCAGTkY,IACFxD,EAAawD,EAAoB/Z,cACjC+Y,EAAa9oB,QAAU8pB,EAAoB/Z,iBAG9C,MAGD2W,EAAW,IAAIzmB,iBAAeioB,GAOpC,OANIxI,EAAY1f,SACd0mB,EAASjmB,QAAQif,EAAY1f,SAE/BkoB,IAEApvB,OAAOmW,iBAAiB,SAAUiZ,GAC3B,WACLxB,EAAShmB,aACT5H,OAAOoW,oBAAoB,SAAUgZ,MAEtC,CAACxI,IAIJ,IAAMqK,EAAkBxyB,QAAW,WACjC,OACEA,gBAAC4Q,GACC/L,OAAQA,EACRF,MAAO,OACPsL,cAAc,QACdD,gBAAgB,SAEhBhQ,uBAAKmH,UAAW/B,EAAOiV,gBAAiBlS,IAAKggB,GAC1CmH,GAAW3c,KAAI,SAAC+H,GAAG,OAClB1a,gBAACsZ,SAAMrZ,IAAKya,EAAKvT,UAAW/B,EAAOoV,WAChCE,MAGJ+W,EAAgBnP,GAAa3P,KAAI,SAACuf,EAASpZ,GAC1C,IAAQ4B,EAAsBwX,EAAtBxX,IACFyF,EADwB+R,EAAjB7P,aACiB4P,EAAgBC,GAAW,GACzD,OACElyB,gBAACoiB,IACCniB,IAAK6Y,EACL4B,IAAKA,EACL0F,KAAM8R,EAAQ9R,KACdiC,aAAc6P,EAAQ7P,aACtBlC,OAAQA,EACRG,aAAcyE,GAAa,YASnC0N,EAAiBzyB,QAAW,WAChC,OACEA,gCACG0pB,IAAiB7pB,EAAe4qB,MAC/BzqB,gBAACmqB,IAAShK,OAAQA,EAAQhF,WAAYmH,EAAazd,OAAQA,QAM7D6tB,EAAgB1yB,QAAW,WAC/B,OACEA,gCACG0pB,IAAiB7pB,EAAeuiB,KAC/BpiB,gBAACioB,IAAQ9M,WAAYmH,EAAanC,OAAQA,EAAQtb,OAAQA,QAO5D8tB,EAAgB3yB,eAAkB,WACtC,OAAQ0pB,GACN,KAAK7pB,EAAe4pB,MAClB,OAAOzpB,gBAACwyB,QACV,KAAK3yB,EAAe4qB,KAClB,OAAOzqB,gBAACyyB,QACV,KAAK5yB,EAAeuiB,IAClB,OAAOpiB,gBAAC0yB,QACV,QACE,OAAO1yB,gBAACwyB,WAEX,CAAC9I,EAAc8I,EAAiBC,EAAgBC,IAEnD,OACE1yB,gCACEA,gBAACiS,oBAAiBzR,MAAM,oBACtBR,gBAACkS,kBAAeV,YAAOA,EAAAA,EAASohB,iBAC9B5yB,gBAAC4Q,GAAM/L,OAAQ,OAAQoL,cAAc,SACnCjQ,gBAACutB,IACC7D,aAAcA,EACd8D,eAAgBwE,EAChB1P,YAAaA,EACbmL,eAAgBA,EAChBC,aAAcqE,EACdpE,cAAekE,EACfjE,YAAakE,IAEf9xB,gBAAC2yB,sEvCnOY,SACvBjsB,GAEA,IAAQS,EAA4BT,EAA5BS,UAAWoK,EAAiB7K,EAAjB6K,MAAOiI,EAAU9S,EAAV8S,MACpBrR,EAAMnI,SAA6B,MACzCoI,EAA0BpI,WAAe,GAAlC2E,EAAKyD,KAAEC,EAAQD,KACtBE,EAA4BtI,WAAe,GAApC6E,EAAMyD,KAAEC,EAASD,KAChBoE,EAAmBD,EAAsB/F,GAAzCgG,eACRmmB,EAA6BC,IAAtBC,EAAQF,KAAE7oB,EAAQ6oB,KACrBztB,EAASuH,IACbqmB,EAOI9nB,EAAkBxE,EAAO/B,GAN3BiH,EAAconB,EAAdpnB,eACAQ,EAAY4mB,EAAZ5mB,aACAL,EAAgBinB,EAAhBjnB,iBACAD,EAAeknB,EAAflnB,gBACAS,EAAcymB,EAAdzmB,eAGF0mB,EAAmFlpB,EAAmBC,GAA9FG,EAAe8oB,EAAf9oB,gBAAiBG,EAAe2oB,EAAf3oB,gBAAiBE,EAAiByoB,EAAjBzoB,kBAAmBG,EAAiBsoB,EAAjBtoB,kBAyB7D,OAvBA3K,aAAgB,WACd,IAAIwI,EAeJ,OAdIL,EAAIM,UAGND,EAAiB,IAAIE,kBAAe,SAACC,GACnC,QAA2BC,EAA3BC,EAAAC,EAAoBH,KAAOC,EAAAC,KAAAE,MAAE,CAAA,IAC3BC,EADcJ,EAAApI,MACkByI,YAAjBpE,EAAMmE,EAANnE,OACfwD,EADaW,EAALrE,OAER4D,EAAU1D,OAGdwD,EAASF,EAAIM,QAAQyqB,aACrB3qB,EAAUJ,EAAIM,QAAQ0qB,cACtB3qB,EAAeU,QAAQf,EAAIM,UAEtB,WACDD,GACFA,EAAeW,gBAGlB,IAGDnJ,gCACEA,uBACEiR,GAAG,YACH9J,UAAW0C,eAAa1C,EAAW,SACnCkC,MAAKrD,KAAO0G,EAAe/H,EAAOE,IAClCsD,IAAKA,GAELnI,uBAAKmH,UAAWyE,GACd5L,gBAACozB,aACCjsB,UAAW/B,EAAOyH,aAGjB2M,GAGHxZ,uBAAKmH,UAAWoF,GACdvM,gBAAC4X,UACCzG,QAAS3G,EACT6oB,SAAUlpB,EACVoI,WAAW,SACXpD,KAAMnP,gBAACszB,6BAETtzB,gBAAC4X,UACCzG,QAASxG,EACT0oB,SAAU/oB,EACViI,WAAW,SACXpD,KAAMnP,gBAACoxB,gCAKbpxB,uBAAKmH,UAAW2E,EAAiB3D,IAAK4qB,GACpC/yB,uBAAKmH,UAAW4E,GACbwF,EAAMoB,KAAI,SAAC3D,EAAM8J,GAAK,OACrB9Y,uBAAKmH,UAAWiF,EAAcnM,IAAK6Y,GAChC9J,0B0CzGsD,SAACtI,GACtE,IAAQS,EAAwBT,EAAxBS,UAAW8G,EAAavH,EAAbuH,SAEb9F,EAAMnI,SAA6B,MACzCoI,EAA0BpI,WAAe,GAAlC2E,EAAKyD,KAAEC,EAAQD,KACtBE,EAA4BtI,WAAe,GAApC6E,EAAMyD,KAAEC,EAASD,KAChB6E,EAAiBD,EAAgBxG,GAAjCyG,aAmCR,OAxBAnN,aAAgB,WACd,IATgBswB,EACZC,EAgBEgD,GAjBUjD,EASK,SAAC3nB,GACpB,QAA2BC,EAA3BC,EAAAC,EAAoBH,KAAOC,EAAAC,KAAAE,MAAE,CAAA,IAC3BC,EADcJ,EAAApI,MACkByI,YAAjBpE,EAAMmE,EAANnE,OACfwD,EADaW,EAALrE,OAER4D,EAAU1D,KAXP,sCAAI+rB,MAAWvJ,MAAAwJ,GAAAC,IAAAA,EAAAD,EAAAC,IAAXF,EAAWE,GAAAC,UAAAD,GACpBE,aAAaT,GACbA,EAAUU,YAAW,WAAA,OAAMX,EAAIY,aAAIN,KAaU,OAEzCpoB,EAAiB,IAAIE,kBAAe,SAACC,GACzC4qB,EAAgB5qB,MAOlB,OAJIR,EAAIM,SACND,EAAeU,QAAQf,EAAIM,SAGtB,WACLD,EAAeW,gBAEhB,IAGDnJ,uBACEiR,GAAG,SACH9J,UAAWA,EACXkC,MAAKrD,KACAmH,EAAaxI,EAAOE,IACvBiC,QAAS,OACTE,eAAgB,SAChBC,WAAY,SACZpC,OAAQ,OACRF,MAAO,SAETwD,IAAKA,GAEJ8F,6B9BU0E,SAApDqF,OAC3B/B,EAAK+B,EAAL/B,MACAiiB,EAAclgB,EAAdkgB,eACAziB,EAAcuC,EAAdvC,eACA0iB,EAAangB,EAAbmgB,cACAjiB,EAAK8B,EAAL9B,MAEMpM,EAjDC,CACL2Q,UAAWlK,MAAI,CACb/E,QAAS,OACT4sB,SAAU,SACVrnB,SAAU,EACVlG,SAAU,SACVF,IAAK,GACLf,aAAc,GACdP,MAAO,SAETgvB,eAAgB9nB,MAAI,CAClB/E,QAAS,cACT8sB,gBAAiB,EACjBC,gBAAiB,WACjB1tB,SAAU,SACV8G,UAAW,QACXH,aAAc,WACdwI,UAAW,eAEbwe,OAAQjoB,MAAI,CACVwH,OAAQ,UACRhH,SAAU,OA6BR0nB,EAAe/zB,eACnB,SAACg0B,GACKjjB,GACFA,EAAeijB,KAGnB,CAACjjB,IAGH,OACE/Q,gBAACi0B,gBACCj0B,gBAACkS,kBAAeV,MAAOA,GACpB,IAEDxR,uBAAKmH,UAAW0C,eAAazE,EAAO2Q,YACjCxE,EAAMoB,KAAI,SAAC3D,GACV,IAAMklB,EAAallB,EAAKiC,KAAOuiB,EAC/B,OACExzB,gBAACm0B,gBAAal0B,IAAK+O,EAAKiC,GAAIA,GAAIjC,EAAKiC,GAAImjB,SAAUF,EAAa,EAAI,GACjET,EAAczkB,EAAMklB,GAAY,WAAA,OAAMH,EAAa/kB,EAAKiC,WAI/DjR,gBAACqR,GAAaE,MAAOA,EAAOR,eAAgBgjB,EAAcviB,MAAOA,6B+B7EnD,SAAK9K,GAC3B,IACE6K,EAaE7K,EAbF6K,MACA7C,EAYEhI,EAZFgI,QAAO2lB,EAYL3tB,EAXF4tB,qBAAAA,WAAoBD,EAAG,GAAEA,EAAAE,EAWvB7tB,EAVF8tB,cAAAA,WAAaD,GAAQA,EAAAE,EAUnB/tB,EATFguB,cAAAA,WAAaD,EAAG,OAAMA,EACtBE,EAQEjuB,EARFiuB,kBACAC,EAOEluB,EAPFkuB,aACAC,EAMEnuB,EANFmuB,iBACAC,EAKEpuB,EALFouB,oBAAmBC,EAKjBruB,EAJFsuB,eAAAA,WAAcD,GAAQA,EACtBE,EAGEvuB,EAHFuuB,eACAC,EAEExuB,EAFFwuB,cACAC,EACEzuB,EADFyuB,qBAGIC,EAAe,SAACpmB,GAAO,OAAauC,EAAM8jB,WAAU,SAACzV,GAAC,OAAKA,IAAM5Q,MAC/DiE,EAAmBD,EAAqBtM,GAAxCuM,eAER7K,EAA0CpI,WACxC,IAAIs1B,IAAIhB,EAAqB3hB,KAAI,SAAC3D,GAAI,OAAKomB,EAAapmB,QADnDumB,EAAantB,KAAEotB,EAAgBptB,KAIhCD,EAAMnI,SAA6B,MAEzCsI,EAA0BtI,WAAe,GAAlC2E,EAAK2D,KAAED,EAAQC,KACtBgiB,EAA4BtqB,WAAe,GAApC6E,EAAMylB,KAAE/hB,EAAS+hB,KAGxBtqB,aAAgB,WACd,IAAIwI,EAGEmoB,EAAe8E,YAAS,SAAC9sB,GAC7B,QAA2BC,EAA3BC,EAAAC,EAAoBH,KAAOC,EAAAC,KAAAE,MAAE,CAAA,IAC3BC,EADcJ,EAAApI,MACkByI,YAAjBpE,EAAMmE,EAANnE,OACfwD,EADaW,EAALrE,OAER4D,EAAU1D,MAEX,KAOH,OALIsD,EAAIM,UACND,EAAiB,IAAIE,iBAAeioB,IACrBznB,QAAQf,EAAIM,SAGtB,WACDD,GACFA,EAAeW,aAEjBwnB,EAAa+E,YAEd,IAGH11B,aAAgB,WACVs0B,EAAqB3zB,OAAS,GAChC60B,EAAiB,IAAIF,IAAIhB,EAAqB3hB,KAAI,SAAC3D,GAAI,OAAKomB,EAAapmB,UAE1E,CAACslB,EAAsB/iB,IAG1B,IAAMokB,EAA2CjnB,EAAQiE,KAAI,SAACijB,GAAS,OACrEC,oBAAqB,CACnBC,SAAUF,EAAUG,OACpBC,iBAAkB,WAAF,OAAQh2B,gBAACqlB,mBAAauQ,EAAUlsB,SAChDusB,WAAY,SAACjnB,GAAI,IAAAknB,EAAA,OACfl2B,gBAACm2B,mBAAgBC,MAAOR,EAAUQ,MAAQR,EAAUQ,MAAMpnB,QAAQ9I,GAC/D0vB,EAAUS,SAAWT,EAAUS,SAASrnB,GAAQyY,cAAMyO,EAAClnB,QAAK4mB,SAAAA,EAAWG,SAAOG,EAAI,MAGvFI,QAASV,EAAUW,WA8BjBC,EAAax2B,eACjB,SAACM,EAA0C0O,GACzC1O,EAAEm2B,kBACoB,QAAlB/B,GACEC,GACFA,EAAkB,CAAC3lB,MAIzB,CAAC0lB,EAAeC,IAGZvvB,EAASpF,WAAc,WAAA,OAAMiT,EAAetO,EAAOE,KAAS,CAACF,EAAOE,IAEpE6xB,EAAqB12B,WAAc,WACvC,MAAsB,QAAlB00B,EACKtvB,EAAO+N,aAET,KACN,CAACuhB,EAAetvB,EAAO+N,eAEpBwjB,EAAqB32B,eAAkB,WAC3C,OACEA,gBAAC42B,qBACE,SAAAtjB,GAAA,IAAGtE,EAAIsE,EAAJtE,KAAW,OACbhP,gBAAC62B,eACC52B,IAFWqT,EAALwjB,MAGN3vB,UAAWuvB,EACXvlB,QAAS,SAAC7Q,GAAwC,OAAKk2B,EAAWl2B,EAAG0O,MAEpE,SAAA8B,GAAa,OACZ9Q,gBAAC+2B,qBAAcd,EADHnlB,EAAVmlB,YACwBjnB,YAMnC,CAACwnB,EAAYE,IAEVM,EAAUh3B,WAAc,WAAA,OAAMuR,EAAM5Q,SAAWu0B,IAAe,CAAC3jB,EAAO2jB,IAEtE+B,EAAoBj3B,eAAkB,WAC1C,OAAIk1B,EACKl1B,sCAAIm1B,EAAAA,EAAyBn1B,gBAAC4S,SAEnCokB,EACKh3B,gBAAC22B,QACEzB,GAAkB3jB,EAAM5Q,OAG7BX,iCAFEA,gCAAGi1B,KAGX,CAAC+B,EAAS9B,EAAe3jB,EAAO0jB,IAEnC,OACEj1B,uBAAKmI,IAAKA,EAAKhB,UAAW/B,EAAO8N,gBAC/BlT,gBAACk3B,YACCC,GAAG,MACH5lB,MAAOA,EACPojB,kBAnFwB,SAC5B/J,EACAI,GAEA,IAAMoM,EAAmB,IAAI9B,IAQ7B,GAPAtK,EAAKuK,cAAc7O,SAAQ,SAACzV,GAC1B,IAAM6H,EAAQ5V,OAAO+N,GAChBomB,MAAMve,IACTse,EAAiBE,IAAIxe,MAGzB0c,EAAiB4B,GACbzC,EAAmB,CACrB,IAAM4C,EAAkBlQ,MAAMC,KAAK8P,GAAkBzkB,KAAI,SAACmG,GAAK,OAAKvH,EAAMuH,MAC1E6b,EAAkB4C,KA2EhBC,SAAUhD,EACV9lB,QAASinB,EACTjB,cAAiC,SAAlBA,GAA8C,QAAlBA,OAA0BxuB,EAAawuB,EAClFa,cAAeA,EACfV,iBAAkBA,EAClBD,aA3EmB,SAAChK,EAA+B6M,GACnD7C,GACFA,EAAa6C,IA0EX3C,oBAAqBA,EACrB4C,iBAAkB1C,EAClB2C,wBAAyB,CAAEC,gBAAgB,IAE3C53B,gBAAC63B,sBACC73B,gBAAC62B,oBACE,SAAAvlB,GAAmB,OAAOtR,gBAAC83B,2BAAoB9B,EAA5B1kB,EAAhB0kB,yBAGRh2B,gBAACi3B,iCC9LmD,SAAlC3jB,OACxBykB,EAAOzkB,EAAPykB,QACAC,EAAQ1kB,EAAR0kB,SACAC,EAAU3kB,EAAV2kB,WACAC,EAAQ5kB,EAAR4kB,SACAhpB,EAAKoE,EAALpE,MACAipB,EAAW7kB,EAAX6kB,YACAC,EAAO9kB,EAAP8kB,QACAC,EAAW/kB,EAAX+kB,YACAC,EAAQhlB,EAARglB,SACAvlB,EAAIO,EAAJP,KACAwlB,EAAIjlB,EAAJilB,KAEAtuB,EAA0CC,WAAiB,IAApDsuB,EAAavuB,KAAEwuB,EAAgBxuB,KACtCI,EAA0BH,WAAiB,IAApCtK,EAAKyK,KAAEquB,EAAQruB,KAiBhBsuB,EAAkB34B,WAAc,WACpC,OAAOJ,EAAQ,QAA0B,YAAhBy4B,EAA4B,UAA4B,SAAhBA,EAAyB,UAAY,SACrG,CAACz4B,EAAOy4B,IAGLO,EAAoB54B,WAAc,WAAA,OAAMJ,GAASw4B,IAAS,CAACx4B,EAAOw4B,IAElES,EAAoB74B,eAAkB,WAC1C,OAAQ24B,GACN,IAAK,QACH,OAAO34B,gBAAC84B,4BACV,IAAK,UACH,OAAO94B,gBAAC+4B,wBACV,IAAK,UACH,OAAO/4B,gBAACg5B,gCACV,QACE,OAAO,QAEV,CAACL,IAEJ,OACE34B,gBAACi5B,SACC/pB,MAAOA,EACPopB,SAAUA,EACVM,kBAAmBA,EACnBM,sBAAuBL,IACvB9lB,KAAMA,EACNwlB,KAAMA,EACNI,gBAAiBA,GAEjB34B,gBAACm5B,YACChB,YAAaA,EACbH,SA/CwB,SAACoB,EAA4CC,GACzE,IAAM74B,SAAQ64B,SAAAA,EAAQ74B,QAAS,GAC/Bi4B,EAAiBj4B,GAGjB,IAAM84B,EAAkBpB,EAAWA,EAAS13B,GAAS,GACrDk4B,EAASY,IAGJA,GAAmBtB,GACtBA,EAASx3B,IAsCPA,MAAOg4B,GAENT,EAAQplB,KAAI,SAAC0mB,GAAM,OAClBr5B,gBAACu5B,UACCt5B,IAAKo5B,EAAO74B,MACZA,MAAO64B,EAAO74B,MACd6yB,SAAUgG,EAAOhG,SACjBmG,UAAWH,EAAOG,UAClBrC,GAAIkC,EAAOlC,GACXsC,KAAMJ,EAAOI,MAAQ,IAEpBxB,GAAcA,EAAWoB,0C7B5DH,SAAHvoB,OAC9BS,EAAKT,EAALS,MACA0mB,EAAUnnB,EAAVmnB,WACAyB,EAAY5oB,EAAZ4oB,aAEAjoB,EAA8CC,oBAE9C,OAFyCD,EAAbG,cAO1B5R,gBAACmS,YACCnS,gBAACoS,eAAYC,6BACXrS,gBAACsS,cAAWnK,IATPsJ,EAAHtJ,SAAkBsJ,EAAbE,yBAWT3R,gBAACyS,mBACCzS,gBAAC0S,gBACEnB,EAAMoB,KAAI,SAAC3D,GAAI,OACdhP,gBAAC6Q,GAAiB5Q,IAAKy5B,EAAa1qB,GAAOiC,GAAIyoB,EAAa1qB,IACzDipB,EAAWjpB,UAZf,oCVxBW,SAACtI,GACrB,IAOqBizB,EAAcC,EAC7BC,EARE1yB,EAA4DT,EAA5DS,UAAW8G,EAAiDvH,EAAjDuH,SAAQ6rB,EAAyCpzB,EAAvCqzB,aAAAA,WAAYD,EAAGtrB,EAAmBsrB,EACzD3xB,EAAMnI,SAA6B,MACzCoI,EAA0BpI,WAAe,GAAlC2E,EAAKyD,KAAEC,EAAQD,KACtBE,EAA4BtI,WAAe,GAApC6E,EAAMyD,KAAEC,EAASD,KAExB0xB,EAAyC9rB,EAAelI,KAAMU,GAAOqzB,aAAAA,KAA7D3rB,EAAU4rB,EAAV5rB,WAAYG,EAAgByrB,EAAhBzrB,iBAUdoiB,EANG3wB,eAAkB,sCAAI4wB,MAAWvJ,MAAAwJ,GAAAC,IAAAA,EAAAD,EAAAC,IAAXF,EAAWE,GAAAC,UAAAD,GACtCE,aAAa6I,GACbA,EAAQ5I,YAAW,WAAA,OAAM0I,EAAEzI,aAAIN,KAAOgJ,KACrC,CALgBD,EAQY,SAACh1B,EAAeE,GAC/CwD,EAAS1D,GACT4D,EAAU1D,IAVuB+0B,EAWhC,MAgBH,OAdA55B,aAAgB,WACd,GAAKmI,EAAIM,QAAT,CAEA,IAAM0mB,EAAW,IAAIzmB,kBAAe,SAACC,GACnC,QAA2BC,EAA3BC,EAAAC,EAAoBH,KAAOC,EAAAC,KAAAE,MAAE,CAAA,IAC3BC,EADcJ,EAAApI,MACkByI,YAChC0nB,EADa3nB,EAALrE,MAAaqE,EAANnE,YAMnB,OAFAsqB,EAASjmB,QAAQf,EAAIM,SAEd,WAAA,OAAM0mB,EAAShmB,iBACrB,CAACwnB,IAGF3wB,uBACEiR,GAAG,UACH9J,UAAW0C,eAAa1C,EAAWoH,GACnClF,MAAKrD,KACAoI,EAAWzJ,EAAOE,IACrBo1B,kBAAmBF,EAAatrB,MAAMyrB,KAAK,KAC3C1tB,oBAAqButB,EAAarrB,QAClC4L,iBAAkByf,EAAaprB,OAEjCxG,IAAKA,GAEJnI,WAAe2S,IAAI1E,GAAU,SAACksB,EAAOrhB,GACH,IAAAshB,EAAAC,EAAjC,OAAIr6B,iBAAqBm6B,GAGrBn6B,uBACEC,IAAK6Y,EACLzP,MAAO,CACLixB,gBAAQF,SAAAC,EALOF,EAKQzzB,cAAb2zB,EAAoBE,MAAIH,UAAYthB,IAG/CqhB,GAIAA,0BwCtEY,SAACzzB,GAE1B,OACE1G,gCACIA,uBAAKqJ,MAAO,CAACixB,SAHU5zB,EAAnB6zB,OAAmB7zB,EAAbuH,yDCWuD,SACvEvH,GAEA,IAAQylB,EAAwCzlB,EAAxCylB,UAAW3S,EAA6B9S,EAA7B8S,MAAO7P,EAAsBjD,EAAtBiD,YAAawF,EAASzI,EAATyI,KACjC/J,EAASoP,KAEf,OACExU,gCACEA,uBAAKmH,UAAW/B,EAAO4P,qBACrBhV,uBACEmH,UAAW/B,EAAO6P,oBAClBjV,gBAAC4X,UACCrF,WAAW,SACXpL,UAAW/B,EAAOqP,YAClBtD,QAAS,SAACqpB,GACRA,EAAG/D,kBACH+D,EAAGC,iBACHtO,GAAU,IACZhd,KAAMnP,gBAAC06B,2BAGT16B,uBAAKmH,UAAW/B,EAAOgQ,4BACpBpV,iBAAqBmP,GAAQA,EAAOnP,gBAACqP,QAAKF,KAAMA,IACjDnP,uBAAKmH,UAAW/B,EAAOoQ,oCACpBxV,iBAAqBwZ,GACpBA,EAEAxZ,gBAACga,aAAU7S,UAAW/B,EAAOiQ,mBAAoBmE,GAElDxZ,iBAAqB2J,GACpBA,EAEA3J,gBAACwP,YAASrI,UAAW/B,EAAOmQ,yBAA0B5L,MAK9D3J,uBAAKmH,UAAW/B,EAAOyP,yDtCzB4C,SACzEnO,GAEA,IAAQqM,EAAiDrM,EAAjDqM,KAAM7D,EAA2CxI,EAA3CwI,MAAOyrB,EAAoCj0B,EAApCi0B,cAAetxB,EAAqB3C,EAArB2C,MAAOlC,EAAcT,EAAdS,UAErC/B,EAASsK,IACf,OACE1P,uBAAKmH,UAAW/B,EAAOuK,MACrB3P,gBAAC46B,WACCvxB,MAAOA,EACPlC,UAAW0C,eAAazE,EAAOwK,QAASzI,GACxC4L,KAAMA,EACN7D,MAAOA,EACPyrB,cAAeA,4FuCdgC,SAA/BrnB,OAAkCI,EAAMJ,EAANI,OAAQqkB,EAAOzkB,EAAPykB,QAAS8C,EAAOvnB,EAAPunB,QACzE5wB,EAAkCC,gBAA6BhE,GAAxD40B,EAAS7wB,KAAE8wB,EAAY9wB,KAC9BtK,QAAQwa,IAAI2gB,GACZ,IAAME,EAAYlkB,SAA0B,MAC5CzM,EAAwCH,WAAiB,KAAlD+wB,EAAY5wB,KAAE6wB,EAAe7wB,KAE5B8wB,EAAkCpD,EAAlCoD,QAASC,EAAyBrD,EAAzBqD,OAAQpH,EAAiB+D,EAAjB/D,OAAQ5iB,EAAS2mB,EAAT3mB,KAE3BiqB,EAAc5wB,eAAY,WAC9BowB,MACC,CAACA,IAEES,EAAsB7wB,eAC1B,SAAC2M,GACC,GAAIA,EAAMmkB,SAAWh6B,OAAOC,SAAS+5B,OAArC,CAEA57B,QAAQwa,IAAI,uBAAwB/C,EAAM4T,MAC1C,IAAAwQ,EAAyBC,KAAKC,MAAMtkB,EAAM4T,MAA5BnmB,EAAM22B,EAAN32B,OACd,OADY22B,EAAJpqB,MAEN,IAAK,gBACHiqB,IACA,MACF,IAAK,eACHH,EAAgBr2B,OAYtB,CAACw2B,IAwCH,OArCArwB,aAAU,WAER,OADAzJ,OAAOmW,iBAAiB,UAAW4jB,GAC5B,WACL/5B,OAAOoW,oBAAoB,UAAW2jB,MAEvC,CAACA,IAEJtwB,aAAU,WACR,GAAI0I,EAAQ,CACV,IAGMioB,GAAY,IAAIhf,MAAOif,UAEvBL,EAASr5B,mBAAmBX,OAAOC,SAAS+5B,QAC5CM,EAAa35B,mBAAmBkP,GAEhChR,EACD+6B,EAAAA,wCACQC,iBACIpH,EAFZmH,2DAMWQ,EANXR,yBALkB,gBAcPU,EATXV,sBAWQI,EACX57B,QAAQwa,IAAI/Z,GACd26B,EAAa36B,QAEb26B,OAAa70B,KAEd,CAACwN,EAAQynB,EAASC,EAAQpH,IAG3Bh0B,gBAACyT,IAAaC,OAAQA,EAAQyY,UAAWkP,EAAav2B,UAAW,eAE/D9E,0BACEmI,IAAK6yB,EACLc,IAAKhB,GAAa,GAClBzxB,MAAO,CAAE1E,MAAO,OAAQE,OAAQo2B,EAActgB,OAAQ,QACtDohB,OAAQ,WAAF,OAAQp8B,QAAQwa,IAAI,0CC/FqC,SACrEzT,GAEA,IAAQ2xB,EAAmC3xB,EAAnC2xB,YAAapqB,EAAsBvH,EAAtBuH,SAAUmqB,EAAY1xB,EAAZ0xB,QACzBhzB,EAASqQ,KACfrN,EAAkDpI,WAAmC,MAA9Eg8B,EAAiB5zB,KAAE6zB,EAAoB7zB,KAExC8zB,EAAcl8B,eAAkB,WACpC,OACEA,gCACEA,uBAAKmH,UAAW/B,EAAOuQ,gBACrB3V,uBAAKmH,UAAW/B,EAAOyQ,WACrB7V,gBAACqP,QACCF,KAAK,iCACLxK,MAAM,KACNE,OAAO,KACPyK,MAAOrL,SAAOk4B,gCAGlBn8B,gBAACsZ,aAAO8e,OAIb,CAACA,EAAShzB,EAAOuQ,eAAgBvQ,EAAOyQ,YAiB3C,OAfA7V,aAAgB,WACd,OAAQq4B,GACN,KAAKz9B,EAAawhC,QAChBH,EACEj8B,gBAACq8B,4BAAyBC,YAAar4B,SAAOs4B,iCAEhD,MACF,KAAK3hC,EAAa4hC,KAChBP,EAAqBj8B,gBAACy8B,iBAAcH,YAAar4B,SAAOy4B,oCAK3D,CAACrE,IAEAA,IAAgBz9B,EAAa+hC,MACxB38B,gBAACk8B,QAIRl8B,gCACEA,uBAAKmH,UAAW/B,EAAOuK,MACpBqsB,EACDh8B,gBAACqlB,mBAAa+S,GACbnqB,mBC7DY,SACnBvH,GAIA,IAAMyB,EAAMnI,SAA6B,MACzCoI,EAA0BpI,WAAe,GAAlC2E,EAAKyD,KAAEC,EAAQD,KAEf0H,EAAgBD,EAAenJ,GAA/BoJ,YAuBP,OArBA9P,aAAgB,WACd,IAAIwI,EAYJ,OAXIL,EAAIM,UAEJD,EAAiB,IAAKE,kBAAe,SAACC,GACtC,QAA2BC,EAA3BC,EAAAC,EAAoBH,KAAOC,EAAAC,KAAAE,MAEzBV,EAFcO,EAAApI,MACayI,YAAnBtE,WAKGuE,QAAQf,EAAIM,SAEtB,WACDD,GACFA,EAAeW,gBAGlB,IAIDnJ,gCACCA,uBAAMiR,GAAG,SAAW5H,MAAOyG,EAAYnL,GAAUwD,IAAKA,wCCtBjC,SACxBzB,GAEA,IAAQuH,EAA0EvH,EAA1EuH,SAAU2uB,EAAgEl2B,EAAhEk2B,KAAMC,EAA0Dn2B,EAA1Dm2B,cAAeC,EAA2Cp2B,EAA3Co2B,OAAQvG,EAAmC7vB,EAAnC6vB,MAAOwG,EAA4Br2B,EAA5Bq2B,UAAW7sB,EAAiBxJ,EAAjBwJ,aACzDhM,EAAkBpE,IAAlBoE,cACFiE,EAAMnI,SAA6B,MACzCoI,EAA0BpI,WAAe,GAAlC2E,EAAKyD,KAAEC,EAAQD,KACtBE,EAA4BtI,WAAe,GAA5BuI,EAASD,KAElBqF,EAAazJ,EAAcwC,EAAO/B,EAF3B2D,MAIbtI,aAAgB,WACd,IAAIwI,EAYJ,OAXIL,EAAIM,UAEND,EAAiB,IAAIE,kBAAe,SAACC,GACnC,QAA2BC,EAA3BC,EAAAC,EAAoBH,KAAOC,EAAAC,KAAAE,MAAE,CAAA,IAC3BC,EADcJ,EAAApI,MACkByI,YAAjBpE,EAAMmE,EAANnE,OACfwD,EADaW,EAALrE,OAER4D,EAAU1D,QAGCqE,QAAQf,EAAIM,SAEtB,WACDD,GACFA,EAAeW,gBAGlB,IAEH,IAAM/D,EAAMY,KACP2H,GACHovB,UAAWA,EACXxG,MAAOA,EACP1xB,OAAQqL,EAAe,OAAS,OAChC8sB,SAAUJ,EAAwB,kBAATA,EAAqB,EAAIA,OAAQ12B,EAC1D+2B,WAAYJ,IAAmBD,IAASE,EAAU,EAAI,EACtDzwB,SAAU,EACVwH,UAAW,EACXlP,MAAO,SAIT,OACE3E,gCACEA,uBAAKmI,IAAKA,EAAKkB,MAAOjE,GACnB6I,kCCzD2B,SAACvH,GACnC,IAAQtB,EAAWsB,EAAXtB,OAEAlB,EAAkBpE,IAAlBoE,cAcR,MAAO,CAAEg5B,kBAbiBl9B,eACxB,SAAC8C,EAAwB8D,GAGvB,OAAAZ,KADmB9B,EAAcwC,EAAO5D,EAAgB8D,GAGnDxB,KAIP,CAAClB,EAAewC,EAAOtB,sPzDRE,WAG3B,IAAM+3B,EAAmB1yB,yBAAW,IAAA6I,EAAA8pB,EAAAC,IAAAC,MAAC,SAAAC,EAAOn9B,GAAW,IAAAo9B,EAAA,OAAAH,IAAAltB,eAAAstB,GAAA,cAAAA,EAAA7kB,KAAA6kB,EAAAC,MAAA,OAAA,OAAAD,EAAAC,OACnCC,MAAMv9B,GAAKw9B,MAAK,SAACC,GAAQ,OAAKA,EAASpE,UAAO,OAGhC,OAF1B+D,EAAQM,KADLL,EAAAM,MAGuBN,EAAAO,gBADf,6BACUR,GACb,OAAA,UAAA,OAAAC,EAAAQ,UAAAV,OACf,gBAAAW,GAAA,OAAA5qB,EAAA4d,WAAAH,eAAE,IAEGoN,EAAiB1zB,yBAAW,IAAAqG,EAAAssB,EAAAC,IAAAC,MAAC,SAAAc,EAAOC,EAAoBC,EAAsBC,GAAqB,OAAAlB,IAAAltB,eAAAquB,GAAA,cAAAA,EAAA5lB,KAAA4lB,EAAAd,MAAA,OAAA,OAAAc,EAAAR,gBAGhG,IAAIS,SAAQ,SAACC,EAASC,GAC3B,IAAMl1B,EAAQ,IAAIm1B,MAClBn1B,EAAMo1B,YAAc,YACpBp1B,EAAMiO,iBAAiB,QAAQ,iBAKzBonB,EAJEC,EAAatnB,SAASunB,cAAc,UAC1CD,EAAWp6B,YAAQ25B,EAAAA,EAAe70B,EAAM9E,MACxCo6B,EAAWl6B,aAAS05B,EAAAA,EAAgB90B,EAAM5E,aAC1Ck6B,UAAUE,EAAVF,EAAYG,WAAW,QAAvBD,EAA8BE,UAAU11B,EAAO,EAAG,QAAG60B,EAAAA,EAAe70B,EAAM9E,YAAO45B,EAAAA,EAAgB90B,EAAM5E,QAEvG,IACEi6B,EAAYC,EAAWK,UAAU,YAAa,GAC9CV,EAAQI,GACR,MAAOO,GACHh5B,GACF1G,QAAQC,6CAA8Cy/B,EAAcjH,aAEtEuG,EAAOU,OAGX51B,EAAMiO,iBAAiB,SAAS,SAAC2nB,GAC3Bh5B,GACF1G,QAAQC,0DAA0Dy/B,EAAIjH,aAExEuG,EAAOU,MAET51B,EAAMqyB,IAAMuC,MACZ,OAAA,UAAA,OAAAG,EAAAP,UAAAG,OACH,gBAAAkB,EAAAC,EAAAC,GAAA,OAAA1uB,EAAAogB,WAAAH,eAAE,IAEG0O,EAAgBh1B,eAAY,SAACugB,GACjC,OAAQ0U,UAAQ1U,IAASA,EAAKtpB,QA9Cf,gBA8CsC,IACpD,IAqBH,MAAO,CACLi+B,yBApB+Bl1B,eAAY,SAACm1B,GAC5C,IACE,IAAMC,EAAapoB,SAASqoB,eAAeF,GACrCG,EAAStoB,SAASunB,cAAc,UACtCe,EAAOp7B,MAAQk7B,EAAWl7B,MAC1Bo7B,EAAOl7B,OAASg7B,EAAWh7B,OAC3B,IAAMm7B,EAAMD,EAAOb,WAAW,MAI9B,aAHAc,GAAAA,EAAKb,UAAUU,EAAY,EAAG,GACdE,EAAOX,UAAU,aAGjC,MAAOC,GAIP,YAHIh5B,GACF1G,QAAQC,0CAA2Cy/B,EAAcjH,iBAIpE,IAIDqH,cAAAA,EACAtB,eAAAA,EACAhB,iBAAAA,wM0DjE6B,WAC/B,IAAQ19B,EAA6B5E,IAA7B4E,yBAgCFwgC,EAAc,SAACC,GACnB,MAA0B,iBAAfA,GAbYC,EAcED,IAbnBE,EAAgBjX,OAAKkX,GAAyB,SAACC,GAAmB,OAAKA,EAAGC,KAAOJ,MACpDC,EAAUI,aAAe,OACrC,IAGkB,SAACC,GAC1C,IAAML,EAAgBjX,OAAKkX,GAAyB,SAACC,GAAmB,OAAKA,EAAGI,kBAAoBD,KAEpG,OADuBL,EAAYA,EAAUI,aAAe,OACrC,GAOdG,CAAmCT,GAhBtB,IAACC,EACjBC,GA+FR,MAAO,CACLQ,qBA/G2B,WAC3B,IACE,OAAOvY,KAAKC,iBAAiBC,kBAAkBpC,SAASxjB,WACxD,MAAO/C,GAIP,OAHAD,QAAQC,uIAGD,OAyGTgsB,eA3EqB,SAACxL,EAA8B8f,GACpD,IAAM/Z,EAAW8Z,EAAYC,GAC7B,IAAK/Z,EACH,MAAM0a,+GAIR,OAAOC,iBAA2B1gB,EAAM+F,IAqExC4a,eA/DqB,SAAC3gB,EAA8B8f,GACpD,IAAM/Z,EAAW8Z,EAAYC,GAC7B,IAAK/Z,EACH,MAAM0a,+GAIR,OAAOC,iBAA2B1gB,EAAM+F,IAyDxC6a,qBAnD2B,SAC3BC,EACAd,EACAtmB,EACAna,GAEA,IAAMwhC,EAAU,IAAIvkB,KAAKskB,GACnB9a,EAAW8Z,EAAYE,GAC7B,IAAKha,EACH,MAAM0a,qHAIR,IAAMM,EAAsCzhC,EAAcD,EAAyBC,QAAewG,EAG5Fk7B,EAAYN,iBAA2BI,EAAS/a,GAItD,OAAO2a,SAAmBM,EAAWvnB,EAAQ,CAAEsM,SAAUA,EAAUgb,OAAQA,KAgC3EE,qBA7B2B,SAACH,EAAiBhB,EAAoBxgC,EAAsB4hC,GACvF,IAAMnb,EAAW8Z,EAAYC,GAC7B,IAAK/Z,EACH,MAAM0a,qHAIR,IAAMO,EAAYN,iBAA2BI,EAAS/a,GAChDgb,EAAsCzhC,EAAcD,EAAyBC,QAAewG,EAClG,OAAOq7B,iBAAeH,EAAW,IAAIzkB,KAAQ,CAAE6kB,gBAAWF,GAAAA,EAAkBH,OAAQA,KAqBpFM,kBAlBwB,SAACP,EAAiBhB,EAA6BxgC,GACvE,IAAMymB,EAAW8Z,EAAYC,GAC7B,IAAK/Z,EACH,MAAM0a,kHAIR,IAAMO,EAAYN,iBAA2BI,EAAS/a,GAChDgb,EAAsCzhC,EAAcD,EAAyBC,QAAewG,EAClG,OAAOw7B,iBAAeN,EAAW,IAAIzkB,KAAQ,CAAEuS,aAAc,EAAGiS,OAAQA"}