import * as React from 'react';

import {
  AvatarGroup,
  AvatarGroupItem,
  AvatarGroupPopover,
  Caption1,
  Image,
  partitionAvatarGroupItems,
} from '@fluentui/react-components';
import { CalendarDayRegular, LocationRegular, PersonRegular } from '@fluentui/react-icons';

import { Card } from '../Card';
import { IEvent } from './IEvents';
import { RenderLabel } from '../RenderLabel';
import { Stack } from '../Stack';
import { format } from 'date-fns';

export interface IDefaultPopoverCardProps {
  event: IEvent;
}

export const DefaultPopoverCard: React.FunctionComponent<IDefaultPopoverCardProps> = (
  props: React.PropsWithChildren<IDefaultPopoverCardProps>
) => {
  const { event } = props;
  const { title, start, end, category, imageUrl, location, attendees } = event;
  const partitionedItems = partitionAvatarGroupItems({
    items: attendees ? attendees?.map(attendee => attendee.name) : [],
  });

  const renderAttendees = React.useCallback(():JSX.Element => {
    return (
      <AvatarGroup layout="stack">
        {partitionedItems.inlineItems.map(name => (
          <AvatarGroupItem name={name} key={name} />
        ))}
        {partitionedItems.overflowItems && (
          <AvatarGroupPopover>
            {partitionedItems.overflowItems.map(name => (
              <AvatarGroupItem name={name} key={name} />
            ))}
          </AvatarGroupPopover>
        )}
      </AvatarGroup>
    );
  }, [partitionedItems]);

  return (
    <>
     
      <Card
        padding="m"
        maxWidth={'250px'}
        cardPreviewPosition="afterHeader"
        cardHeader={title}
        cardHeaderDescription={category}
        cardPreviewImage={
          <Image
            src={imageUrl}
            alt={title}
            width="100%"
            height="100px"
            fit="cover"
          />
        }
        cardBody={
          <Stack RowGap={10}>
            <RenderLabel label="Start" icon={<CalendarDayRegular />} />
            <Caption1> {format(new Date(start), 'HH:mm')}</Caption1>
            <RenderLabel label="End" icon={<CalendarDayRegular />} />
            <Caption1>{format(new Date(end), 'HH:mm')}</Caption1>
            <RenderLabel label="Location" icon={<LocationRegular />} />
            <Caption1>{location}</Caption1>
            <RenderLabel label="Attendees" icon={<PersonRegular /> } />
            {renderAttendees()}
          </Stack>
        }
      />
       
    </>
  );
};
