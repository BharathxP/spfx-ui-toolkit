import * as React from 'react';
import {ResizeObserver} from '@juggle/resize-observer';
import { ISpaceProps } from './ISpaceProps';
import { useSpaceStyles } from './useSpaceStyles';
 
export const Space = (
  props: React.PropsWithChildren<ISpaceProps>
) :JSX.Element => {
  

  const ref = React.useRef<HTMLDivElement>(null);
  const [width, setWidth] = React.useState(0);
 
  const {spaceStyles } = useSpaceStyles(props);
 
  React.useEffect(() => {
    let resizeObserver:ResizeObserver  ; 
    if (ref.current) {
      // observer to detect changes in the size of the container 
        resizeObserver = new  ResizeObserver((entries) => {
        for (const entry of entries) {
          const { width,   } = entry.contentRect;
          setWidth(width);
          
        }
      });
      resizeObserver.observe(ref.current);
    }
    return () => {
      if (resizeObserver) {
        resizeObserver.disconnect();
      }
    }
  }, []);
  
 
  return (
    <>
     <div  id="-space"   style={spaceStyles(width, )} ref={ref} >
       
      </div>
    </>
  );
};
