/* eslint-disable @typescript-eslint/explicit-function-return-type */
import * as React from 'react';


import { IStackProps } from './IStackProps';
import { useComponentUtils } from '../../utils';

export const useStackStyles = (props: IStackProps) => {
  const { horizontal, horizontalAlign, verticalAlign, verticalFill, wrap, columnGap, RowGap } = props;
  const { getBaseStyles } = useComponentUtils();

  const stackStyles = React.useCallback(
    (containerWidth: number, containerHeight: number): React.CSSProperties => {
      const alignValue =  verticalAlign || "start";
      const justifyValue = horizontal ? horizontalAlign : "start";

      const wflexFlow: React.CSSProperties | undefined = horizontal
        ? { flexFlow: wrap ? "row wrap" : "row nowrap", height: "100%" }
        : { height: "100%", maxHeight: "100%" };

      const baseStyles = getBaseStyles(props, containerWidth, containerHeight);

      return {
        columnGap: columnGap,
        rowGap: RowGap,
        display: "flex",
        flexDirection: horizontal ? "row" : "column",
        alignItems: alignValue,
        justifyContent: justifyValue,
        ...wflexFlow,
        height: verticalFill ? "100%" : baseStyles.height,
        ...baseStyles,
        ...props.styles,
      };
    },
    [getBaseStyles, horizontal, horizontalAlign, props, verticalAlign, verticalFill, wrap]
  );

  return { stackStyles };
};

